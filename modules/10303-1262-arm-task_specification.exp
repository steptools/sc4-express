(*
 $Id$
 ISO TC184/SC4/WG12 N3181 - ISO/TS 10303-1262 Task specification - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2447
*) 


SCHEMA Task_specification_arm;

USE FROM Activity_method_arm;    -- ISO/TS 10303-1049

USE FROM Activity_method_assignment_arm;    -- ISO/TS 10303-1249

USE FROM Classification_assignment_arm;    -- ISO/TS 10303-1114

USE FROM Condition_arm;    -- ISO/TS 10303-1253

USE FROM State_definition_arm;    -- ISO/TS 10303-1255

USE FROM State_observed_arm;    -- ISO/TS 10303-1256


TYPE constraint_context = EXTENSIBLE GENERIC_ENTITY SELECT
   (Task_element, 
    Task_method_version);
END_TYPE; 

TYPE method_or_method_version = SELECT
   (Task_method, 
    Task_method_version);
END_TYPE; 

TYPE state_or_state_definition_select = SELECT
   (Applied_state_assignment, 
    Applied_state_definition_assignment, 
    State, 
    State_definition);
END_TYPE; 

TYPE task_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH 
   (Activity_method, 
    Activity_method_relationship, 
    Applied_activity_method_assignment, 
    Task_element_state_relationship, 
    Task_method, 
    Task_method_state_relationship, 
    Task_objective, 
    Task_objective_state_relationship);
END_TYPE; 

TYPE task_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON activity_method_item;
END_TYPE; 

ENTITY Advisory_task_step
  SUBTYPE OF (Task_step);
END_ENTITY;

ENTITY Concurrent_elements
  SUBTYPE OF (Structured_task_element);
  elements : SET[2:?] OF Task_element;
END_ENTITY;

ENTITY Decision_point
  SUBTYPE OF (Structured_task_element);
  condition : Condition;
  true_case_element : OPTIONAL Task_element;
  false_case_element : OPTIONAL Task_element;
  unknown_case_element : OPTIONAL Task_element;
END_ENTITY;

ENTITY Element_constraint
  SUBTYPE OF (Task_element_relationship);
  applies_in : OPTIONAL constraint_context;
END_ENTITY;

ENTITY End_task
  SUBTYPE OF (Task_element);
END_ENTITY;

ENTITY Exit_loop
  SUBTYPE OF (Task_element);
END_ENTITY;

ENTITY Looping_element
  SUPERTYPE OF (ONEOF (Repeat_count,
                       Repeat_until,
                       Repeat_while))
  SUBTYPE OF (Structured_task_element);
  repeated_element : Task_element;
END_ENTITY;

ENTITY Repeat_count
  SUBTYPE OF (Looping_element);
  count : INTEGER;
END_ENTITY;

ENTITY Repeat_until
  SUBTYPE OF (Looping_element);
  condition : Condition;
END_ENTITY;

ENTITY Repeat_while
  SUBTYPE OF (Looping_element);
  condition : Condition;
END_ENTITY;

ENTITY Simultaneous_elements
  SUBTYPE OF (Concurrent_elements);
END_ENTITY;

ENTITY Structured_task_element
  ABSTRACT SUPERTYPE OF (ONEOF (Concurrent_elements,
                                Decision_point,
                                Looping_element,
                                Task_element_sequence))
  SUBTYPE OF (Task_element);
END_ENTITY;

ENTITY Task_element
  ABSTRACT SUPERTYPE OF (ONEOF (End_task,
                                Exit_loop,
                                Structured_task_element,
                                Task_element_levels,
                                Task_invocation,
                                Task_step))
  SUBTYPE OF (Activity_method);
  notes : OPTIONAL LIST[1:?] OF Advisory_task_step;
END_ENTITY;

ENTITY Task_element_assignment
  SUBTYPE OF (Applied_activity_method_assignment);
  SELF\Applied_activity_method_assignment.assigned_activity_method RENAMED assigned_task_element : Task_element;
  SELF\Applied_activity_method_assignment.items : SET[1:?] OF task_item;
END_ENTITY;

ENTITY Task_element_levels
  SUBTYPE OF (Task_element);
  alternatives : SET[2:?] OF Task_element;
END_ENTITY;

ENTITY Task_element_relationship
  SUBTYPE OF (Activity_method_relationship);
  SELF\Activity_method_relationship.relating_method : Task_element;
  SELF\Activity_method_relationship.related_method : Task_element;
END_ENTITY;

ENTITY Task_element_sequence
  SUBTYPE OF (Structured_task_element);
  elements : LIST[2:?] OF Task_element;
END_ENTITY;

ENTITY Task_element_state_relationship;
  state : state_or_state_definition_select;
  task_element : Task_element;
END_ENTITY;

ENTITY Task_invocation
  SUBTYPE OF (Task_element);
  task_method : method_or_method_version;
END_ENTITY;

ENTITY Task_method
  SUBTYPE OF (Activity_method);
  objective : SET[0:?] OF Task_objective;
END_ENTITY;

ENTITY Task_method_assignment
  SUBTYPE OF (Applied_activity_method_assignment);
  SELF\Applied_activity_method_assignment.assigned_activity_method : Task_method;
  SELF\Applied_activity_method_assignment.items : SET[1:?] OF task_item;
END_ENTITY;

ENTITY Task_method_relationship
  SUBTYPE OF (Activity_method_relationship);
  SELF\Activity_method_relationship.relating_method : Task_method;
  SELF\Activity_method_relationship.related_method : Task_method;
END_ENTITY;

ENTITY Task_method_state_relationship;
  state : state_or_state_definition_select;
  task_method : Task_method_version;
END_ENTITY;

ENTITY Task_method_version
  SUBTYPE OF (Activity_method);
  content : OPTIONAL Task_element;
  of_task_method : Task_method;
END_ENTITY;

ENTITY Task_method_version_assignment
  SUBTYPE OF (Applied_activity_method_assignment);
  SELF\Applied_activity_method_assignment.assigned_activity_method RENAMED assigned_task_method : Task_method_version;
  SELF\Applied_activity_method_assignment.items : SET[1:?] OF task_item;
END_ENTITY;

ENTITY Task_method_version_relationship
  SUBTYPE OF (Activity_method_relationship);
  SELF\Activity_method_relationship.relating_method RENAMED relating_task_method : Task_method_version;
  SELF\Activity_method_relationship.related_method RENAMED related_task_method : Task_method_version;
END_ENTITY;

ENTITY Task_objective;
  name : STRING;
  description : STRING;
END_ENTITY;

ENTITY Task_objective_state_relationship;
  state : state_or_state_definition_select;
  task_objective : Task_objective;
END_ENTITY;

ENTITY Task_step
  SUBTYPE OF (Task_element);
  SELF\Activity_method.description RENAMED step_text : STRING;
END_ENTITY;

SUBTYPE_CONSTRAINT restrict_activity_method_relationship FOR Activity_method_relationship;
  ONEOF (Task_element_relationship,
         Task_method_relationship,
         Task_method_version_relationship);
END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT restrict_activity_method_subtypes FOR Activity_method;
  ONEOF (Task_element,
         Task_method,
         Task_method_version);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;  -- Task_specification_arm
