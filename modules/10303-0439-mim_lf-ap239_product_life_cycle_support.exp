(*
 $Id$
 ISO TC184/SC4/WG3 N1568 - ISO/TS 10303-439 AP239 product life cycle support - EXPRESS MIM Long form
 Supersedes ISO TC184/SC4/WG3 N1402
*) 

(* ===================================================================================== *)
(* Long form schema generated by PDTec LongformGenerator V 3.1-15 *)
(* generated at 2005-01-17 16:16:05 *)
(* ===================================================================================== *)


SCHEMA AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF;
 
(* Original schemas: 
  schema = action_schema ;
  schema = activity_as_realized_mim ;
  schema = activity_characterized_mim ;
  schema = activity_method_assignment_mim ;
  schema = activity_method_characterized_mim ;
  schema = activity_method_implementation_mim ;
  schema = activity_method_mim ;
  schema = activity_mim ;
  schema = alias_identification_mim ;
  schema = ap239_activity_recording_mim ;
  schema = ap239_document_management_mim ;
  schema = ap239_management_resource_information_mim ;
  schema = ap239_part_definition_information_mim ;
  schema = ap239_product_definition_information_mim ;
  schema = ap239_product_life_cycle_support_mim ;
  schema = ap239_product_status_recording_mim ;
  schema = ap239_properties_mim ;
  schema = ap239_task_specification_resourced_mim ;
  schema = ap239_work_definition_mim ;
  schema = application_context_schema ;
  schema = approval_mim ;
  schema = approval_schema ;
  schema = assembly_structure_mim ;
  schema = attachment_slot_mim ;
  schema = attribute_classification_mim ;
  schema = basic_attribute_schema ;
  schema = certification_mim ;
  schema = certification_schema ;
  schema = class_mim ;
  schema = classification_assignment_mim ;
  schema = classification_schema ;
  schema = condition_characterized_mim ;
  schema = condition_evaluation_characterized_mim ;
  schema = condition_evaluation_mim ;
  schema = condition_mim ;
  schema = configuration_effectivity_mim ;
  schema = configuration_item_mim ;
  schema = configuration_management_schema ;
  schema = contextual_shape_positioning_mim ;
  schema = contract_mim ;
  schema = contract_schema ;
  schema = date_time_assignment_mim ;
  schema = date_time_mim ;
  schema = date_time_schema ;
  schema = document_and_version_identification_mim ;
  schema = document_assignment_mim ;
  schema = document_definition_mim ;
  schema = document_management_mim ;
  schema = document_properties_mim ;
  schema = document_schema ;
  schema = document_structure_mim ;
  schema = effectivity_application_mim ;
  schema = effectivity_mim ;
  schema = effectivity_schema ;
  schema = elemental_geometric_shape_mim ;
  schema = envelope_mim ;
  schema = event_assignment_mim ;
  schema = event_mim ;
  schema = experience_mim ;
  schema = experience_schema ;
  schema = extended_measure_representation_mim ;
  schema = external_class_mim ;
  schema = external_item_identification_assignment_mim ;
  schema = external_model_mim ;
  schema = external_reference_schema ;
  schema = file_identification_mim ;
  schema = foundation_representation_mim ;
  schema = functional_breakdown_mim ;
  schema = geometric_model_schema ;
  schema = geometry_schema ;
  schema = group_mim ;
  schema = group_schema ;
  schema = hybrid_breakdown_mim ;
  schema = identification_assignment_mim ;
  schema = independent_property_mim ;
  schema = independent_property_representation_mim ;
  schema = information_rights_mim ;
  schema = interface_lifecycle_mim ;
  schema = interface_mim ;
  schema = justification_mim ;
  schema = location_assignment_characterized_mim ;
  schema = location_assignment_mim ;
  schema = location_mim ;
  schema = location_schema ;
  schema = management_resource_information_mim ;
  schema = management_resources_schema ;
  schema = material_property_definition_schema ;
  schema = material_property_representation_schema ;
  schema = measure_representation_mim ;
  schema = measure_schema ;
  schema = message_mim ;
  schema = method_definition_schema ;
  schema = multi_linguism_mim ;
  schema = name_assignment_mim ;
  schema = observation_mim ;
  schema = organization_type_mim ;
  schema = part_and_version_identification_mim ;
  schema = part_definition_relationship_mim ;
  schema = part_view_definition_mim ;
  schema = person_organization_assignment_mim ;
  schema = person_organization_mim ;
  schema = person_organization_schema ;
  schema = physical_breakdown_mim ;
  schema = plib_class_reference_mim ;
  schema = position_in_organization_mim ;
  schema = probability_distribution_mim ;
  schema = probability_mim ;
  schema = process_property_assignment_mim ;
  schema = process_property_representation_schema ;
  schema = process_property_schema ;
  schema = product_as_individual_mim ;
  schema = product_breakdown_mim ;
  schema = product_categorization_mim ;
  schema = product_concept_identification_mim ;
  schema = product_concept_schema ;
  schema = product_definition_schema ;
  schema = product_group_mim ;
  schema = product_identification_mim ;
  schema = product_property_definition_schema ;
  schema = product_property_representation_schema ;
  schema = product_relationship_mim ;
  schema = product_replacement_mim ;
  schema = product_structure_mim ;
  schema = product_structure_schema ;
  schema = product_version_mim ;
  schema = product_version_relationship_mim ;
  schema = product_view_definition_mim ;
  schema = product_view_definition_properties_mim ;
  schema = product_view_definition_relationship_mim ;
  schema = project_mim ;
  schema = property_assignment_mim ;
  schema = qualifications_mim ;
  schema = qualifications_schema ;
  schema = qualified_measure_schema ;
  schema = representation_schema ;
  schema = required_resource_characterized_mim ;
  schema = required_resource_mim ;
  schema = requirement_assignment_mim ;
  schema = requirement_identification_and_version_mim ;
  schema = requirement_management_mim ;
  schema = requirement_view_definition_mim ;
  schema = requirement_view_definition_relationship_mim ;
  schema = resource_as_realized_characterized_mim ;
  schema = resource_as_realized_mim ;
  schema = resource_item_characterized_mim ;
  schema = resource_item_mim ;
  schema = resource_management_characterized_mim ;
  schema = resource_management_mim ;
  schema = resource_property_assignment_mim ;
  schema = scheme_mim ;
  schema = security_classification_mim ;
  schema = security_classification_schema ;
  schema = selected_item_mim ;
  schema = set_theory_mim ;
  schema = set_theory_schema ;
  schema = shape_property_assignment_mim ;
  schema = single_part_representation_mim ;
  schema = state_characterized_mim ;
  schema = state_definition_mim ;
  schema = state_observed_mim ;
  schema = state_observed_schema ;
  schema = state_type_schema ;
  schema = support_resource_schema ;
  schema = system_breakdown_mim ;
  schema = task_specification_mim ;
  schema = time_interval_assignment_mim ;
  schema = time_interval_mim ;
  schema = topology_schema ;
  schema = type_of_person_mim ;
  schema = value_with_unit_mim ;
  schema = work_order_characterized_mim ;
  schema = work_order_mim ;
  schema = work_output_characterized_mim ;
  schema = work_output_mim ;
  schema = work_request_characterized_mim ;
  schema = work_request_mim ;
  schema = zonal_breakdown_mim ;
*)
 
CONSTANT
  dummy_gri : geometric_representation_item := representation_item('')||
  geometric_representation_item(); (* declared in: geometry_schema *)
END_CONSTANT;
 
TYPE action_items = SELECT 
  (action, action_directive, action_method, action_method_relationship, 
  action_property, action_property_representation, action_relationship, 
  action_resource, action_resource_relationship, action_resource_requirement, 
  address, alternate_product_relationship, applied_action_assignment, 
  applied_action_method_assignment, applied_approval_assignment, 
  applied_certification_assignment, applied_classification_assignment, 
  applied_contract_assignment, applied_date_and_time_assignment, 
  applied_date_assignment, applied_document_reference, 
  applied_document_usage_constraint_assignment, 
  applied_identification_assignment, applied_location_representation_assignment
  , applied_organization_assignment, applied_person_and_organization_assignment
  , applied_security_classification_assignment, 
  applied_state_observed_assignment, applied_state_type_assignment, 
  applied_usage_right, approval, ascribable_state, assembly_component_usage, 
  assembly_component_usage_substitute, attachment_slot_design_to_planned, 
  attachment_slot_design_to_realized, attachment_slot_on_product, 
  breakdown_element_group_assignment, breakdown_element_usage, calendar_date, 
  certification, configuration_item, contract, date_and_time, 
  descriptive_representation_item, document_file, document_relationship, 
  effectivity, envelope, event_occurrence, general_property, group, 
  hierarchical_interface_connection, interface_connection, 
  interface_connector_as_planned, interface_connector_as_realized, 
  interface_connector_design, interface_connector_occurrence, 
  interface_definition_connection, interface_definition_for, location, 
  measure_representation_item, observation_consequence, organization, 
  organizational_project, person, person_and_organization, 
  position_in_organization, product, product_as_individual, 
  product_as_individual_view, product_as_planned, product_as_realized, 
  product_concept, product_definition, product_definition_element_relationship
  , product_definition_formation, product_definition_formation_relationship, 
  product_definition_group_assignment, product_definition_relationship, 
  product_group, product_group_membership, product_group_relationship, 
  product_related_product_category, property_definition, 
  property_definition_representation, representation, requirement_assignment, 
  resource_property, resource_property_representation, security_classification
  , state_observed, state_observed_assignment, state_observed_relationship, 
  state_type, statechar_action_items, structured_message, task_element, 
  task_method, task_method_version, task_objective, versioned_action_request);
END_TYPE; (* declared in: activity_mim *)
 
TYPE action_method_items = SELECT 
  (action, action_actual, action_method, action_method_assignment, 
  action_method_relationship, action_property, action_property_representation, 
  action_relationship, action_resource, action_resource_relationship, 
  action_resource_requirement, action_resource_requirement_relationship, 
  applied_action_assignment, applied_action_method_assignment, 
  applied_approval_assignment, applied_certification_assignment, 
  applied_classification_assignment, applied_contract_assignment, 
  applied_date_and_time_assignment, applied_date_assignment, 
  applied_document_reference, applied_document_usage_constraint_assignment, 
  applied_identification_assignment, applied_location_representation_assignment
  , applied_organization_assignment, applied_person_and_organization_assignment
  , applied_state_observed_assignment, applied_state_type_assignment, approval
  , breakdown_element_usage, calendar_date, configuration_item, contract, 
  date_and_time, document_file, envelope, event_occurrence, group, 
  hierarchical_interface_connection, interface_connection, 
  interface_connector_occurrence, interface_definition_connection, location, 
  observation_consequence, organization, organization_role, organization_type, 
  organizational_project, person, person_and_organization, person_type, 
  person_type_definition, position_in_organization, 
  position_in_organization_type, product, product_as_individual, 
  product_as_individual_version, product_as_individual_view, product_concept, 
  product_definition, product_definition_element_relationship, 
  product_definition_formation, product_definition_formation_relationship, 
  product_definition_relationship, product_group, product_group_membership, 
  product_group_relationship, product_related_product_category, 
  property_definition, property_definition_representation, representation, 
  resource_property, resource_property_representation, state_observed, 
  state_observed_relationship, state_type, state_type_relationship, 
  structured_message);
END_TYPE; (* declared in: activity_method_assignment_mim *)
 
TYPE action_request_item = SELECT 
  (action_method, action_property, action_resource, contract, document_file, 
  interface_connection, interface_connector_occurrence, 
  interface_definition_connection, organization, person, 
  person_and_organization, product, product_definition, 
  product_definition_formation, product_definition_relationship, product_group
  , property_definition, resource_property);
END_TYPE; (* declared in: work_request_mim *)
 
TYPE ahead_or_behind = ENUMERATION OF 
  (ahead, exact, behind);
END_TYPE; (* declared in: date_time_schema *)
 
TYPE amount_of_substance_measure = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE approval_item = SELECT 
  (action, action_directive, action_method, action_method_relationship, 
  action_property, action_request_solution, action_resource, 
  action_resource_relationship, action_resource_requirement, 
  action_resource_requirement_relationship, alternate_product_relationship, 
  applied_action_assignment, applied_action_method_assignment, 
  applied_action_request_assignment, applied_certification_assignment, 
  applied_classification_assignment, applied_contract_assignment, 
  applied_date_and_time_assignment, applied_date_assignment, 
  applied_document_reference, applied_document_usage_constraint_assignment, 
  applied_effectivity_assignment, applied_event_occurrence_assignment, 
  applied_experience_assignment, applied_identification_assignment, 
  applied_location_assignment, applied_organization_assignment, 
  applied_organization_type_assignment, 
  applied_organizational_project_assignment, 
  applied_person_and_organization_assignment, applied_person_type_assignment, 
  applied_position_in_organization_assignment, 
  applied_position_in_organization_group_assignment, 
  applied_position_in_organization_type_assignment, 
  applied_qualification_type_assignment, 
  applied_security_classification_assignment, applied_state_observed_assignment
  , applied_state_type_assignment, applied_usage_right, 
  assembly_component_usage, assembly_component_usage_substitute, 
  attachment_slot_as_planned, attachment_slot_as_realized, 
  attachment_slot_design, attachment_slot_design_to_planned, 
  attachment_slot_design_to_realized, attachment_slot_on_product, 
  attachment_slot_planned_to_realized, breakdown_element_group_assignment, 
  breakdown_element_usage, certification, configuration_item, contract, 
  descriptive_representation_item, directed_action, effectivity, envelope, 
  event_occurrence, executed_action, experience_type, general_property, 
  general_property_relationship, group, in_zone, information_usage_right, 
  interface_connection, interface_connector_as_planned, 
  interface_connector_as_realized, interface_connector_definition, 
  interface_connector_design, interface_connector_design_to_planned, 
  interface_connector_design_to_realized, interface_connector_occurrence, 
  interface_connector_planned_to_realized, interface_connector_version, 
  interface_definition_for, interface_specification_definition, 
  interface_specification_version, justification_group_assignment, 
  justification_support_assignment, measure_representation_item, observation, 
  organization_relationship, organizational_address, organizational_project, 
  person_and_organization, person_and_organization_address, person_type, 
  position_in_organization, position_in_organization_type, product, 
  product_as_individual, product_as_planned, product_as_realized, 
  product_concept, product_definition, product_definition_context, 
  product_definition_element_relationship, product_definition_formation, 
  product_definition_formation_relationship, 
  product_definition_group_assignment, product_definition_relationship, 
  product_design_to_individual, product_design_version_to_individual, 
  product_group, product_group_membership, product_group_relationship, 
  product_in_attachment_slot, product_planned_to_realized, 
  product_related_product_category, product_relationship, property_definition, 
  property_definition_relationship, qualification_type, requirement_assignment
  , requirement_source, resource_property, security_classification, 
  selected_item_assignment, structured_message, versioned_action_request);
END_TYPE; (* declared in: approval_mim *)
 
TYPE area_measure = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE attribute_classification_item = SELECT 
  (action, action_directive, action_method, action_method_relationship, 
  action_property, action_property_representation, action_relationship, 
  action_request_solution, action_request_status, action_resource, 
  action_resource_relationship, action_resource_requirement, 
  action_resource_requirement_relationship, address, 
  alternate_product_relationship, application_context, 
  application_context_element, applied_action_assignment, 
  applied_action_method_assignment, applied_action_request_assignment, 
  applied_location_representation_assignment, approval, approval_relationship, 
  approval_role, approval_status, breakdown_context, 
  breakdown_element_group_assignment, breakdown_element_usage, certification, 
  certification_type, context_dependent_unit, contract_type, 
  conversion_based_unit, date_role, date_time_role, derived_unit, 
  descriptive_representation_item, document_relationship, document_type, 
  document_usage_role, effectivity, effectivity_relationship, envelope, 
  envelope_relationship, event_occurrence_context_role, 
  event_occurrence_relationship, executed_action, general_property, 
  general_property_relationship, group, identification_role, information_right
  , information_usage_right, interface_connection, 
  interface_connector_definition, interface_definition_connection, 
  interface_specification_definition, location, location_relationship, 
  measure_representation_item, measure_with_unit, message_relationship, 
  name_attribute, named_unit, object_role, organization_relationship, 
  organization_role, organizational_address, 
  organizational_project_relationship, organizational_project_role, 
  person_and_organization_address, person_and_organization_role, product, 
  product_category, product_concept, product_concept_context, product_context, 
  product_definition, product_definition_context, 
  product_definition_formation_relationship, 
  product_definition_group_assignment, product_definition_relationship, 
  product_design_version_to_individual, product_relationship, 
  property_definition, property_definition_relationship, 
  property_definition_representation, representation, representation_context, 
  representation_item, resource_property, resource_property_representation, 
  security_classification_level, state_observed, state_observed_assignment, 
  state_observed_relationship, state_type, state_type_assignment, 
  state_type_relationship, structured_message, time_interval_relationship, 
  uncertainty_measure_with_unit, usage_association, versioned_action_request);
END_TYPE; (* declared in: attribute_classification_mim *)
 
TYPE attribute_language_item = SELECT 
  (action, action_directive, action_method, action_method_relationship, 
  action_property, action_relationship, action_request_solution, 
  action_resource, action_resource_relationship, action_resource_requirement, 
  action_resource_requirement_relationship, address, applied_action_assignment
  , applied_action_method_assignment, applied_document_reference, 
  applied_document_usage_constraint_assignment, applied_experience_assignment, 
  applied_external_identification_assignment, applied_location_assignment, 
  applied_location_representation_assignment, 
  applied_organizational_project_assignment, applied_person_type_assignment, 
  approval, approval_relationship, approval_status, attribute_value_assignment
  , certification, certification_type, contract, date_role, date_time_role, 
  document_relationship, document_usage_role, envelope, envelope_relationship, 
  event_occurrence, executed_action, experience_type, external_source, 
  general_property, general_property_relationship, group, identification_role, 
  information_right, information_usage_right, interface_connection, 
  interface_connector_occurrence, interface_definition_connection, 
  interface_definition_for, justification_group_assignment, 
  justification_support_assignment, location, location_relationship, 
  measure_representation_item, message_relationship, 
  multi_language_attribute_assignment, object_role, observation, 
  observation_consequence, organization_relationship, organization_type, 
  organizational_project, organizational_project_relationship, 
  organizational_project_role, person_and_organization, person_type, 
  person_type_definition, person_type_definition_relationship, 
  position_in_organization, position_in_organization_assignment, 
  position_in_organization_relationship, position_in_organization_type, product
  , product_as_individual, product_as_individual_version, 
  product_as_individual_view, product_category, product_definition, 
  product_definition_formation, product_definition_formation_relationship, 
  product_definition_relationship, product_group, product_group_relationship, 
  product_relationship, property_definition, property_definition_relationship, 
  qualification_type, representation, representation_item, 
  requirement_assignment, requirement_source, resource_property, state_observed
  , state_observed_relationship, state_type, state_type_relationship, 
  structured_message);
END_TYPE; (* declared in: multi_linguism_mim *)
 
TYPE attribute_select = SELECT 
  (product_group_context, product_group_purpose);
END_TYPE; (* declared in: product_group_mim *)
 
TYPE attribute_type = SELECT 
  (label, text);
END_TYPE; (* declared in: management_resources_schema *)
 
TYPE celsius_temperature_measure = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE certification_item = SELECT 
  (action, action_method, action_resource, applied_action_method_assignment, 
  applied_qualification_type_assignment, configuration_item, 
  interface_connection, interface_connector_version, 
  interface_definition_connection, interface_specification_version, 
  organizational_project, product, product_as_individual, product_as_planned, 
  product_as_realized, product_definition_formation, 
  product_definition_formation_relationship, product_definition_relationship, 
  product_group, product_group_relationship);
END_TYPE; (* declared in: certification_mim *)
 
TYPE characterized_action_definition = SELECT 
  (action, action_method, action_method_relationship, action_relationship);
END_TYPE; (* declared in: process_property_schema *)
 
TYPE characterized_definition = SELECT 
  (characterized_object, characterized_product_definition, shape_definition);
END_TYPE; (* declared in: product_property_definition_schema *)
 
TYPE characterized_product_definition = SELECT 
  (product_definition, product_definition_relationship);
END_TYPE; (* declared in: product_property_definition_schema *)
 
TYPE characterized_resource_definition = SELECT 
  (action_resource, action_resource_relationship, action_resource_requirement, 
  action_resource_requirement_relationship);
END_TYPE; (* declared in: process_property_schema *)
 
TYPE classification_item = SELECT 
  (action, action_directive, action_method, action_method_assignment, 
  action_method_relationship, action_property, action_property_representation, 
  action_relationship, action_request_solution, action_request_status, 
  action_resource, action_resource_relationship, action_resource_requirement, 
  action_resource_requirement_relationship, action_status, address, 
  alternate_product_relationship, applied_action_assignment, 
  applied_action_method_assignment, applied_action_request_assignment, 
  applied_approval_assignment, applied_certification_assignment, 
  applied_contract_assignment, applied_date_and_time_assignment, 
  applied_date_assignment, applied_document_reference, 
  applied_document_usage_constraint_assignment, applied_effectivity_assignment
  , applied_event_occurrence_assignment, applied_experience_assignment, 
  applied_external_identification_assignment, applied_identification_assignment
  , applied_location_assignment, applied_location_representation_assignment, 
  applied_organization_assignment, applied_organizational_project_assignment, 
  applied_person_and_organization_assignment, applied_person_type_assignment, 
  applied_person_type_definition_assignment, 
  applied_position_in_organization_assignment, 
  applied_position_in_organization_group_assignment, 
  applied_position_in_organization_type_assignment, 
  applied_qualification_type_assignment, 
  applied_security_classification_assignment, applied_state_observed_assignment
  , applied_state_type_assignment, applied_usage_right, approval, 
  approval_person_organization, approval_relationship, approval_status, 
  ascribable_state, ascribable_state_relationship, 
  assembly_component_usage_substitute, attachment_slot_design_to_planned, 
  attachment_slot_design_to_realized, attachment_slot_on_product, 
  attachment_slot_planned_to_realized, attribute_language_assignment, 
  breakdown_context, breakdown_element_group_assignment, 
  breakdown_element_usage, breakdown_of, calendar_date, certification, 
  characterized_object, class, configuration_design, configuration_effectivity
  , configuration_item, context_dependent_unit, contract, conversion_based_unit
  , date_and_time, derived_unit, descriptive_representation_item, 
  directed_action, document_file, document_relationship, effectivity, 
  effectivity_relationship, envelope, envelope_relationship, event_occurrence, 
  event_occurrence_relationship, executed_action, experience, experience_type, 
  external_class_library, general_property, general_property_relationship, 
  group, in_zone, information_right, information_usage_right, 
  interface_connection, interface_connector_as_planned, 
  interface_connector_as_realized, interface_connector_design, 
  interface_connector_design_to_planned, interface_connector_design_to_realized
  , interface_connector_occurrence, interface_connector_planned_to_realized, 
  interface_definition_connection, interface_definition_for, 
  justification_group_assignment, justification_support_assignment, language, 
  local_time, location, location_relationship, measure_representation_item, 
  measure_with_unit, message_relationship, multi_language_attribute_assignment
  , named_unit, observation, observation_consequence, observation_relationship
  , organization, organization_relationship, organization_type, 
  organizational_address, organizational_project, 
  organizational_project_relationship, person, person_and_organization, 
  person_and_organization_address, person_type, person_type_definition, 
  person_type_definition_relationship, position_in_organization, 
  position_in_organization_relationship, position_in_organization_type, product
  , product_as_planned, product_as_realized, product_category, product_concept
  , product_definition, product_definition_context, 
  product_definition_formation, product_definition_formation_relationship, 
  product_definition_group_assignment, product_definition_relationship, 
  product_definition_shape, product_design_to_individual, 
  product_design_version_to_individual, product_group, 
  product_group_relationship, product_planned_to_realized, product_relationship
  , property_definition, property_definition_relationship, 
  property_definition_representation, qualification_type, 
  qualification_type_relationship, representation, representation_context, 
  representation_item, requirement_assignment, requirement_source, 
  resource_property, resource_property_representation, security_classification
  , selected_item, selected_item_assignment, state_observed, 
  state_observed_assignment, state_observed_relationship, state_observed_role, 
  state_type, state_type_assignment, state_type_relationship, 
  structured_message, time_interval_relationship, uncertainty_measure_with_unit
  , usage_association, versioned_action_request);
END_TYPE; (* declared in: classification_assignment_mim *)
 
TYPE compound_item_definition = SELECT 
  (list_representation_item, set_representation_item);
END_TYPE; (* declared in: representation_schema *)
 
TYPE configuration_design_item = SELECT 
  (product_definition, product_definition_formation);
END_TYPE; (* declared in: configuration_management_schema *)
 
TYPE context_dependent_measure = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE contract_item = SELECT 
  (action, action_method, action_method_relationship, action_resource, 
  applied_action_assignment, applied_action_method_assignment, 
  configuration_item, external_class_library, externally_defined_class, group, 
  information_usage_right, interface_connector_as_planned, 
  interface_connector_as_realized, interface_connector_design, 
  organizational_project, product, product_as_individual, product_as_planned, 
  product_as_realized, product_definition, product_definition_formation, 
  product_definition_formation_relationship, product_definition_relationship, 
  product_group, product_group_relationship, requirement_assignment, 
  requirement_source, security_classification, structured_message);
END_TYPE; (* declared in: contract_mim *)
 
TYPE count_measure = NUMBER;
END_TYPE; (* declared in: measure_schema *)
 
TYPE date_and_time_item = SELECT 
  (action, action_directive, action_method, action_method_relationship, 
  action_property, action_property_representation, action_relationship, 
  action_request_solution, action_resource, action_resource_relationship, 
  action_resource_requirement, address, alternate_product_relationship, 
  applied_action_assignment, applied_action_method_assignment, 
  applied_action_request_assignment, applied_certification_assignment, 
  applied_classification_assignment, applied_contract_assignment, 
  applied_date_and_time_assignment, applied_date_assignment, 
  applied_document_reference, applied_document_usage_constraint_assignment, 
  applied_effectivity_assignment, applied_event_occurrence_assignment, 
  applied_experience_assignment, applied_identification_assignment, 
  applied_location_assignment, applied_location_representation_assignment, 
  applied_organization_assignment, applied_organization_type_assignment, 
  applied_organizational_project_assignment, 
  applied_person_and_organization_assignment, applied_person_type_assignment, 
  applied_position_in_organization_assignment, 
  applied_position_in_organization_group_assignment, 
  applied_position_in_organization_type_assignment, 
  applied_qualification_type_assignment, 
  applied_security_classification_assignment, applied_state_observed_assignment
  , applied_state_type_assignment, applied_usage_right, approval, 
  approval_person_organization, ascribable_state, assembly_component_usage, 
  assembly_component_usage_substitute, attachment_slot_design_to_planned, 
  attachment_slot_design_to_realized, attachment_slot_planned_to_realized, 
  breakdown_element_group_assignment, breakdown_element_usage, certification, 
  configuration_item, contract, descriptive_representation_item, 
  directed_action, document_file, effectivity, envelope, event_occurrence, 
  executed_action, experience, general_property, general_property_relationship
  , group, hierarchical_interface_connection, information_usage_right, 
  interface_connection, interface_connector_as_planned, 
  interface_connector_as_realized, interface_connector_design_to_planned, 
  interface_connector_design_to_realized, interface_connector_occurrence, 
  interface_connector_planned_to_realized, interface_definition_connection, 
  interface_definition_for, justification_group_assignment, 
  justification_support_assignment, measure_representation_item, observation, 
  organization_relationship, organizational_address, organizational_project, 
  person, person_and_organization, person_and_organization_address, product, 
  product_as_planned, product_as_realized, product_concept, product_definition
  , product_definition_context, product_definition_formation, 
  product_definition_formation_relationship, 
  product_definition_group_assignment, product_definition_relationship, 
  product_design_to_individual, product_design_version_to_individual, 
  product_group, product_group_membership, product_group_relationship, 
  product_in_attachment_slot, product_planned_to_realized, 
  product_related_product_category, product_relationship, property_definition, 
  property_definition_relationship, property_definition_representation, 
  representation, requirement_assignment, requirement_source, resource_property
  , resource_property_representation, security_classification, selected_item, 
  selected_item_assignment, state_observed, state_observed_assignment, 
  state_observed_relationship, state_type, state_type_assignment, 
  state_type_relationship, structured_message, versioned_action_request);
END_TYPE; (* declared in: date_time_assignment_mim *)
 
TYPE date_item = SELECT 
  (action, action_directive, action_method, action_method_relationship, 
  action_property, action_property_representation, action_relationship, 
  action_request_solution, action_resource, action_resource_relationship, 
  action_resource_requirement, address, alternate_product_relationship, 
  applied_action_assignment, applied_action_method_assignment, 
  applied_action_request_assignment, applied_certification_assignment, 
  applied_classification_assignment, applied_contract_assignment, 
  applied_date_and_time_assignment, applied_date_assignment, 
  applied_document_reference, applied_document_usage_constraint_assignment, 
  applied_effectivity_assignment, applied_event_occurrence_assignment, 
  applied_experience_assignment, applied_identification_assignment, 
  applied_location_assignment, applied_location_representation_assignment, 
  applied_organization_assignment, applied_organization_type_assignment, 
  applied_organizational_project_assignment, 
  applied_person_and_organization_assignment, applied_person_type_assignment, 
  applied_position_in_organization_assignment, 
  applied_position_in_organization_group_assignment, 
  applied_position_in_organization_type_assignment, 
  applied_qualification_type_assignment, 
  applied_security_classification_assignment, applied_state_observed_assignment
  , applied_state_type_assignment, applied_usage_right, approval, 
  approval_person_organization, ascribable_state, assembly_component_usage, 
  assembly_component_usage_substitute, attachment_slot_design_to_planned, 
  attachment_slot_design_to_realized, attachment_slot_planned_to_realized, 
  breakdown_element_group_assignment, breakdown_element_usage, certification, 
  configuration_item, contract, descriptive_representation_item, 
  directed_action, document_file, effectivity, envelope, event_occurrence, 
  executed_action, experience, general_property, general_property_relationship
  , group, hierarchical_interface_connection, information_usage_right, 
  interface_connection, interface_connector_as_planned, 
  interface_connector_as_realized, interface_connector_design_to_planned, 
  interface_connector_design_to_realized, interface_connector_occurrence, 
  interface_connector_planned_to_realized, interface_definition_connection, 
  interface_definition_for, justification_group_assignment, 
  justification_support_assignment, measure_representation_item, observation, 
  organization_relationship, organizational_address, organizational_project, 
  person, person_and_organization, person_and_organization_address, product, 
  product_as_planned, product_as_realized, product_concept, product_definition
  , product_definition_context, product_definition_formation, 
  product_definition_formation_relationship, 
  product_definition_group_assignment, product_definition_relationship, 
  product_design_to_individual, product_design_version_to_individual, 
  product_group, product_group_membership, product_group_relationship, 
  product_in_attachment_slot, product_planned_to_realized, 
  product_related_product_category, product_relationship, property_definition, 
  property_definition_relationship, property_definition_representation, 
  representation, requirement_assignment, requirement_source, resource_property
  , resource_property_representation, security_classification, selected_item, 
  selected_item_assignment, state_observed, state_observed_assignment, 
  state_observed_relationship, state_type, state_type_assignment, 
  state_type_relationship, structured_message, versioned_action_request);
END_TYPE; (* declared in: date_time_assignment_mim *)
 
TYPE date_time_or_event_occurrence = SELECT 
  (date_time_select, event_occurrence);
END_TYPE; (* declared in: date_time_schema *)
 
TYPE date_time_select = SELECT 
  (date, date_and_time, local_time);
END_TYPE; (* declared in: date_time_schema *)
 
TYPE day_in_month_number = INTEGER;
WHERE
  wr1 : {1 <= SELF <= 31};
END_TYPE; (* declared in: date_time_schema *)
 
TYPE day_in_week_number = INTEGER;
WHERE
  wr1 : {1 <= SELF <= 7};
END_TYPE; (* declared in: date_time_schema *)
 
TYPE day_in_year_number = INTEGER;
WHERE
  wr1 : {1 <= SELF <= 366};
END_TYPE; (* declared in: date_time_schema *)
 
TYPE derived_property_select = SELECT 
  (action_property, property_definition, resource_property);
END_TYPE; (* declared in: product_property_definition_schema *)
 
TYPE description_attribute_select = SELECT 
  (action_request_solution, application_context, approval_role, 
  configuration_design, context_dependent_shape_representation, date_role, 
  date_time_role, effectivity, external_source, organization_role, 
  person_and_organization, person_and_organization_role, person_role, 
  property_definition_representation, representation, time_role);
END_TYPE; (* declared in: basic_attribute_schema *)
 
TYPE descriptive_measure = STRING;
END_TYPE; (* declared in: measure_schema *)
 
TYPE dimension_count = INTEGER;
WHERE
  wr1 : SELF > 0;
END_TYPE; (* declared in: geometry_schema *)
 
TYPE document_reference_item = SELECT 
  (action, action_directive, action_method, action_method_relationship, 
  action_property, action_property_representation, action_resource, 
  action_resource_relationship, action_resource_requirement, 
  action_resource_requirement_relationship, address, 
  alternate_product_relationship, applied_action_assignment, 
  applied_action_method_assignment, applied_approval_assignment, 
  applied_certification_assignment, applied_contract_assignment, 
  applied_effectivity_assignment, applied_identification_assignment, 
  applied_location_assignment, applied_location_representation_assignment, 
  applied_organization_assignment, applied_person_and_organization_assignment, 
  applied_position_in_organization_assignment, 
  applied_position_in_organization_type_assignment, 
  applied_security_classification_assignment, applied_state_observed_assignment
  , applied_state_type_assignment, approval, ascribable_state, 
  assembly_component_usage, assembly_component_usage_substitute, 
  attachment_slot_design_to_planned, attachment_slot_design_to_realized, 
  attachment_slot_planned_to_realized, breakdown_context, 
  breakdown_element_group_assignment, breakdown_element_usage, certification, 
  configuration_item, contract, descriptive_representation_item, effectivity, 
  experience, experience_type, general_property, general_property_relationship
  , group, information_right, information_usage_right, interface_connection, 
  interface_connector_as_planned, interface_connector_as_realized, 
  interface_connector_design, interface_connector_design_to_planned, 
  interface_connector_design_to_realized, interface_connector_occurrence, 
  interface_connector_planned_to_realized, interface_definition_connection, 
  location, measure_representation_item, observation, observation_consequence, 
  organization, organization_type, organizational_project, person, person_type
  , person_type_definition, position_in_organization, 
  position_in_organization_type, probability_generator, product, 
  product_as_planned, product_as_realized, product_concept, 
  product_concept_context, product_definition, product_definition_formation, 
  product_definition_formation_relationship, 
  product_definition_group_assignment, product_definition_relationship, 
  product_design_to_individual, product_design_version_to_individual, 
  product_group, product_group_membership, product_group_relationship, 
  product_planned_to_realized, product_relationship, property_definition, 
  property_definition_representation, qualification_type, representation, 
  representation_item, requirement_assignment, requirement_source, 
  resource_property, resource_property_representation, security_classification
  , selected_item, shape_aspect, shape_aspect_relationship, state_observed, 
  state_type, structured_message, versioned_action_request);
END_TYPE; (* declared in: document_assignment_mim *)
 
TYPE effectivity_item = SELECT 
  (action, action_directive, action_method, action_method_assignment, 
  action_method_relationship, action_property, action_resource_relationship, 
  action_resource_requirement_relationship, alternate_product_relationship, 
  applied_action_assignment, applied_action_method_assignment, 
  applied_approval_assignment, applied_certification_assignment, 
  applied_contract_assignment, applied_date_and_time_assignment, 
  applied_date_assignment, applied_document_reference, 
  applied_document_usage_constraint_assignment, applied_effectivity_assignment
  , applied_external_identification_assignment, 
  applied_identification_assignment, applied_location_assignment, 
  applied_organization_assignment, applied_organizational_project_assignment, 
  applied_person_and_organization_assignment, applied_person_type_assignment, 
  applied_position_in_organization_assignment, 
  applied_position_in_organization_group_assignment, 
  applied_position_in_organization_type_assignment, 
  applied_security_classification_assignment, applied_usage_right, 
  assembly_component_usage, assembly_component_usage_substitute, 
  attachment_slot_as_planned, attachment_slot_as_realized, 
  attachment_slot_design, attachment_slot_design_to_planned, 
  attachment_slot_design_to_realized, attachment_slot_on_product, 
  attachment_slot_planned_to_realized, breakdown_element_group_assignment, 
  breakdown_element_usage, configuration_item, document_relationship, 
  document_type, group, interface_connection, 
  interface_connector_design_to_planned, interface_connector_design_to_realized
  , interface_connector_occurrence, interface_connector_planned_to_realized, 
  interface_definition_for, justification_group_assignment, 
  justification_support_assignment, make_from_usage_option, 
  multi_language_attribute_assignment, organization_relationship, 
  organizational_address, person_and_organization, 
  person_and_organization_address, person_type_definition_relationship, product
  , product_as_individual, product_as_individual_version, 
  product_as_individual_view, product_definition, product_definition_formation
  , product_definition_formation_relationship, 
  product_definition_group_assignment, product_definition_relationship, 
  product_design_to_individual, product_design_version_to_individual, 
  product_group, product_group_membership, product_group_relationship, 
  product_in_attachment_slot, product_planned_to_realized, product_relationship
  , property_definition, requirement_assignment, requirement_source, 
  resource_property, selected_item_assignment, state_type_assignment, 
  state_type_relationship);
END_TYPE; (* declared in: effectivity_application_mim *)
 
TYPE electric_current_measure = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE event_occurrence_item = SELECT 
  (certification, organizational_project);
END_TYPE; (* declared in: event_assignment_mim *)
 
TYPE experience_item = SELECT 
  (action_actual, action_resource, experience_type, 
  experience_type_classification_item);
END_TYPE; (* declared in: experience_mim *)
 
TYPE experience_type_classification_item = classification_item;
WHERE
  wr1 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION' IN TYPEOF(SELF));
  wr2 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_DIRECTIVE' IN 
    TYPEOF(SELF));
  wr3 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_METHOD' IN TYPEOF(
    SELF));
  wr4 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_METHOD_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr5 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_METHOD_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr6 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_PROPERTY' IN 
    TYPEOF(SELF));
  wr7 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_PROPERTY_REPRESENTATION' IN
     TYPEOF(SELF));
  wr8 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr9 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_REQUEST_SOLUTION' 
    IN TYPEOF(SELF));
  wr10 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_REQUEST_STATUS' 
    IN TYPEOF(SELF));
  wr11 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_RESOURCE' IN 
    TYPEOF(SELF));
  wr12 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_RESOURCE_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr13 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_RESOURCE_REQUIREMENT' IN 
    TYPEOF(SELF));
  wr14 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_RESOURCE_REQUIREMENT_RELATIONSHIP'
     IN TYPEOF(SELF));
  wr15 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_STATUS' IN TYPEOF
    (SELF));
  wr16 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ADDRESS' IN TYPEOF(SELF)
    );
  wr17 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ALTERNATE_PRODUCT_RELATIONSHIP' IN
     TYPEOF(SELF));
  wr18 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_ACTION_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr19 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_ACTION_METHOD_ASSIGNMENT' 
    IN TYPEOF(SELF));
  wr20 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_ACTION_REQUEST_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr21 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_APPROVAL_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr22 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_CERTIFICATION_ASSIGNMENT' 
    IN TYPEOF(SELF));
  wr23 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_CONTRACT_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr24 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_DATE_AND_TIME_ASSIGNMENT' 
    IN TYPEOF(SELF));
  wr25 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_DATE_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr26 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_DOCUMENT_REFERENCE' IN 
    TYPEOF(SELF));
  wr27 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr28 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_EFFECTIVITY_ASSIGNMENT' IN
     TYPEOF(SELF));
  wr29 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_EVENT_OCCURRENCE_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr30 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_EXPERIENCE_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr31 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr32 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_IDENTIFICATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr33 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_LOCATION_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr34 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_LOCATION_REPRESENTATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr35 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_ORGANIZATION_ASSIGNMENT' 
    IN TYPEOF(SELF));
  wr36 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr37 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr38 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_PERSON_TYPE_ASSIGNMENT' IN
     TYPEOF(SELF));
  wr39 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_PERSON_TYPE_DEFINITION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr40 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_POSITION_IN_ORGANIZATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr41 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_POSITION_IN_ORGANIZATION_GROUP_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr42 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_POSITION_IN_ORGANIZATION_TYPE_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr43 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_QUALIFICATION_TYPE_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr44 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr45 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_STATE_OBSERVED_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr46 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_STATE_TYPE_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr47 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_USAGE_RIGHT' IN 
    TYPEOF(SELF));
  wr48 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPROVAL' IN TYPEOF(SELF
    ));
  wr49 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPROVAL_PERSON_ORGANIZATION' IN 
    TYPEOF(SELF));
  wr50 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPROVAL_RELATIONSHIP' 
    IN TYPEOF(SELF));
  wr51 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPROVAL_STATUS' IN 
    TYPEOF(SELF));
  wr52 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ASCRIBABLE_STATE' IN 
    TYPEOF(SELF));
  wr53 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ASCRIBABLE_STATE_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr54 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE'
     IN TYPEOF(SELF));
  wr55 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ATTACHMENT_SLOT_DESIGN_TO_PLANNED'
     IN TYPEOF(SELF));
  wr56 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ATTACHMENT_SLOT_DESIGN_TO_REALIZED'
     IN TYPEOF(SELF));
  wr57 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ATTACHMENT_SLOT_ON_PRODUCT' IN 
    TYPEOF(SELF));
  wr58 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ATTACHMENT_SLOT_PLANNED_TO_REALIZED'
     IN TYPEOF(SELF));
  wr59 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ATTRIBUTE_LANGUAGE_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr60 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.BREAKDOWN_CONTEXT' IN 
    TYPEOF(SELF));
  wr61 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.BREAKDOWN_ELEMENT_GROUP_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr62 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.BREAKDOWN_ELEMENT_USAGE'
     IN TYPEOF(SELF));
  wr63 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.BREAKDOWN_OF' IN TYPEOF(
    SELF));
  wr64 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CALENDAR_DATE' IN TYPEOF
    (SELF));
  wr65 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CERTIFICATION' IN TYPEOF
    (SELF));
  wr66 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CHARACTERIZED_OBJECT' IN
     TYPEOF(SELF));
  wr67 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CLASS' IN TYPEOF(SELF));
  wr68 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CONFIGURATION_DESIGN' IN
     TYPEOF(SELF));
  wr69 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CONFIGURATION_EFFECTIVITY' IN 
    TYPEOF(SELF));
  wr70 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CONFIGURATION_ITEM' IN 
    TYPEOF(SELF));
  wr71 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CONTEXT_DEPENDENT_UNIT' 
    IN TYPEOF(SELF));
  wr72 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CONTRACT' IN TYPEOF(SELF
    ));
  wr73 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CONVERSION_BASED_UNIT' 
    IN TYPEOF(SELF));
  wr74 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DATE_AND_TIME' IN TYPEOF
    (SELF));
  wr75 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DERIVED_UNIT' IN TYPEOF(
    SELF));
  wr76 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTIVE_REPRESENTATION_ITEM' 
    IN TYPEOF(SELF));
  wr77 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DIRECTED_ACTION' IN 
    TYPEOF(SELF));
  wr78 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DOCUMENT_FILE' IN TYPEOF
    (SELF));
  wr79 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DOCUMENT_RELATIONSHIP' 
    IN TYPEOF(SELF));
  wr80 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.EFFECTIVITY' IN TYPEOF(
    SELF));
  wr81 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.EFFECTIVITY_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr82 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ENVELOPE' IN TYPEOF(SELF
    ));
  wr83 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ENVELOPE_RELATIONSHIP' 
    IN TYPEOF(SELF));
  wr84 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.EVENT_OCCURRENCE' IN 
    TYPEOF(SELF));
  wr85 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.EVENT_OCCURRENCE_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr86 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.EXECUTED_ACTION' IN 
    TYPEOF(SELF));
  wr87 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.EXPERIENCE' IN TYPEOF(
    SELF));
  wr88 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.EXTERNAL_CLASS_LIBRARY' 
    IN TYPEOF(SELF));
  wr89 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.GENERAL_PROPERTY' IN 
    TYPEOF(SELF));
  wr90 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.GENERAL_PROPERTY_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr91 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.GROUP' IN TYPEOF(SELF));
  wr92 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.IN_ZONE' IN TYPEOF(SELF)
    );
  wr93 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INFORMATION_RIGHT' IN 
    TYPEOF(SELF));
  wr94 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INFORMATION_USAGE_RIGHT'
     IN TYPEOF(SELF));
  wr95 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_CONNECTION' IN
     TYPEOF(SELF));
  wr96 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_CONNECTOR_AS_PLANNED' IN
     TYPEOF(SELF));
  wr97 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_CONNECTOR_AS_REALIZED' 
    IN TYPEOF(SELF));
  wr98 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_CONNECTOR_DESIGN' IN 
    TYPEOF(SELF));
  wr99 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_CONNECTOR_DESIGN_TO_PLANNED'
     IN TYPEOF(SELF));
  wr100 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_CONNECTOR_DESIGN_TO_REALIZED'
     IN TYPEOF(SELF));
  wr101 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_CONNECTOR_OCCURRENCE' IN
     TYPEOF(SELF));
  wr102 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_CONNECTOR_PLANNED_TO_REALIZED'
     IN TYPEOF(SELF));
  wr103 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_DEFINITION_CONNECTION' 
    IN TYPEOF(SELF));
  wr104 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_DEFINITION_FOR' IN 
    TYPEOF(SELF));
  wr105 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.JUSTIFICATION_GROUP_ASSIGNMENT' IN
     TYPEOF(SELF));
  wr106 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.JUSTIFICATION_SUPPORT_ASSIGNMENT' 
    IN TYPEOF(SELF));
  wr107 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LANGUAGE' IN TYPEOF(
    SELF));
  wr108 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LOCAL_TIME' IN TYPEOF(
    SELF));
  wr109 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LOCATION' IN TYPEOF(
    SELF));
  wr110 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LOCATION_RELATIONSHIP' 
    IN TYPEOF(SELF));
  wr111 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN 
    TYPEOF(SELF));
  wr112 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MEASURE_WITH_UNIT' IN 
    TYPEOF(SELF));
  wr113 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MESSAGE_RELATIONSHIP' 
    IN TYPEOF(SELF));
  wr114 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr115 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.NAMED_UNIT' IN TYPEOF(
    SELF));
  wr116 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.OBSERVATION' IN TYPEOF(
    SELF));
  wr117 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.OBSERVATION_CONSEQUENCE' IN TYPEOF
    (SELF));
  wr118 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.OBSERVATION_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr119 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ORGANIZATION' IN TYPEOF
    (SELF));
  wr120 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ORGANIZATION_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr121 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ORGANIZATION_TYPE' IN 
    TYPEOF(SELF));
  wr122 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ORGANIZATIONAL_ADDRESS'
     IN TYPEOF(SELF));
  wr123 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ORGANIZATIONAL_PROJECT'
     IN TYPEOF(SELF));
  wr124 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ORGANIZATIONAL_PROJECT_RELATIONSHIP'
     IN TYPEOF(SELF));
  wr125 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PERSON' IN TYPEOF(SELF)
    );
  wr126 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PERSON_AND_ORGANIZATION' IN TYPEOF
    (SELF));
  wr127 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PERSON_AND_ORGANIZATION_ADDRESS' 
    IN TYPEOF(SELF));
  wr128 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PERSON_TYPE' IN TYPEOF(
    SELF));
  wr129 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PERSON_TYPE_DEFINITION'
     IN TYPEOF(SELF));
  wr130 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PERSON_TYPE_DEFINITION_RELATIONSHIP'
     IN TYPEOF(SELF));
  wr131 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.POSITION_IN_ORGANIZATION' IN 
    TYPEOF(SELF));
  wr132 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.POSITION_IN_ORGANIZATION_RELATIONSHIP'
     IN TYPEOF(SELF));
  wr133 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.POSITION_IN_ORGANIZATION_TYPE' IN 
    TYPEOF(SELF));
  wr134 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT' IN TYPEOF(SELF
    ));
  wr135 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_AS_PLANNED' IN 
    TYPEOF(SELF));
  wr136 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_AS_REALIZED' IN
     TYPEOF(SELF));
  wr137 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_CATEGORY' IN 
    TYPEOF(SELF));
  wr138 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_CONCEPT' IN 
    TYPEOF(SELF));
  wr139 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION' IN 
    TYPEOF(SELF));
  wr140 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_CONTEXT' IN 
    TYPEOF(SELF));
  wr141 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_FORMATION' IN 
    TYPEOF(SELF));
  wr142 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_FORMATION_RELATIONSHIP'
     IN TYPEOF(SELF));
  wr143 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_GROUP_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr144 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP' 
    IN TYPEOF(SELF));
  wr145 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_SHAPE' IN 
    TYPEOF(SELF));
  wr146 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DESIGN_TO_INDIVIDUAL' IN 
    TYPEOF(SELF));
  wr147 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL'
     IN TYPEOF(SELF));
  wr148 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_GROUP' IN 
    TYPEOF(SELF));
  wr149 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_GROUP_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr150 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_PLANNED_TO_REALIZED' IN 
    TYPEOF(SELF));
  wr151 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_RELATIONSHIP' 
    IN TYPEOF(SELF));
  wr152 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PROPERTY_DEFINITION' IN
     TYPEOF(SELF));
  wr153 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PROPERTY_DEFINITION_RELATIONSHIP' 
    IN TYPEOF(SELF));
  wr154 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PROPERTY_DEFINITION_REPRESENTATION'
     IN TYPEOF(SELF));
  wr155 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.QUALIFICATION_TYPE' IN 
    TYPEOF(SELF));
  wr156 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.QUALIFICATION_TYPE_RELATIONSHIP' 
    IN TYPEOF(SELF));
  wr157 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION' IN 
    TYPEOF(SELF));
  wr158 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION_CONTEXT'
     IN TYPEOF(SELF));
  wr159 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION_ITEM' IN
     TYPEOF(SELF));
  wr160 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REQUIREMENT_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr161 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REQUIREMENT_SOURCE' IN 
    TYPEOF(SELF));
  wr162 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.RESOURCE_PROPERTY' IN 
    TYPEOF(SELF));
  wr163 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.RESOURCE_PROPERTY_REPRESENTATION' 
    IN TYPEOF(SELF));
  wr164 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SECURITY_CLASSIFICATION' IN TYPEOF
    (SELF));
  wr165 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SELECTED_ITEM' IN 
    TYPEOF(SELF));
  wr166 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SELECTED_ITEM_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr167 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_OBSERVED' IN 
    TYPEOF(SELF));
  wr168 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_OBSERVED_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr169 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_OBSERVED_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr170 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_OBSERVED_ROLE' IN
     TYPEOF(SELF));
  wr171 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_TYPE' IN TYPEOF(
    SELF));
  wr172 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_TYPE_ASSIGNMENT' 
    IN TYPEOF(SELF));
  wr173 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_TYPE_RELATIONSHIP' IN TYPEOF
    (SELF));
  wr174 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STRUCTURED_MESSAGE' IN 
    TYPEOF(SELF));
  wr175 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.TIME_INTERVAL_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr176 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.UNCERTAINTY_MEASURE_WITH_UNIT' IN 
    TYPEOF(SELF));
  wr177 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.USAGE_ASSOCIATION' IN 
    TYPEOF(SELF));
  wr178 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VERSIONED_ACTION_REQUEST' IN 
    TYPEOF(SELF));
END_TYPE; (* declared in: experience_mim *)
 
TYPE experience_type_item = SELECT 
  (action_method, action_resource_requirement, executed_action, organization, 
  person, person_and_organization);
END_TYPE; (* declared in: experience_mim *)
 
TYPE external_identification_item = SELECT 
  (document_file, externally_defined_class, product_definition);
END_TYPE; (* declared in: external_item_identification_assignment_mim *)
 
TYPE founded_item_select = SELECT 
  (representation_item);
END_TYPE; (* declared in: representation_schema *)
 
TYPE groupable_item = SELECT 
  (action_method, action_method_relationship, applied_action_assignment, 
  applied_action_method_assignment, interface_connector_definition, 
  interface_definition_connection, interface_definition_for, product_definition
  , product_definition_relationship);
WHERE
  wr1 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.GROUP' IN TYPEOF(SELF));
END_TYPE; (* declared in: group_mim *)
 
TYPE hour_in_day = INTEGER;
WHERE
  wr1 : {0 <= SELF < 24};
END_TYPE; (* declared in: date_time_schema *)
 
TYPE id_attribute_select = SELECT 
  (action, address, application_context, group, organizational_project, 
  product_category, property_definition, representation, shape_aspect, 
  shape_aspect_relationship);
END_TYPE; (* declared in: basic_attribute_schema *)
 
TYPE identification_item = SELECT 
  (action, action_directive, action_method, action_method_relationship, 
  action_property, action_resource, action_resource_requirement, 
  action_resource_requirement_relationship, address, applied_action_assignment
  , applied_action_method_assignment, applied_action_request_assignment, 
  applied_document_reference, applied_document_usage_constraint_assignment, 
  applied_location_representation_assignment, applied_organization_assignment, 
  applied_person_and_organization_assignment, 
  applied_position_in_organization_assignment, 
  applied_position_in_organization_type_assignment, 
  applied_qualification_type_assignment, 
  applied_security_classification_assignment, applied_state_observed_assignment
  , applied_state_type_assignment, approval, approval_status, ascribable_state
  , ascribable_state_relationship, certification, configuration_item, contract
  , descriptive_representation_item, directed_action, document_file, 
  effectivity, event_occurrence, executed_action, experience, experience_type, 
  external_class_library, general_property, general_property_relationship, 
  group, information_right, information_usage_right, interface_connection, 
  interface_connector_as_planned, interface_connector_as_realized, 
  interface_connector_design, interface_connector_occurrence, 
  interface_definition_connection, justification_group_assignment, 
  justification_support_assignment, location, measure_representation_item, 
  observation, observation_consequence, organization, organization_type, 
  organizational_project, person, person_and_organization, person_type, 
  position_in_organization, probability_generator, product, 
  product_as_individual, product_as_individual_version, 
  product_as_individual_view, product_as_planned, product_as_realized, 
  product_concept, product_concept_context, product_definition, 
  product_definition_formation, product_definition_formation_relationship, 
  product_definition_relationship, product_definition_shape, product_group, 
  product_group_membership, product_group_relationship, product_relationship, 
  property_definition, property_definition_relationship, qualification_type, 
  representation, requirement_assignment, requirement_source, resource_property
  , security_classification, security_classification_level, 
  shape_aspect_relationship, shape_representation, state_observed, 
  state_observed_assignment, state_observed_relationship, state_type, 
  state_type_assignment, state_type_relationship, structured_message, 
  versioned_action_request);
END_TYPE; (* declared in: identification_assignment_mim *)
 
TYPE identifier = STRING;
END_TYPE; (* declared in: support_resource_schema *)
 
TYPE ir_usage_item = action_items;
WHERE
  wr1 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION' IN TYPEOF(SELF));
  wr2 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_DIRECTIVE' IN 
    TYPEOF(SELF));
  wr3 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_METHOD' IN TYPEOF(
    SELF));
  wr4 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_METHOD_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr5 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_PROPERTY' IN 
    TYPEOF(SELF));
  wr6 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_PROPERTY_REPRESENTATION' IN
     TYPEOF(SELF));
  wr7 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr8 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_RESOURCE' IN 
    TYPEOF(SELF));
  wr9 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_RESOURCE_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr10 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_RESOURCE_REQUIREMENT' IN 
    TYPEOF(SELF));
  wr11 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ADDRESS' IN TYPEOF(SELF)
    );
  wr12 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_ACTION_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr13 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_ACTION_METHOD_ASSIGNMENT' 
    IN TYPEOF(SELF));
  wr14 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_APPROVAL_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr15 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_CLASSIFICATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr16 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_CONTRACT_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr17 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_DATE_AND_TIME_ASSIGNMENT' 
    IN TYPEOF(SELF));
  wr18 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_DATE_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr19 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_DOCUMENT_REFERENCE' IN 
    TYPEOF(SELF));
  wr20 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr21 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_IDENTIFICATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr22 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_LOCATION_REPRESENTATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr23 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_ORGANIZATION_ASSIGNMENT' 
    IN TYPEOF(SELF));
  wr24 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr25 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_STATE_OBSERVED_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr26 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_STATE_TYPE_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr27 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPROVAL' IN TYPEOF(SELF
    ));
  wr28 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ASCRIBABLE_STATE' IN 
    TYPEOF(SELF));
  wr29 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CALENDAR_DATE' IN TYPEOF
    (SELF));
  wr30 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CONTRACT' IN TYPEOF(SELF
    ));
  wr31 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DATE_AND_TIME' IN TYPEOF
    (SELF));
  wr32 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTIVE_REPRESENTATION_ITEM' 
    IN TYPEOF(SELF));
  wr33 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.EFFECTIVITY' IN TYPEOF(
    SELF));
  wr34 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ENVELOPE' IN TYPEOF(SELF
    ));
  wr35 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.EVENT_OCCURRENCE' IN 
    TYPEOF(SELF));
  wr36 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.GENERAL_PROPERTY' IN 
    TYPEOF(SELF));
  wr37 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.GROUP' IN TYPEOF(SELF));
  wr38 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.HIERARCHICAL_INTERFACE_CONNECTION'
     IN TYPEOF(SELF));
  wr39 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LOCATION' IN TYPEOF(SELF
    ));
  wr40 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN 
    TYPEOF(SELF));
  wr41 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.OBSERVATION_CONSEQUENCE'
     IN TYPEOF(SELF));
  wr42 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ORGANIZATION' IN TYPEOF(
    SELF));
  wr43 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ORGANIZATIONAL_PROJECT' 
    IN TYPEOF(SELF));
  wr44 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PERSON' IN TYPEOF(SELF))
    ;
  wr45 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PERSON_AND_ORGANIZATION'
     IN TYPEOF(SELF));
  wr46 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.POSITION_IN_ORGANIZATION' IN 
    TYPEOF(SELF));
  wr47 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_CONCEPT' IN 
    TYPEOF(SELF));
  wr48 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_ELEMENT_RELATIONSHIP'
     IN TYPEOF(SELF));
  wr49 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_GROUP' IN TYPEOF
    (SELF));
  wr50 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_GROUP_MEMBERSHIP' IN 
    TYPEOF(SELF));
  wr51 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_GROUP_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr52 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY' 
    IN TYPEOF(SELF));
  wr53 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PROPERTY_DEFINITION' IN 
    TYPEOF(SELF));
  wr54 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PROPERTY_DEFINITION_REPRESENTATION'
     IN TYPEOF(SELF));
  wr55 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION' IN 
    TYPEOF(SELF));
  wr56 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.RESOURCE_PROPERTY' IN 
    TYPEOF(SELF));
  wr57 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.RESOURCE_PROPERTY_REPRESENTATION' 
    IN TYPEOF(SELF));
  wr58 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_OBSERVED' IN 
    TYPEOF(SELF));
  wr59 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_OBSERVED_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr60 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_OBSERVED_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr61 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_TYPE' IN TYPEOF(
    SELF));
  wr62 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATECHAR_ACTION_ITEMS' 
    IN TYPEOF(SELF));
  wr63 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VERSIONED_ACTION_REQUEST' IN 
    TYPEOF(SELF));
END_TYPE; (* declared in: information_rights_mim *)
 
TYPE justification_item = SELECT 
  (action, action_method, action_method_relationship, action_property, 
  action_resource, action_resource_relationship, action_resource_requirement, 
  action_resource_requirement_relationship, applied_action_assignment, 
  applied_action_method_assignment, applied_approval_assignment, 
  applied_classification_assignment, applied_document_reference, 
  applied_document_usage_constraint_assignment, applied_location_assignment, 
  applied_state_observed_assignment, applied_state_type_assignment, approval, 
  ascribable_state, descriptive_representation_item, document_relationship, 
  effectivity, general_property, general_property_relationship, group, 
  interface_connection, interface_connector_occurrence, 
  interface_definition_connection, measure_representation_item, product, 
  product_definition, product_definition_formation, 
  product_definition_formation_relationship, product_definition_relationship, 
  property_definition, resource_property, structured_message);
END_TYPE; (* declared in: justification_mim *)
 
TYPE justification_support_item = SELECT 
  (action, action_directive, action_method, action_method_relationship, 
  action_property, action_request_solution, applied_action_assignment, 
  applied_action_method_assignment, applied_location_assignment, 
  applied_state_observed_assignment, applied_state_type_assignment, approval, 
  ascribable_state, certification, contract, descriptive_representation_item, 
  document_relationship, effectivity, event_occurrence, general_property, 
  general_property_relationship, interface_connection, 
  interface_connector_occurrence, interface_definition_connection, location, 
  measure_representation_item, observation, organizational_project, product, 
  product_definition, product_definition_formation, 
  product_definition_formation_relationship, product_definition_relationship, 
  property_definition, resource_property, state_observed, 
  state_observed_relationship, state_type, state_type_relationship, 
  structured_message, versioned_action_request);
END_TYPE; (* declared in: justification_mim *)
 
TYPE label = STRING;
END_TYPE; (* declared in: support_resource_schema *)
 
TYPE length_measure = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE list_representation_item =  LIST [1:?] OF representation_item;
END_TYPE; (* declared in: representation_schema *)
 
TYPE location_item = SELECT 
  (action, action_method, action_request_solution, action_resource, 
  action_resource_requirement, applied_action_assignment, 
  applied_action_method_assignment, document_file, interface_connection, 
  interface_connector_occurrence, interface_definition_connection, organization
  , organization_type, organizational_project, person, person_and_organization
  , person_type, person_type_definition, position_in_organization, 
  position_in_organization_type, product, product_definition, 
  product_definition_formation, product_definition_relationship, product_group)
  ;
END_TYPE; (* declared in: location_assignment_mim *)
 
TYPE location_representation_item = SELECT 
  (interface_connection, interface_connector_occurrence, 
  interface_definition_connection, organizational_address, 
  person_and_organization_address, product, product_definition_formation);
END_TYPE; (* declared in: location_mim *)
 
TYPE luminous_intensity_measure = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE mass_measure = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE measure_value = SELECT 
  (amount_of_substance_measure, area_measure, celsius_temperature_measure, 
  context_dependent_measure, count_measure, descriptive_measure, 
  electric_current_measure, length_measure, luminous_intensity_measure, 
  mass_measure, numeric_measure, parameter_value, plane_angle_measure, 
  positive_length_measure, positive_plane_angle_measure, positive_ratio_measure
  , ratio_measure, solid_angle_measure, thermodynamic_temperature_measure, 
  time_measure, volume_measure);
END_TYPE; (* declared in: measure_schema *)
 
TYPE minute_in_hour = INTEGER;
WHERE
  wr1 : {0 <= SELF <= 59};
END_TYPE; (* declared in: date_time_schema *)
 
TYPE month_in_year_number = INTEGER;
WHERE
  wr1 : {1 <= SELF <= 12};
END_TYPE; (* declared in: date_time_schema *)
 
TYPE multi_language_attribute_item = SELECT 
  (action, action_directive, action_method, action_method_relationship, 
  action_property, action_relationship, action_request_solution, 
  action_resource, action_resource_relationship, action_resource_requirement, 
  action_resource_requirement_relationship, address, 
  alternate_product_relationship, applied_action_assignment, 
  applied_action_method_assignment, applied_document_reference, 
  applied_document_usage_constraint_assignment, applied_experience_assignment, 
  applied_external_identification_assignment, 
  applied_location_representation_assignment, 
  applied_organizational_project_assignment, applied_person_type_assignment, 
  approval, approval_relationship, approval_status, assembly_component_usage, 
  assembly_component_usage_substitute, attachment_slot_design_to_planned, 
  attachment_slot_design_to_realized, attachment_slot_on_product, 
  attachment_slot_planned_to_realized, breakdown_element_group_assignment, 
  breakdown_element_usage, certification, certification_type, 
  configuration_item, contract, date_role, date_time_role, 
  document_relationship, document_usage_role, envelope, envelope_relationship, 
  event_occurrence, executed_action, experience_type, external_source, 
  general_property, general_property_relationship, group, identification_role, 
  information_right, information_usage_right, interface_connection, 
  interface_connector_occurrence, interface_definition_connection, 
  interface_definition_for, justification_group_assignment, 
  justification_support_assignment, location, location_relationship, 
  measure_representation_item, message_relationship, object_role, observation, 
  observation_consequence, organization_relationship, organization_type, 
  organizational_project, organizational_project_relationship, 
  organizational_project_role, person_and_organization, person_type, 
  person_type_definition, person_type_definition_relationship, 
  position_in_organization, position_in_organization_assignment, 
  position_in_organization_relationship, position_in_organization_type, product
  , product_as_individual, product_as_individual_version, 
  product_as_individual_view, product_category, product_definition, 
  product_definition_formation, product_definition_formation_relationship, 
  product_definition_group_assignment, product_definition_relationship, 
  product_group, product_group_relationship, product_relationship, 
  property_definition, property_definition_relationship, qualification_type, 
  representation, representation_item, requirement_assignment, 
  requirement_source, resource_property, state_observed, 
  state_observed_relationship, state_type, state_type_relationship, 
  structured_message);
END_TYPE; (* declared in: multi_linguism_mim *)
 
TYPE name_attribute_select = SELECT 
  (action_request_solution, address, configuration_design, 
  context_dependent_shape_representation, derived_unit, effectivity, 
  person_and_organization, product_definition, product_definition_substitute, 
  property_definition_representation);
END_TYPE; (* declared in: basic_attribute_schema *)
 
TYPE name_item = SELECT 
  (applied_action_assignment, applied_action_method_assignment, 
  external_class_library);
END_TYPE; (* declared in: name_assignment_mim *)
 
TYPE numeric_measure = NUMBER;
END_TYPE; (* declared in: measure_schema *)
 
TYPE organization_item = SELECT 
  (action, action_directive, action_method, action_method_relationship, 
  action_property, action_property_representation, action_relationship, 
  action_request_solution, action_resource, action_resource_relationship, 
  action_resource_requirement, alternate_product_relationship, 
  applied_action_assignment, applied_action_method_assignment, 
  applied_action_request_assignment, applied_certification_assignment, 
  applied_classification_assignment, applied_contract_assignment, 
  applied_date_and_time_assignment, applied_date_assignment, 
  applied_document_reference, applied_document_usage_constraint_assignment, 
  applied_effectivity_assignment, applied_event_occurrence_assignment, 
  applied_identification_assignment, applied_location_assignment, 
  applied_organization_assignment, applied_organizational_project_assignment, 
  applied_person_and_organization_assignment, applied_person_type_assignment, 
  applied_position_in_organization_assignment, 
  applied_position_in_organization_group_assignment, 
  applied_position_in_organization_type_assignment, 
  applied_security_classification_assignment, applied_state_observed_assignment
  , applied_state_type_assignment, approval, ascribable_state, 
  assembly_component_usage, assembly_component_usage_substitute, 
  breakdown_element_group_assignment, breakdown_element_usage, certification, 
  configuration_item, contract, descriptive_representation_item, 
  directed_action, document_file, effectivity, envelope, event_occurrence, 
  executed_action, externally_defined_class, general_property, 
  general_property_relationship, group, information_usage_right, 
  interface_connection, interface_connector_as_planned, 
  interface_connector_as_realized, interface_connector_occurrence, 
  interface_definition_connection, interface_definition_for, 
  justification_group_assignment, justification_support_assignment, 
  measure_representation_item, observation, organizational_address, 
  organizational_project, person_and_organization, 
  person_and_organization_address, position_in_organization_type, product, 
  product_as_individual, product_as_planned, product_as_realized, 
  product_category, product_definition, product_definition_context, 
  product_definition_formation, product_definition_formation_relationship, 
  product_definition_group_assignment, product_definition_relationship, 
  product_group, product_group_membership, product_group_relationship, 
  product_related_product_category, product_relationship, property_definition, 
  property_definition_relationship, property_definition_representation, 
  representation, requirement_assignment, requirement_source, resource_property
  , resource_property_representation, security_classification, selected_item, 
  selected_item_assignment, state_observed, state_observed_assignment, 
  state_observed_relationship, state_type, state_type_assignment, 
  state_type_relationship, structured_message, versioned_action_request);
END_TYPE; (* declared in: person_organization_assignment_mim *)
 
TYPE organization_type_item = SELECT 
  (organization);
END_TYPE; (* declared in: organization_type_mim *)
 
TYPE parameter_value = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE person_and_organization_item = SELECT 
  (action, action_directive, action_method, action_method_relationship, 
  action_property, action_property_representation, action_relationship, 
  action_request_solution, action_resource, action_resource_relationship, 
  action_resource_requirement, alternate_product_relationship, 
  applied_action_assignment, applied_action_method_assignment, 
  applied_action_request_assignment, applied_certification_assignment, 
  applied_classification_assignment, applied_contract_assignment, 
  applied_date_and_time_assignment, applied_date_assignment, 
  applied_document_reference, applied_document_usage_constraint_assignment, 
  applied_effectivity_assignment, applied_event_occurrence_assignment, 
  applied_identification_assignment, applied_location_assignment, 
  applied_organization_assignment, applied_organizational_project_assignment, 
  applied_person_and_organization_assignment, applied_person_type_assignment, 
  applied_position_in_organization_assignment, 
  applied_position_in_organization_group_assignment, 
  applied_position_in_organization_type_assignment, 
  applied_qualification_type_assignment, 
  applied_security_classification_assignment, applied_state_observed_assignment
  , applied_state_type_assignment, approval, ascribable_state, 
  assembly_component_usage, assembly_component_usage_substitute, 
  breakdown_element_group_assignment, breakdown_element_usage, certification, 
  configuration_item, contract, descriptive_representation_item, 
  directed_action, document_file, effectivity, envelope, event_occurrence, 
  executed_action, general_property, general_property_relationship, group, 
  information_usage_right, interface_connection, interface_connector_as_planned
  , interface_connector_as_realized, interface_connector_occurrence, 
  interface_definition_connection, interface_definition_for, 
  justification_group_assignment, justification_support_assignment, 
  measure_representation_item, observation, organizational_address, 
  organizational_project, person_and_organization, 
  person_and_organization_address, position_in_organization_type, product, 
  product_as_individual, product_as_planned, product_as_realized, 
  product_category, product_definition, product_definition_context, 
  product_definition_formation, product_definition_formation_relationship, 
  product_definition_group_assignment, product_definition_relationship, 
  product_group, product_group_membership, product_group_relationship, 
  product_related_product_category, product_relationship, property_definition, 
  property_definition_relationship, property_definition_representation, 
  qualification_type, representation, requirement_assignment, 
  requirement_source, resource_property, resource_property_representation, 
  security_classification, selected_item, selected_item_assignment, 
  state_observed, state_observed_assignment, state_observed_relationship, 
  state_type, state_type_assignment, state_type_relationship, 
  structured_message, versioned_action_request);
END_TYPE; (* declared in: person_organization_assignment_mim *)
 
TYPE person_definition_item = SELECT 
  (experience_type, qualification_type);
END_TYPE; (* declared in: type_of_person_mim *)
 
TYPE person_organization_item = SELECT 
  (person);
END_TYPE; (* declared in: qualifications_mim *)
 
TYPE person_organization_select = SELECT 
  (organization, person, person_and_organization);
END_TYPE; (* declared in: person_organization_schema *)
 
TYPE person_type_item = SELECT 
  (group, person, person_and_organization, position_in_organization, 
  position_in_organization_type);
END_TYPE; (* declared in: type_of_person_mim *)
 
TYPE plane_angle_measure = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE position_in_organization_group_assignment_item = SELECT 
  (position_in_organization_assignment);
END_TYPE; (* declared in: position_in_organization_mim *)
 
TYPE position_in_organization_group_item = SELECT 
  (applied_organization_assignment, applied_person_and_organization_assignment
  , approval_person_organization, product, product_definition, 
  product_definition_formation);
END_TYPE; (* declared in: position_in_organization_mim *)
 
TYPE position_in_organization_item = SELECT 
  (address, applied_organization_assignment, 
  applied_person_and_organization_assignment, approval_person_organization, 
  organization, organizational_project, person, product, product_definition, 
  product_definition_formation);
END_TYPE; (* declared in: position_in_organization_mim *)
 
TYPE position_in_organization_type_item = SELECT 
  (applied_organization_assignment, applied_person_and_organization_assignment
  , approval_person_organization, person_type, position_in_organization, 
  product, product_definition, product_definition_formation);
END_TYPE; (* declared in: position_in_organization_mim *)
 
TYPE positive_length_measure = length_measure;
WHERE
  wr1 : SELF > 0.0;
END_TYPE; (* declared in: measure_schema *)
 
TYPE positive_plane_angle_measure = plane_angle_measure;
WHERE
  wr1 : SELF > 0.0;
END_TYPE; (* declared in: measure_schema *)
 
TYPE positive_ratio_measure = ratio_measure;
WHERE
  wr1 : SELF > 0.0;
END_TYPE; (* declared in: measure_schema *)
 
TYPE product_definition_or_breakdown_element_usage = SELECT 
  (breakdown_element_usage, product_definition);
END_TYPE; (* declared in: product_breakdown_mim *)
 
TYPE product_definition_or_product_definition_relationship = SELECT 
  (interface_connector_occurrence, product_definition, product_definition_usage
  , product_group);
END_TYPE; (* declared in: product_breakdown_mim *)
 
TYPE product_or_formation_or_definition = SELECT 
  (product, product_definition_formation, product_definition);
END_TYPE; (* declared in: document_schema *)
 
TYPE product_select = SELECT 
  (product, product_as_individual, product_concept, 
  product_definition_formation, product_group);
END_TYPE; (* declared in: product_group_mim *)
 
TYPE project_group_name_item = SELECT 
  (applied_position_in_organization_group_assignment);
END_TYPE; (* declared in: position_in_organization_mim *)
 
TYPE project_item = SELECT 
  (action, action_method, action_method_relationship, applied_action_assignment
  , applied_action_method_assignment, configuration_item, general_property, 
  group, product, product_concept, product_definition_formation, product_group
  , product_group_membership, product_group_relationship);
END_TYPE; (* declared in: project_mim *)
 
TYPE property_or_shape_select = SELECT 
  (property_definition, shape_definition);
END_TYPE; (* declared in: process_property_schema *)
 
TYPE ratio_measure = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE relationship_with_condition = SELECT 
  (action_method_relationship, action_relationship);
END_TYPE; (* declared in: method_definition_schema *)
 
TYPE represented_definition = SELECT 
  (general_property, property_definition, property_definition_relationship, 
  shape_aspect, shape_aspect_relationship);
END_TYPE; (* declared in: product_property_representation_schema *)
 
TYPE requirement_assigned_item = SELECT 
  (action_method, action_resource_requirement, alternate_product_relationship, 
  applied_action_method_assignment, applied_state_observed_assignment, 
  applied_state_type_assignment, assembly_component_usage, 
  assembly_component_usage_substitute, breakdown_element_group_assignment, 
  breakdown_element_usage, configuration_item, interface_connector_occurrence, 
  organizational_project, product, product_as_individual_version, 
  product_as_planned, product_as_realized, product_definition, 
  product_definition_formation, product_definition_group_assignment, 
  product_in_attachment_slot, state_observed, state_type);
END_TYPE; (* declared in: requirement_assignment_mim *)
 
TYPE requirement_source_item = SELECT 
  (action_method, applied_action_method_assignment, 
  applied_state_observed_assignment, applied_state_type_assignment, 
  interface_connector_occurrence, product_as_individual_version, 
  product_definition, product_definition_formation, state_observed, state_type)
  ;
END_TYPE; (* declared in: requirement_assignment_mim *)
 
TYPE role_select = SELECT 
  (action_assignment, action_request_assignment, approval_assignment, 
  approval_date_time, certification_assignment, contract_assignment, 
  document_reference, effectivity_assignment, group_assignment, name_assignment
  , security_classification_assignment);
END_TYPE; (* declared in: basic_attribute_schema *)
 
TYPE second_in_minute = REAL;
WHERE
  wr1 : {0 <= SELF <= 60.0};
END_TYPE; (* declared in: date_time_schema *)
 
TYPE security_classification_item = SELECT 
  (action, action_method, action_method_relationship, action_resource, 
  alternate_product_relationship, applied_action_assignment, 
  applied_action_method_assignment, applied_document_reference, 
  applied_document_usage_constraint_assignment, 
  applied_state_observed_assignment, applied_state_type_assignment, 
  assembly_component_usage, assembly_component_usage_substitute, 
  attachment_slot_design_to_planned, attachment_slot_design_to_realized, 
  attachment_slot_on_product, attachment_slot_planned_to_realized, 
  breakdown_element_group_assignment, breakdown_element_usage, 
  configuration_item, document_file, group, hierarchical_interface_connection, 
  interface_connection, interface_connector_as_planned, 
  interface_connector_as_realized, interface_connector_design, 
  interface_connector_occurrence, interface_definition_connection, 
  interface_definition_for, product, product_as_individual, 
  product_as_individual_view, product_as_planned, product_as_realized, 
  product_definition, product_definition_formation, 
  product_definition_formation_relationship, 
  product_definition_group_assignment, product_definition_relationship, 
  product_design_to_individual, product_design_version_to_individual, 
  product_group, product_group_membership, product_group_relationship, 
  product_relationship, requirement_assignment, requirement_source, 
  structured_message);
END_TYPE; (* declared in: security_classification_mim *)
 
TYPE selected_item_context_items = SELECT 
  (configuration_item, contract, organizational_project, product, 
  product_as_individual, product_as_individual_version, product_concept);
END_TYPE; (* declared in: selected_item_mim *)
 
TYPE selected_item_select = SELECT 
  (interface_connection, interface_connector_definition, 
  interface_connector_occurrence, interface_definition_connection, product, 
  product_definition_formation);
END_TYPE; (* declared in: selected_item_mim *)
 
TYPE set_representation_item = SET [1:?] OF representation_item;
END_TYPE; (* declared in: representation_schema *)
 
TYPE shape_definition = SELECT 
  (product_definition_shape, shape_aspect, shape_aspect_relationship);
END_TYPE; (* declared in: product_property_definition_schema *)
 
TYPE si_prefix = ENUMERATION OF 
  (exa, peta, tera, giga, mega, kilo, hecto, deca, deci, centi, milli, micro, 
  nano, pico, femto, atto);
END_TYPE; (* declared in: measure_schema *)
 
TYPE si_unit_name = ENUMERATION OF 
  (metre, gram, second, ampere, kelvin, mole, candela, radian, steradian, hertz
  , newton, pascal, joule, watt, coulomb, volt, farad, ohm, siemens, weber, 
  tesla, henry, degree_celsius, lumen, lux, becquerel, gray, sievert);
END_TYPE; (* declared in: measure_schema *)
 
TYPE solid_angle_measure = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE source = ENUMERATION OF 
  (made, bought, not_known);
END_TYPE; (* declared in: product_definition_schema *)
 
TYPE source_item = SELECT 
  (identifier);
END_TYPE; (* declared in: external_reference_schema *)
 
TYPE state_observed_of_item = SELECT 
  (action, action_directive, action_method, action_property, 
  action_relationship, action_resource, action_resource_relationship, 
  alternate_product_relationship, applied_action_assignment, 
  applied_external_identification_assignment, assembly_component_usage, 
  assembly_component_usage_substitute, attachment_slot_design_to_planned, 
  attachment_slot_design_to_realized, attachment_slot_on_product, 
  attachment_slot_planned_to_realized, breakdown_element_group_assignment, 
  breakdown_element_usage, certification, configuration_item, contract, 
  document_file, interface_connection, interface_connector_as_planned, 
  interface_connector_as_realized, interface_connector_definition, 
  interface_connector_design, interface_connector_occurrence, 
  interface_connector_version, interface_definition_connection, 
  interface_specification_definition, interface_specification_version, location
  , organization, organizational_project, person_and_organization, product, 
  product_as_individual, product_as_individual_view, product_as_planned, 
  product_as_realized, product_category, product_concept, product_definition, 
  product_definition_formation, product_definition_group_assignment, 
  product_definition_relationship, product_group, product_in_attachment_slot, 
  security_classification, structured_message, task_method_version, 
  versioned_action_request);
END_TYPE; (* declared in: state_observed_mim *)
 
TYPE state_type_of_item = SELECT 
  (action, action_directive, action_method, action_property, 
  action_relationship, action_resource, action_resource_relationship, 
  alternate_product_relationship, applied_action_assignment, 
  applied_action_method_assignment, applied_external_identification_assignment
  , assembly_component_usage, assembly_component_usage_substitute, 
  attachment_slot_design_to_planned, attachment_slot_design_to_realized, 
  attachment_slot_on_product, attachment_slot_planned_to_realized, 
  breakdown_element_group_assignment, breakdown_element_usage, certification, 
  configuration_item, contract, document_file, interface_connection, 
  interface_connector_as_planned, interface_connector_as_realized, 
  interface_connector_definition, interface_connector_design, 
  interface_connector_occurrence, interface_connector_version, 
  interface_definition_connection, interface_specification_definition, 
  interface_specification_version, location, organization, 
  organizational_project, person_and_organization, product, 
  product_as_individual, product_as_individual_view, product_as_planned, 
  product_as_realized, product_category, product_concept, product_definition, 
  product_definition_formation, product_definition_group_assignment, 
  product_definition_relationship, product_group, product_in_attachment_slot, 
  security_classification, versioned_action_request);
END_TYPE; (* declared in: state_definition_mim *)
 
TYPE statechar_action_items = action_items;
WHERE
  wr1 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION' IN TYPEOF(SELF));
  wr2 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_DIRECTIVE' IN 
    TYPEOF(SELF));
  wr3 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_METHOD' IN TYPEOF(
    SELF));
  wr4 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_METHOD_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr5 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_PROPERTY' IN 
    TYPEOF(SELF));
  wr6 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_PROPERTY_REPRESENTATION' IN
     TYPEOF(SELF));
  wr7 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr8 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_RESOURCE' IN 
    TYPEOF(SELF));
  wr9 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_RESOURCE_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr10 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_RESOURCE_REQUIREMENT' IN 
    TYPEOF(SELF));
  wr11 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ADDRESS' IN TYPEOF(SELF)
    );
  wr12 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ALTERNATE_PRODUCT_RELATIONSHIP' IN
     TYPEOF(SELF));
  wr13 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_ACTION_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr14 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_ACTION_METHOD_ASSIGNMENT' 
    IN TYPEOF(SELF));
  wr15 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_APPROVAL_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr16 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_CERTIFICATION_ASSIGNMENT' 
    IN TYPEOF(SELF));
  wr17 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_CLASSIFICATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr18 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_CONTRACT_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr19 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_DATE_AND_TIME_ASSIGNMENT' 
    IN TYPEOF(SELF));
  wr20 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_DATE_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr21 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_DOCUMENT_REFERENCE' IN 
    TYPEOF(SELF));
  wr22 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr23 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_IDENTIFICATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr24 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_LOCATION_REPRESENTATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr25 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_ORGANIZATION_ASSIGNMENT' 
    IN TYPEOF(SELF));
  wr26 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr27 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr28 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_STATE_OBSERVED_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr29 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_STATE_TYPE_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr30 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLIED_USAGE_RIGHT' IN 
    TYPEOF(SELF));
  wr31 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPROVAL' IN TYPEOF(SELF
    ));
  wr32 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ASSEMBLY_COMPONENT_USAGE' IN 
    TYPEOF(SELF));
  wr33 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE'
     IN TYPEOF(SELF));
  wr34 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ATTACHMENT_SLOT_DESIGN_TO_PLANNED'
     IN TYPEOF(SELF));
  wr35 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ATTACHMENT_SLOT_DESIGN_TO_REALIZED'
     IN TYPEOF(SELF));
  wr36 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ATTACHMENT_SLOT_ON_PRODUCT' IN 
    TYPEOF(SELF));
  wr37 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.BREAKDOWN_ELEMENT_GROUP_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr38 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.BREAKDOWN_ELEMENT_USAGE'
     IN TYPEOF(SELF));
  wr39 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CALENDAR_DATE' IN TYPEOF
    (SELF));
  wr40 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CERTIFICATION' IN TYPEOF
    (SELF));
  wr41 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CONFIGURATION_ITEM' IN 
    TYPEOF(SELF));
  wr42 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CONTRACT' IN TYPEOF(SELF
    ));
  wr43 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DATE_AND_TIME' IN TYPEOF
    (SELF));
  wr44 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTIVE_REPRESENTATION_ITEM' 
    IN TYPEOF(SELF));
  wr45 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DOCUMENT_FILE' IN TYPEOF
    (SELF));
  wr46 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DOCUMENT_RELATIONSHIP' 
    IN TYPEOF(SELF));
  wr47 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.EFFECTIVITY' IN TYPEOF(
    SELF));
  wr48 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ENVELOPE' IN TYPEOF(SELF
    ));
  wr49 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.EVENT_OCCURRENCE' IN 
    TYPEOF(SELF));
  wr50 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.GENERAL_PROPERTY' IN 
    TYPEOF(SELF));
  wr51 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.GROUP' IN TYPEOF(SELF));
  wr52 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.HIERARCHICAL_INTERFACE_CONNECTION'
     IN TYPEOF(SELF));
  wr53 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_CONNECTION' IN
     TYPEOF(SELF));
  wr54 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_CONNECTOR_AS_PLANNED' IN
     TYPEOF(SELF));
  wr55 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_CONNECTOR_AS_REALIZED' 
    IN TYPEOF(SELF));
  wr56 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_CONNECTOR_DESIGN' IN 
    TYPEOF(SELF));
  wr57 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_CONNECTOR_OCCURRENCE' IN
     TYPEOF(SELF));
  wr58 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_DEFINITION_CONNECTION' 
    IN TYPEOF(SELF));
  wr59 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INTERFACE_DEFINITION_FOR' IN 
    TYPEOF(SELF));
  wr60 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LOCATION' IN TYPEOF(SELF
    ));
  wr61 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN 
    TYPEOF(SELF));
  wr62 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.OBSERVATION_CONSEQUENCE'
     IN TYPEOF(SELF));
  wr63 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ORGANIZATION' IN TYPEOF(
    SELF));
  wr64 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ORGANIZATIONAL_PROJECT' 
    IN TYPEOF(SELF));
  wr65 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PERSON' IN TYPEOF(SELF))
    ;
  wr66 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PERSON_AND_ORGANIZATION'
     IN TYPEOF(SELF));
  wr67 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.POSITION_IN_ORGANIZATION' IN 
    TYPEOF(SELF));
  wr68 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT' IN TYPEOF(SELF)
    );
  wr69 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_AS_INDIVIDUAL' 
    IN TYPEOF(SELF));
  wr70 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_AS_INDIVIDUAL_VIEW' IN 
    TYPEOF(SELF));
  wr71 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_AS_PLANNED' IN 
    TYPEOF(SELF));
  wr72 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_AS_REALIZED' IN 
    TYPEOF(SELF));
  wr73 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_CONCEPT' IN 
    TYPEOF(SELF));
  wr74 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION' IN 
    TYPEOF(SELF));
  wr75 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_ELEMENT_RELATIONSHIP'
     IN TYPEOF(SELF));
  wr76 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_FORMATION' IN 
    TYPEOF(SELF));
  wr77 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_FORMATION_RELATIONSHIP'
     IN TYPEOF(SELF));
  wr78 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_GROUP_ASSIGNMENT'
     IN TYPEOF(SELF));
  wr79 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP' 
    IN TYPEOF(SELF));
  wr80 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_GROUP' IN TYPEOF
    (SELF));
  wr81 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_GROUP_MEMBERSHIP' IN 
    TYPEOF(SELF));
  wr82 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_GROUP_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr83 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY' 
    IN TYPEOF(SELF));
  wr84 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PROPERTY_DEFINITION' IN 
    TYPEOF(SELF));
  wr85 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PROPERTY_DEFINITION_REPRESENTATION'
     IN TYPEOF(SELF));
  wr86 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION' IN 
    TYPEOF(SELF));
  wr87 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REQUIREMENT_ASSIGNMENT' 
    IN TYPEOF(SELF));
  wr88 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.RESOURCE_PROPERTY' IN 
    TYPEOF(SELF));
  wr89 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.RESOURCE_PROPERTY_REPRESENTATION' 
    IN TYPEOF(SELF));
  wr90 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SECURITY_CLASSIFICATION'
     IN TYPEOF(SELF));
  wr91 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_OBSERVED' IN 
    TYPEOF(SELF));
  wr92 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_OBSERVED_ASSIGNMENT' IN 
    TYPEOF(SELF));
  wr93 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_OBSERVED_RELATIONSHIP' IN 
    TYPEOF(SELF));
  wr94 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATE_TYPE' IN TYPEOF(
    SELF));
  wr95 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STATECHAR_ACTION_ITEMS' 
    IN TYPEOF(SELF));
  wr96 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.STRUCTURED_MESSAGE' IN 
    TYPEOF(SELF));
  wr97 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.TASK_ELEMENT' IN TYPEOF(
    SELF));
  wr98 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.TASK_METHOD' IN TYPEOF(
    SELF));
  wr99 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.TASK_METHOD_VERSION' IN 
    TYPEOF(SELF));
  wr100 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.TASK_OBJECTIVE' IN 
    TYPEOF(SELF));
  wr101 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VERSIONED_ACTION_REQUEST' IN 
    TYPEOF(SELF));
END_TYPE; (* declared in: state_characterized_mim *)
 
TYPE supported_item = SELECT 
  (action, action_directive, action_method);
END_TYPE; (* declared in: action_schema *)
 
TYPE text = STRING;
END_TYPE; (* declared in: support_resource_schema *)
 
TYPE thermodynamic_temperature_measure = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE time_interval_item = SELECT 
  (action_method_relationship);
END_TYPE; (* declared in: time_interval_assignment_mim *)
 
TYPE time_measure = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE transformation = SELECT 
  (item_defined_transformation, functionally_defined_transformation);
END_TYPE; (* declared in: representation_schema *)
 
TYPE unit = SELECT 
  (derived_unit, named_unit);
END_TYPE; (* declared in: measure_schema *)
 
TYPE value_qualifier = SELECT 
  (precision_qualifier, type_qualifier, uncertainty_qualifier);
END_TYPE; (* declared in: qualified_measure_schema *)
 
TYPE vector_or_direction = SELECT 
  (vector, direction);
END_TYPE; (* declared in: geometry_schema *)
 
TYPE volume_measure = REAL;
END_TYPE; (* declared in: measure_schema *)
 
TYPE week_in_year_number = INTEGER;
WHERE
  wr1 : {1 <= SELF <= 53};
END_TYPE; (* declared in: date_time_schema *)
 
TYPE year_number = INTEGER;
END_TYPE; (* declared in: date_time_schema *)
 
ENTITY action;
  name : label;
  description :  OPTIONAL text;
  chosen_method : action_method;
DERIVE
  id : identifier := get_id_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM'))
     <= 1;
END_ENTITY; (* declared in: action_schema *)
 
ENTITY action_actual
SUBTYPE OF (executed_action);
END_ENTITY; (* declared in: activity_as_realized_mim *)
 
ENTITY action_assignment ABSTRACT SUPERTYPE;
  assigned_action : action;
DERIVE
  role : object_role := get_role(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE'))
     <= 1;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY action_directive;
  name : label;
  description :  OPTIONAL text;
  analysis : text;
  comment : text;
  requests : SET [1:?] OF versioned_action_request;
END_ENTITY; (* declared in: action_schema *)
 
ENTITY action_happening
SUBTYPE OF (action_relationship);
END_ENTITY; (* declared in: activity_as_realized_mim *)
 
ENTITY action_method
SUPERTYPE OF (ONEOF (task_element, task_method, task_method_version, 
task_objective));
  name : label;
  description :  OPTIONAL text;
  consequence : text;
  purpose : text;
END_ENTITY; (* declared in: action_schema *)
 
ENTITY action_method_assignment ABSTRACT SUPERTYPE;
  assigned_action_method : action_method;
  role : action_method_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY action_method_relationship
SUPERTYPE OF (ONEOF (task_element_relationship, task_method_relationship, 
task_method_version_relationship));
  name : label;
  description :  OPTIONAL text;
  relating_method : action_method;
  related_method : action_method;
END_ENTITY; (* declared in: action_schema *)
 
ENTITY action_method_role;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY action_method_to_select_from
SUBTYPE OF (action_method);
  number_of_elements : count_measure;
WHERE
  wr1 : number_of_elements >= 1;
  wr2 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_METHOD_RELATIONSHIP.RELATING_METHOD'
    )) >= number_of_elements;
END_ENTITY; (* declared in: method_definition_schema *)
 
ENTITY action_property;
  name : label;
  description : text;
  definition : characterized_action_definition;
END_ENTITY; (* declared in: process_property_schema *)
 
ENTITY action_property_relationship;
  name : label;
  description : text;
  relating_action_property : action_property;
  related_action_property : action_property;
WHERE
  wr1 : relating_action_property :<>: related_action_property;
END_ENTITY; (* declared in: process_property_schema *)
 
ENTITY action_property_representation;
  name : label;
  description : text;
  property : action_property;
  representation : representation;
END_ENTITY; (* declared in: process_property_representation_schema *)
 
ENTITY action_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_action : action;
  related_action : action;
END_ENTITY; (* declared in: action_schema *)
 
ENTITY action_request_assignment ABSTRACT SUPERTYPE;
  assigned_action_request : versioned_action_request;
DERIVE
  role : object_role := get_role(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE'))
     <= 1;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY action_request_solution;
  method : action_method;
  request : versioned_action_request;
DERIVE
  description : text := get_description_value(SELF);
  name : label := get_name_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
  wr2 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
END_ENTITY; (* declared in: action_schema *)
 
ENTITY action_request_status;
  status : label;
  assigned_request : versioned_action_request;
END_ENTITY; (* declared in: action_schema *)
 
ENTITY action_resource;
  name : label;
  description :  OPTIONAL text;
  usage : SET [1:?] OF supported_item;
  kind : action_resource_type;
END_ENTITY; (* declared in: action_schema *)
 
ENTITY action_resource_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_resource : action_resource;
  related_resource : action_resource;
END_ENTITY; (* declared in: action_schema *)
 
ENTITY action_resource_requirement;
  name : label;
  description : text;
  kind : resource_requirement_type;
  operations : SET [1:?] OF characterized_action_definition;
END_ENTITY; (* declared in: process_property_schema *)
 
ENTITY action_resource_requirement_relationship;
  name : label;
  description : text;
  relating_action_resource_requirement : action_resource_requirement;
  related_action_resource_requirement : action_resource_requirement;
WHERE
  wr1 : relating_action_resource_requirement :<>: 
    related_action_resource_requirement;
END_ENTITY; (* declared in: process_property_schema *)
 
ENTITY action_resource_type;
  name : label;
END_ENTITY; (* declared in: action_schema *)
 
ENTITY action_status;
  status : label;
  assigned_action : executed_action;
END_ENTITY; (* declared in: action_schema *)
 
ENTITY address;
  internal_location :  OPTIONAL label;
  street_number :  OPTIONAL label;
  street :  OPTIONAL label;
  postal_box :  OPTIONAL label;
  town :  OPTIONAL label;
  region :  OPTIONAL label;
  postal_code :  OPTIONAL label;
  country :  OPTIONAL label;
  facsimile_number :  OPTIONAL label;
  telephone_number :  OPTIONAL label;
  electronic_mail_address :  OPTIONAL label;
  telex_number :  OPTIONAL label;
DERIVE
  name : label := get_name_value(SELF);
  url : identifier := get_id_value(SELF);
WHERE
  wr1 : EXISTS(internal_location) OR EXISTS(street_number) OR EXISTS(street) OR
     EXISTS(postal_box) OR EXISTS(town) OR EXISTS(region) OR EXISTS(postal_code
    ) OR EXISTS(country) OR EXISTS(facsimile_number) OR EXISTS(telephone_number
    ) OR EXISTS(electronic_mail_address) OR EXISTS(telex_number);
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY advisory_task_element
SUBTYPE OF (task_element);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY alternate_product_relationship;
  name : label;
  definition :  OPTIONAL text;
  alternate : product;
  base : product;
  basis : text;
UNIQUE
  ur1 : alternate, base;
WHERE
  wr1 : alternate :<>: base;
END_ENTITY; (* declared in: product_structure_schema *)
 
ENTITY amount_of_substance_measure_with_unit
SUBTYPE OF (measure_with_unit);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.AMOUNT_OF_SUBSTANCE_UNIT' IN 
    TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY amount_of_substance_unit
SUBTYPE OF (named_unit);
WHERE
  wr1 : (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit
    .dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.
    time_exponent = 0.0) AND (SELF\named_unit.dimensions.
    electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.
    thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.
    amount_of_substance_exponent = 1.0) AND (SELF\named_unit.dimensions.
    luminous_intensity_exponent = 0.0);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY application_context;
  application : label;
DERIVE
  description : text := get_description_value(SELF);
  id : identifier := get_id_value(SELF);
INVERSE
  context_elements : SET [1:?] OF application_context_element FOR 
  frame_of_reference;
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
  wr2 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM'))
     <= 1;
END_ENTITY; (* declared in: application_context_schema *)
 
ENTITY application_context_element
SUPERTYPE OF (ONEOF (product_concept_context, product_context, 
product_definition_context));
  name : label;
  frame_of_reference : application_context;
END_ENTITY; (* declared in: application_context_schema *)
 
ENTITY application_protocol_definition;
  status : label;
  application_interpreted_model_schema_name : label;
  application_protocol_year : year_number;
  application : application_context;
END_ENTITY; (* declared in: application_context_schema *)
 
ENTITY applied_action_assignment
SUBTYPE OF (action_assignment);
  items : SET [1:?] OF action_items;
END_ENTITY; (* declared in: activity_mim *)
 
ENTITY applied_action_method_assignment
SUBTYPE OF (action_method_assignment);
  items : SET [1:?] OF action_method_items;
END_ENTITY; (* declared in: activity_method_assignment_mim *)
 
ENTITY applied_action_request_assignment
SUBTYPE OF (action_request_assignment);
  items : SET [1:?] OF action_request_item;
END_ENTITY; (* declared in: work_request_mim *)
 
ENTITY applied_approval_assignment
SUBTYPE OF (approval_assignment);
  items : SET [1:?] OF approval_item;
END_ENTITY; (* declared in: approval_mim *)
 
ENTITY applied_attribute_classification_assignment
SUBTYPE OF (attribute_classification_assignment);
  SELF\attribute_classification_assignment.assigned_class : class;
  items : SET [1:?] OF attribute_classification_item;
END_ENTITY; (* declared in: attribute_classification_mim *)
 
ENTITY applied_certification_assignment
SUBTYPE OF (certification_assignment);
  items : SET [1:?] OF certification_item;
END_ENTITY; (* declared in: certification_mim *)
 
ENTITY applied_classification_assignment
SUBTYPE OF (classification_assignment);
  items : SET [1:?] OF classification_item;
END_ENTITY; (* declared in: classification_assignment_mim *)
 
ENTITY applied_contract_assignment
SUBTYPE OF (contract_assignment);
  items : SET [1:?] OF contract_item;
END_ENTITY; (* declared in: contract_mim *)
 
ENTITY applied_date_and_time_assignment
SUBTYPE OF (date_and_time_assignment);
  items : SET [1:?] OF date_and_time_item;
END_ENTITY; (* declared in: date_time_assignment_mim *)
 
ENTITY applied_date_assignment
SUBTYPE OF (date_assignment);
  items : SET [1:?] OF date_item;
END_ENTITY; (* declared in: date_time_assignment_mim *)
 
ENTITY applied_document_reference
SUBTYPE OF (document_reference);
  items : SET [1:?] OF document_reference_item;
END_ENTITY; (* declared in: document_assignment_mim *)
 
ENTITY applied_document_usage_constraint_assignment
SUBTYPE OF (document_usage_constraint_assignment);
  items : SET [1:?] OF document_reference_item;
END_ENTITY; (* declared in: document_assignment_mim *)
 
ENTITY applied_effectivity_assignment
SUBTYPE OF (effectivity_assignment);
  items : SET [1:?] OF effectivity_item;
END_ENTITY; (* declared in: effectivity_application_mim *)
 
ENTITY applied_effectivity_context_assignment
SUBTYPE OF (effectivity_context_assignment);
  items : SET [1:?] OF product_as_individual;
END_ENTITY; (* declared in: ap239_part_definition_information_mim *)
 
ENTITY applied_event_occurrence_assignment
SUBTYPE OF (event_occurrence_assignment);
  items : SET [1:?] OF event_occurrence_item;
END_ENTITY; (* declared in: event_assignment_mim *)
 
ENTITY applied_experience_assignment
SUBTYPE OF (experience_assignment);
  items : SET [1:?] OF experience_item;
END_ENTITY; (* declared in: experience_mim *)
 
ENTITY applied_experience_type_assignment
SUBTYPE OF (experience_type_assignment);
  items : SET [1:?] OF experience_type_item;
END_ENTITY; (* declared in: experience_mim *)
 
ENTITY applied_external_identification_assignment
SUBTYPE OF (external_identification_assignment);
  items : SET [1:?] OF external_identification_item;
END_ENTITY; (* declared in: external_item_identification_assignment_mim *)
 
ENTITY applied_group_assignment
SUBTYPE OF (group_assignment);
  items : SET [1:?] OF groupable_item;
END_ENTITY; (* declared in: group_mim *)
 
ENTITY applied_identification_assignment
SUBTYPE OF (identification_assignment);
  items : SET [1:?] OF identification_item;
END_ENTITY; (* declared in: identification_assignment_mim *)
 
ENTITY applied_location_assignment
SUBTYPE OF (location_assignment);
  items : SET [1:?] OF location_item;
END_ENTITY; (* declared in: location_assignment_mim *)
 
ENTITY applied_location_representation_assignment
SUBTYPE OF (location_representation_assignment);
  items : SET [1:?] OF location_representation_item;
END_ENTITY; (* declared in: location_mim *)
 
ENTITY applied_name_assignment
SUBTYPE OF (name_assignment);
  item : name_item;
END_ENTITY; (* declared in: name_assignment_mim *)
 
ENTITY applied_organization_assignment
SUBTYPE OF (organization_assignment);
  items : SET [1:?] OF organization_item;
END_ENTITY; (* declared in: person_organization_assignment_mim *)
 
ENTITY applied_organization_type_assignment
SUBTYPE OF (organization_type_assignment);
  items : SET [1:?] OF organization_type_item;
END_ENTITY; (* declared in: organization_type_mim *)
 
ENTITY applied_organizational_project_assignment
SUBTYPE OF (organizational_project_assignment);
  items : SET [1:?] OF project_item;
END_ENTITY; (* declared in: project_mim *)
 
ENTITY applied_person_and_organization_assignment
SUBTYPE OF (person_and_organization_assignment);
  items : SET [1:?] OF person_and_organization_item;
END_ENTITY; (* declared in: person_organization_assignment_mim *)
 
ENTITY applied_person_type_assignment
SUBTYPE OF (person_type_assignment);
  items : SET [1:?] OF person_type_item;
END_ENTITY; (* declared in: type_of_person_mim *)
 
ENTITY applied_person_type_definition_assignment
SUBTYPE OF (person_type_definition_assignment);
  items : SET [1:?] OF person_definition_item;
END_ENTITY; (* declared in: type_of_person_mim *)
 
ENTITY applied_position_in_organization_assignment
SUBTYPE OF (position_in_organization_assignment);
  items : SET [1:?] OF position_in_organization_item;
END_ENTITY; (* declared in: position_in_organization_mim *)
 
ENTITY applied_position_in_organization_assignment_group_assignment
SUBTYPE OF (group_assignment);
  items : SET [1:?] OF position_in_organization_group_assignment_item;
END_ENTITY; (* declared in: position_in_organization_mim *)
 
ENTITY applied_position_in_organization_group_assignment
SUBTYPE OF (group_assignment);
  items : SET [1:?] OF position_in_organization_group_item;
END_ENTITY; (* declared in: position_in_organization_mim *)
 
ENTITY applied_position_in_organization_type_assignment
SUBTYPE OF (position_in_organization_type_assignment);
  items : SET [1:?] OF position_in_organization_type_item;
END_ENTITY; (* declared in: position_in_organization_mim *)
 
ENTITY applied_project_group_name_assignment
SUBTYPE OF (name_assignment);
  items : SET [1:?] OF project_group_name_item;
END_ENTITY; (* declared in: position_in_organization_mim *)
 
ENTITY applied_qualification_type_assignment
SUBTYPE OF (qualification_type_assignment);
  items : SET [1:?] OF person_organization_item;
END_ENTITY; (* declared in: qualifications_mim *)
 
ENTITY applied_security_classification_assignment
SUBTYPE OF (security_classification_assignment);
  items : SET [1:?] OF security_classification_item;
END_ENTITY; (* declared in: security_classification_mim *)
 
ENTITY applied_state_observed_assignment
SUBTYPE OF (state_observed_assignment);
  items : SET [1:?] OF state_observed_of_item;
END_ENTITY; (* declared in: state_observed_mim *)
 
ENTITY applied_state_type_assignment
SUBTYPE OF (state_type_assignment);
  items : SET [1:?] OF state_type_of_item;
END_ENTITY; (* declared in: state_definition_mim *)
 
ENTITY applied_time_interval_assignment
SUBTYPE OF (time_interval_assignment);
  items : SET OF time_interval_item;
END_ENTITY; (* declared in: time_interval_assignment_mim *)
 
ENTITY applied_usage_right
SUBTYPE OF (applied_action_assignment);
  SELF\applied_action_assignment.items : SET [1:?] OF ir_usage_item;
END_ENTITY; (* declared in: information_rights_mim *)
 
ENTITY approval;
  status : approval_status;
  level : label;
END_ENTITY; (* declared in: approval_schema *)
 
ENTITY approval_assignment ABSTRACT SUPERTYPE;
  assigned_approval : approval;
DERIVE
  role : object_role := get_role(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE'))
     <= 1;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY approval_date_time;
  date_time : date_time_select;
  dated_approval : approval;
DERIVE
  role : object_role := get_role(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE'))
     <= 1;
END_ENTITY; (* declared in: approval_schema *)
 
ENTITY approval_person_organization;
  person_organization : person_organization_select;
  authorized_approval : approval;
  role : approval_role;
END_ENTITY; (* declared in: approval_schema *)
 
ENTITY approval_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_approval : approval;
  related_approval : approval;
END_ENTITY; (* declared in: approval_schema *)
 
ENTITY approval_role;
  role : label;
DERIVE
  description : text := get_description_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
END_ENTITY; (* declared in: approval_schema *)
 
ENTITY approval_status;
  name : label;
END_ENTITY; (* declared in: approval_schema *)
 
ENTITY area_measure_with_unit
SUBTYPE OF (measure_with_unit);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.AREA_UNIT' IN TYPEOF(SELF\
    measure_with_unit.unit_component);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY area_unit
SUBTYPE OF (named_unit);
WHERE
  wr1 : (SELF\named_unit.dimensions.length_exponent = 2.0) AND (SELF\named_unit
    .dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.
    time_exponent = 0.0) AND (SELF\named_unit.dimensions.
    electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.
    thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.
    amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.
    luminous_intensity_exponent = 0.0);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY ascribable_state;
  name : label;
  description :  OPTIONAL text;
  pertaining_state_type : state_type;
  ascribed_state_observed : state_observed;
END_ENTITY; (* declared in: state_observed_schema *)
 
ENTITY ascribable_state_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_ascribable_state : ascribable_state;
  related_ascribable_state : ascribable_state;
END_ENTITY; (* declared in: state_observed_schema *)
 
ENTITY assembly_component_usage
SUPERTYPE OF (ONEOF (next_assembly_usage_occurrence, 
specified_higher_usage_occurrence, promissory_usage_occurrence))
SUBTYPE OF (product_definition_usage);
  reference_designator :  OPTIONAL identifier;
END_ENTITY; (* declared in: product_structure_schema *)
 
ENTITY assembly_component_usage_substitute;
  name : label;
  definition :  OPTIONAL text;
  base : assembly_component_usage;
  substitute : assembly_component_usage;
UNIQUE
  ur1 : base, substitute;
WHERE
  wr1 : base.relating_product_definition :=: substitute.
    relating_product_definition;
  wr2 : base :<>: substitute;
END_ENTITY; (* declared in: product_structure_schema *)
 
ENTITY assigned_requirement
SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : requirement_assignment;
  items : SET [1:1] OF product_definition;
END_ENTITY; (* declared in: requirement_assignment_mim *)
 
ENTITY attachment_slot_as_planned
SUBTYPE OF (product_definition_formation);
END_ENTITY; (* declared in: attachment_slot_mim *)
 
ENTITY attachment_slot_as_realized
SUBTYPE OF (product_definition_formation);
END_ENTITY; (* declared in: attachment_slot_mim *)
 
ENTITY attachment_slot_design
SUBTYPE OF (product_definition_formation);
END_ENTITY; (* declared in: attachment_slot_mim *)
 
ENTITY attachment_slot_design_to_planned
SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.
  relating_product_definition_formation : attachment_slot_design;
  SELF\product_definition_formation_relationship.
  related_product_definition_formation : attachment_slot_as_planned;
WHERE
  wr1 : SELF.relating_product_definition_formation.of_product :=: SELF.
    related_product_definition_formation.of_product;
END_ENTITY; (* declared in: attachment_slot_mim *)
 
ENTITY attachment_slot_design_to_realized
SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.
  relating_product_definition_formation : attachment_slot_design;
  SELF\product_definition_formation_relationship.
  related_product_definition_formation : attachment_slot_as_realized;
WHERE
  wr1 : SELF.relating_product_definition_formation.of_product :=: SELF.
    related_product_definition_formation.of_product;
END_ENTITY; (* declared in: attachment_slot_mim *)
 
ENTITY attachment_slot_on_product
SUBTYPE OF (product_definition_relationship);
END_ENTITY; (* declared in: attachment_slot_mim *)
 
ENTITY attachment_slot_planned_to_realized
SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.
  relating_product_definition_formation : attachment_slot_as_planned;
  SELF\product_definition_formation_relationship.
  related_product_definition_formation : attachment_slot_as_realized;
WHERE
  wr1 : SELF.relating_product_definition_formation.of_product :=: SELF.
    related_product_definition_formation.of_product;
END_ENTITY; (* declared in: attachment_slot_mim *)
 
ENTITY attribute_classification_assignment ABSTRACT SUPERTYPE;
  assigned_class : group;
  attribute_name : label;
  role : classification_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY attribute_language_assignment
SUBTYPE OF (attribute_classification_assignment);
  SELF\attribute_classification_assignment.assigned_class : language;
  items : SET [1:?] OF attribute_language_item;
WHERE
  wr1 : SELF\attribute_classification_assignment.role.name IN ['primary', 
    'translated'];
  wr2 : SELF\attribute_classification_assignment.attribute_name <> '';
END_ENTITY; (* declared in: multi_linguism_mim *)
 
ENTITY attribute_value_assignment ABSTRACT SUPERTYPE;
  attribute_name : label;
  attribute_value : attribute_type;
  role : attribute_value_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY attribute_value_role;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY axis2_placement_2d
SUBTYPE OF (placement);
  ref_direction :  OPTIONAL direction;
DERIVE
  p :  LIST [2:2] OF direction := build_2axes(ref_direction);
WHERE
  wr1 : SELF\geometric_representation_item.dim = 2;
END_ENTITY; (* declared in: geometry_schema *)
 
ENTITY axis2_placement_3d
SUBTYPE OF (placement);
  axis :  OPTIONAL direction;
  ref_direction :  OPTIONAL direction;
DERIVE
  p :  LIST [3:3] OF direction := build_axes(axis, ref_direction);
WHERE
  wr1 : SELF\placement.location.dim = 3;
  wr2 : NOT EXISTS(axis) OR (axis.dim = 3);
  wr3 : NOT EXISTS(ref_direction) OR (ref_direction.dim = 3);
  wr4 : NOT EXISTS(axis) OR NOT EXISTS(ref_direction) OR (cross_product(axis, 
    ref_direction).magnitude > 0.0);
END_ENTITY; (* declared in: geometry_schema *)
 
ENTITY breakdown_context
SUPERTYPE OF (ONEOF (functional_breakdown_context, hybrid_breakdown_context, 
physical_breakdown_context, system_breakdown_context, zone_breakdown_context))
SUBTYPE OF (product_definition_relationship);
END_ENTITY; (* declared in: product_breakdown_mim *)
 
ENTITY breakdown_element_group_assignment
SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : 
  product_definition_element_relationship;
  items : SET [1:1] OF product_definition_or_breakdown_element_usage;
END_ENTITY; (* declared in: product_breakdown_mim *)
 
ENTITY breakdown_element_realization
SUBTYPE OF (characterized_object, product_definition_element_relationship);
END_ENTITY; (* declared in: product_breakdown_mim *)
 
ENTITY breakdown_element_usage
SUPERTYPE OF (ONEOF (functional_element_usage, hybrid_element_usage, 
physical_element_usage, system_element_usage, zone_element_usage))
SUBTYPE OF (product_definition_relationship);
END_ENTITY; (* declared in: product_breakdown_mim *)
 
ENTITY breakdown_of
SUBTYPE OF (product_definition_relationship);
END_ENTITY; (* declared in: product_breakdown_mim *)
 
ENTITY calendar_date
SUBTYPE OF (date);
  day_component : day_in_month_number;
  month_component : month_in_year_number;
WHERE
  wr1 : valid_calendar_date(SELF);
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY cartesian_point
SUBTYPE OF (point);
  coordinates :  LIST [1:3] OF length_measure;
END_ENTITY; (* declared in: geometry_schema *)
 
ENTITY cartesian_transformation_operator
SUPERTYPE OF (ONEOF (cartesian_transformation_operator_2d, 
cartesian_transformation_operator_3d))
SUBTYPE OF (geometric_representation_item, functionally_defined_transformation)
  ;
  axis1 :  OPTIONAL direction;
  axis2 :  OPTIONAL direction;
  local_origin : cartesian_point;
  scale :  OPTIONAL REAL;
DERIVE
  scl : REAL := NVL(scale, 1.0);
WHERE
  wr1 : scl > 0.0;
END_ENTITY; (* declared in: geometry_schema *)
 
ENTITY cartesian_transformation_operator_2d
SUBTYPE OF (cartesian_transformation_operator);
DERIVE
  u :  LIST [2:2] OF direction := base_axis(2, SELF\
  cartesian_transformation_operator.axis1, SELF\
  cartesian_transformation_operator.axis2, ?);
WHERE
  wr1 : SELF\geometric_representation_item.dim = 2;
END_ENTITY; (* declared in: geometry_schema *)
 
ENTITY cartesian_transformation_operator_3d
SUBTYPE OF (cartesian_transformation_operator);
  axis3 :  OPTIONAL direction;
DERIVE
  u :  LIST [3:3] OF direction := base_axis(3, SELF\
  cartesian_transformation_operator.axis1, SELF\
  cartesian_transformation_operator.axis2, axis3);
WHERE
  wr1 : SELF\geometric_representation_item.dim = 3;
END_ENTITY; (* declared in: geometry_schema *)
 
ENTITY celsius_temperature_measure_with_unit
SUBTYPE OF (measure_with_unit);
WHERE
  wr1 : 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN
     TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY certification;
  name : label;
  purpose : text;
  kind : certification_type;
END_ENTITY; (* declared in: certification_schema *)
 
ENTITY certification_assignment ABSTRACT SUPERTYPE;
  assigned_certification : certification;
DERIVE
  role : object_role := get_role(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE'))
     <= 1;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY certification_type;
  description : label;
END_ENTITY; (* declared in: certification_schema *)
 
ENTITY characterizable_applied_action_assignment
SUBTYPE OF (applied_action_assignment, characterized_object);
END_ENTITY; (* declared in: activity_characterized_mim *)
 
ENTITY characterized_address
SUBTYPE OF (address, characterized_object);
END_ENTITY; (* declared in: ap239_part_definition_information_mim *)
 
ENTITY characterized_applied_action_assignment
SUBTYPE OF (applied_action_assignment, characterized_object);
END_ENTITY; (* declared in: ap239_work_definition_mim *)
 
ENTITY characterized_applied_action_method_assignment
SUBTYPE OF (applied_action_method_assignment, characterized_object);
END_ENTITY; (* declared in: ap239_task_specification_resourced_mim *)
 
ENTITY characterized_applied_document_reference
SUBTYPE OF (applied_document_reference, characterized_object);
END_ENTITY; (* declared in: ap239_document_management_mim *)
 
ENTITY characterized_applied_document_usage_constraint_assignment
SUBTYPE OF (applied_document_usage_constraint_assignment, characterized_object)
  ;
END_ENTITY; (* declared in: ap239_document_management_mim *)
 
ENTITY characterized_applied_location_assignment
SUBTYPE OF (applied_location_assignment, characterized_object);
END_ENTITY; (* declared in: location_assignment_characterized_mim *)
 
ENTITY characterized_applied_organization_assignment
SUBTYPE OF (applied_organization_assignment, characterized_object);
END_ENTITY; (* declared in: ap239_part_definition_information_mim *)
 
ENTITY characterized_applied_person_and_organization_assignment
SUBTYPE OF (applied_person_and_organization_assignment, characterized_object);
END_ENTITY; (* declared in: ap239_part_definition_information_mim *)
 
ENTITY characterized_applied_state_assignment
SUBTYPE OF (applied_state_observed_assignment, characterized_object);
END_ENTITY; (* declared in: ap239_task_specification_resourced_mim *)
 
ENTITY characterized_applied_state_type_assignment
SUBTYPE OF (applied_state_type_assignment, characterized_object);
END_ENTITY; (* declared in: ap239_task_specification_resourced_mim *)
 
ENTITY characterized_experience
SUBTYPE OF (characterized_object, experience);
END_ENTITY; (* declared in: experience_mim *)
 
ENTITY characterized_hierarchical_interface_connection
SUBTYPE OF (characterized_object, hierarchical_interface_connection);
END_ENTITY; (* declared in: ap239_part_definition_information_mim *)
 
ENTITY characterized_interface_connection
SUBTYPE OF (characterized_object, interface_connection);
END_ENTITY; (* declared in: ap239_part_definition_information_mim *)
 
ENTITY characterized_interface_connector_occurrence
SUBTYPE OF (characterized_object, interface_connector_occurrence);
END_ENTITY; (* declared in: ap239_part_definition_information_mim *)
 
ENTITY characterized_interface_definition_connection
SUBTYPE OF (characterized_object, interface_definition_connection);
END_ENTITY; (* declared in: ap239_part_definition_information_mim *)
 
ENTITY characterized_location_object
SUBTYPE OF (characterized_object, location);
END_ENTITY; (* declared in: location_mim *)
 
ENTITY characterized_object;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: product_property_definition_schema *)
 
ENTITY characterized_object_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_object : characterized_object;
  related_object : characterized_object;
END_ENTITY; (* declared in: product_property_definition_schema *)
 
ENTITY characterized_organizational_project
SUBTYPE OF (characterized_object, organizational_project);
END_ENTITY; (* declared in: ap239_part_definition_information_mim *)
 
ENTITY characterized_person
SUBTYPE OF (characterized_object, person);
END_ENTITY; (* declared in: ap239_part_definition_information_mim *)
 
ENTITY characterized_person_and_organization
SUBTYPE OF (characterized_object, person_and_organization);
END_ENTITY; (* declared in: ap239_part_definition_information_mim *)
 
ENTITY characterized_person_type_definition
SUBTYPE OF (characterized_object, person_type_definition);
END_ENTITY; (* declared in: type_of_person_mim *)
 
ENTITY class
SUBTYPE OF (group);
END_ENTITY; (* declared in: classification_schema *)
 
ENTITY class_by_extension
SUBTYPE OF (class);
END_ENTITY; (* declared in: classification_schema *)
 
ENTITY class_by_intension
SUBTYPE OF (class);
END_ENTITY; (* declared in: classification_schema *)
 
ENTITY classification_assignment ABSTRACT SUPERTYPE;
  assigned_class : group;
  role : classification_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY classification_role;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY complement;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  set_1 : class;
  set_2 : class;
  universe : class;
WHERE
  complement_different : NOT identical_sets(set_1, set_2);
END_ENTITY; (* declared in: set_theory_schema *)
 
ENTITY compound_representation_item
SUBTYPE OF (representation_item);
  item_element : compound_item_definition;
END_ENTITY; (* declared in: representation_schema *)
 
ENTITY concurrent_action_method
SUBTYPE OF (action_method_relationship);
END_ENTITY; (* declared in: method_definition_schema *)
 
ENTITY concurrent_task_element
SUBTYPE OF (task_element);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY condition
SUBTYPE OF (action_method);
END_ENTITY; (* declared in: condition_mim *)
 
ENTITY configuration_design;
  configuration : configuration_item;
  design : configuration_design_item;
DERIVE
  name : label := get_name_value(SELF);
  description : text := get_description_value(SELF);
UNIQUE
  ur1 : configuration, design;
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
  wr2 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
END_ENTITY; (* declared in: configuration_management_schema *)
 
ENTITY configuration_effectivity
SUBTYPE OF (product_definition_effectivity);
  configuration : configuration_design;
UNIQUE
  ur1 : configuration, usage, id;
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_USAGE' IN 
    TYPEOF(SELF\product_definition_effectivity.usage);
END_ENTITY; (* declared in: configuration_management_schema *)
 
ENTITY configuration_item;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  item_concept : product_concept;
  purpose :  OPTIONAL label;
END_ENTITY; (* declared in: configuration_management_schema *)
 
ENTITY containing_message
SUBTYPE OF (group_assignment);
  items : SET [1:1] OF structured_message;
  SELF\group_assignment.assigned_group : message_contents_group;
DERIVE
  message_contents_group : message_contents_group := SELF\group_assignment.
  assigned_group;
END_ENTITY; (* declared in: message_mim *)
 
ENTITY context_dependent_shape_representation;
  representation_relation : shape_representation_relationship;
  represented_product_relation : product_definition_shape;
DERIVE
  description : text := get_description_value(SELF);
  name : label := get_name_value(SELF);
WHERE
  wr1 : 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP' 
    IN TYPEOF(SELF.represented_product_relation.definition);
  wr2 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
  wr3 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
END_ENTITY; (* declared in: product_property_representation_schema *)
 
ENTITY context_dependent_unit
SUBTYPE OF (named_unit);
  name : label;
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY contract;
  name : label;
  purpose : text;
  kind : contract_type;
END_ENTITY; (* declared in: contract_schema *)
 
ENTITY contract_assignment ABSTRACT SUPERTYPE;
  assigned_contract : contract;
DERIVE
  role : object_role := get_role(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE'))
     <= 1;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY contract_relationship;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  relating_contract : contract;
  related_contract : contract;
END_ENTITY; (* declared in: contract_schema *)
 
ENTITY contract_type;
  description : label;
END_ENTITY; (* declared in: contract_schema *)
 
ENTITY conversion_based_unit
SUBTYPE OF (named_unit);
  name : label;
  conversion_factor : measure_with_unit;
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY coordinated_universal_time_offset;
  hour_offset : INTEGER;
  minute_offset :  OPTIONAL INTEGER;
  sense : ahead_or_behind;
DERIVE
  actual_minute_offset : INTEGER := NVL(minute_offset, 0);
WHERE
  wr1 : {0 <= hour_offset < 24};
  wr2 : {0 <= actual_minute_offset <= 59};
  wr3 : NOT (((hour_offset <> 0) OR (actual_minute_offset <> 0)) AND (sense = 
    exact));
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY date
SUPERTYPE OF (ONEOF (calendar_date, ordinal_date, week_of_year_and_day_date));
  year_component : year_number;
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY date_and_time;
  date_component : date;
  time_component : local_time;
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY date_and_time_assignment ABSTRACT SUPERTYPE;
  assigned_date_and_time : date_and_time;
  role : date_time_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY date_assignment ABSTRACT SUPERTYPE;
  assigned_date : date;
  role : date_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY date_role;
  name : label;
DERIVE
  description : text := get_description_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY date_time_role;
  name : label;
DERIVE
  description : text := get_description_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY dated_effectivity
SUBTYPE OF (effectivity);
  effectivity_end_date :  OPTIONAL date_time_or_event_occurrence;
  effectivity_start_date : date_time_or_event_occurrence;
END_ENTITY; (* declared in: effectivity_schema *)
 
ENTITY derived_unit;
  elements : SET [1:?] OF derived_unit_element;
DERIVE
  name : label := get_name_value(SELF);
WHERE
  wr1 : (SIZEOF(elements) > 1) OR (SIZEOF(elements) = 1) AND (elements[1].
    exponent <> 1.0);
  wr2 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY derived_unit_element;
  unit : named_unit;
  exponent : REAL;
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY description_attribute;
  attribute_value : text;
  described_item : description_attribute_select;
END_ENTITY; (* declared in: basic_attribute_schema *)
 
ENTITY descriptive_representation_item
SUBTYPE OF (representation_item);
  description : text;
END_ENTITY; (* declared in: qualified_measure_schema *)
 
ENTITY dimensional_exponents;
  length_exponent : REAL;
  mass_exponent : REAL;
  time_exponent : REAL;
  electric_current_exponent : REAL;
  thermodynamic_temperature_exponent : REAL;
  amount_of_substance_exponent : REAL;
  luminous_intensity_exponent : REAL;
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY directed_action
SUBTYPE OF (executed_action);
  directive : action_directive;
END_ENTITY; (* declared in: action_schema *)
 
ENTITY direction
SUBTYPE OF (geometric_representation_item);
  direction_ratios :  LIST [2:3] OF REAL;
WHERE
  wr1 : SIZEOF(QUERY(tmp <* direction_ratios | tmp <> 0.0)) > 0;
END_ENTITY; (* declared in: geometry_schema *)
 
ENTITY document;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  kind : document_type;
INVERSE
  representation_types : SET OF document_representation_type FOR 
  represented_document;
END_ENTITY; (* declared in: document_schema *)
 
ENTITY document_file
SUBTYPE OF (document, characterized_object);
WHERE
  wr1 : SELF\characterized_object.name = '';
  wr2 : NOT EXISTS(SELF\characterized_object.description);
  wr3 : SIZEOF(QUERY(drt <* SELF\document.representation_types | drt.name IN [
    'digital', 'physical'])) = 1;
END_ENTITY; (* declared in: file_identification_mim *)
 
ENTITY document_product_association;
  name : label;
  description :  OPTIONAL text;
  relating_document : document;
  related_product : product_or_formation_or_definition;
END_ENTITY; (* declared in: document_schema *)
 
ENTITY document_product_equivalence
SUBTYPE OF (document_product_association);
WHERE
  wr1 : SELF\document_product_association.name = 'equivalence';
  wr2 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT' IN TYPEOF(SELF\
    document_product_association.related_product)) OR (SELF\
    document_product_association.relating_document.kind.product_data_type = 
    'configuration controlled document') AND (SIZEOF(QUERY(prpc <* USEDIN(SELF\
    document_product_association.related_product, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS'
    ) | prpc.name = 'document')) = 1);
  wr3 : NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_FORMATION' IN 
    TYPEOF(SELF.related_product)) OR (SELF\document_product_association.
    relating_document.kind.product_data_type = 
    'configuration controlled document version') AND (SIZEOF(QUERY(prpc <* 
    USEDIN(SELF.related_product\product_definition_formation.of_product, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS'
    ) | prpc.name = 'document')) = 1);
  wr4 : NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION' IN 
    TYPEOF(SELF.related_product)) OR (SELF\document_product_association.
    relating_document.kind.product_data_type = 
    'configuration controlled document definition') AND (SIZEOF(QUERY(prpc <* 
    USEDIN(SELF\document_product_association.related_product\product_definition
    .formation.of_product, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS'
    ) | prpc.name = 'document')) = 1);
END_ENTITY; (* declared in: document_assignment_mim *)
 
ENTITY document_reference ABSTRACT SUPERTYPE;
  assigned_document : document;
  source : label;
DERIVE
  role : object_role := get_role(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE'))
     <= 1;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY document_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_document : document;
  related_document : document;
END_ENTITY; (* declared in: document_schema *)
 
ENTITY document_representation_type;
  name : label;
  represented_document : document;
END_ENTITY; (* declared in: document_schema *)
 
ENTITY document_type;
  product_data_type : label;
END_ENTITY; (* declared in: document_schema *)
 
ENTITY document_usage_constraint;
  source : document;
  subject_element : label;
  subject_element_value : text;
END_ENTITY; (* declared in: document_schema *)
 
ENTITY document_usage_constraint_assignment ABSTRACT SUPERTYPE;
  assigned_document_usage : document_usage_constraint;
  role : document_usage_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY document_usage_role;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY effectivity
SUPERTYPE OF (ONEOF (serial_numbered_effectivity, dated_effectivity, 
lot_effectivity, time_interval_based_effectivity));
  id : identifier;
DERIVE
  name : label := get_name_value(SELF);
  description : text := get_description_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
  wr2 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
END_ENTITY; (* declared in: effectivity_schema *)
 
ENTITY effectivity_assignment ABSTRACT SUPERTYPE;
  assigned_effectivity : effectivity;
DERIVE
  role : object_role := get_role(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE'))
     <= 1;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY effectivity_context_assignment ABSTRACT SUPERTYPE;
  assigned_effectivity_assignment : effectivity_assignment;
  role : effectivity_context_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY effectivity_context_role;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY effectivity_relationship;
  name : label;
  description :  OPTIONAL text;
  related_effectivity : effectivity;
  relating_effectivity : effectivity;
END_ENTITY; (* declared in: effectivity_schema *)
 
ENTITY electric_current_measure_with_unit
SUBTYPE OF (measure_with_unit);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ELECTRIC_CURRENT_UNIT' IN 
    TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY electric_current_unit
SUBTYPE OF (named_unit);
WHERE
  wr1 : (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit
    .dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.
    time_exponent = 0.0) AND (SELF\named_unit.dimensions.
    electric_current_exponent = 1.0) AND (SELF\named_unit.dimensions.
    thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.
    amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.
    luminous_intensity_exponent = 0.0);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY end_task
SUBTYPE OF (task_element);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY envelope
SUBTYPE OF (characterized_object, product);
END_ENTITY; (* declared in: envelope_mim *)
 
ENTITY envelope_relationship
SUBTYPE OF (product_relationship);
END_ENTITY; (* declared in: envelope_mim *)
 
ENTITY event_occurrence;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY event_occurrence_assignment ABSTRACT SUPERTYPE;
  assigned_event_occurrence : event_occurrence;
  role : event_occurrence_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY event_occurrence_context_role;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY event_occurrence_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_event : event_occurrence;
  related_event : event_occurrence;
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY event_occurrence_role;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY executed_action
SUBTYPE OF (action);
END_ENTITY; (* declared in: action_schema *)
 
ENTITY exit_loop
SUBTYPE OF (task_element);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY experience;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: experience_schema *)
 
ENTITY experience_assignment ABSTRACT SUPERTYPE;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  assigned_experience : experience;
  role : experience_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY experience_role;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY experience_type;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: experience_schema *)
 
ENTITY experience_type_assignment ABSTRACT SUPERTYPE;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  assigned_experience_type : experience_type;
  role : experience_type_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY experience_type_relationship;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  relating_experience_type : experience_type;
  related_experience_type : experience_type;
END_ENTITY; (* declared in: experience_schema *)
 
ENTITY experience_type_role;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY external_class_library
SUBTYPE OF (external_source);
END_ENTITY; (* declared in: external_class_mim *)
 
ENTITY external_identification_assignment ABSTRACT SUPERTYPE
SUBTYPE OF (identification_assignment);
  source : external_source;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY external_source;
  source_id : source_item;
DERIVE
  description : text := get_description_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
END_ENTITY; (* declared in: external_reference_schema *)
 
ENTITY externally_defined_class
SUBTYPE OF (class, externally_defined_item);
END_ENTITY; (* declared in: external_class_mim *)
 
ENTITY externally_defined_item;
  item_id : source_item;
  source : external_source;
END_ENTITY; (* declared in: external_reference_schema *)
 
ENTITY functional_breakdown_context
SUBTYPE OF (breakdown_context);
END_ENTITY; (* declared in: functional_breakdown_mim *)
 
ENTITY functional_element_usage
SUBTYPE OF (breakdown_element_usage);
END_ENTITY; (* declared in: functional_breakdown_mim *)
 
ENTITY functionally_defined_transformation;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: representation_schema *)
 
ENTITY general_property;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: product_property_definition_schema *)
 
ENTITY general_property_association;
  name : label;
  description :  OPTIONAL text;
  base_definition : general_property;
  derived_definition : derived_property_select;
WHERE
  wr1 : SIZEOF(USEDIN(derived_definition, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.GENERAL_PROPERTY_ASSOCIATION.DERIVED_DEFINITION'
    )) = 1;
  wr2 : derived_definition.name = base_definition.name;
END_ENTITY; (* declared in: product_property_definition_schema *)
 
ENTITY general_property_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_property : general_property;
  related_property : general_property;
END_ENTITY; (* declared in: product_property_definition_schema *)
 
ENTITY geometric_representation_context
SUBTYPE OF (representation_context);
  coordinate_space_dimension : dimension_count;
END_ENTITY; (* declared in: geometry_schema *)
 
ENTITY geometric_representation_item
SUPERTYPE OF (ONEOF (point, direction, vector, placement, 
cartesian_transformation_operator))
SUBTYPE OF (representation_item);
DERIVE
  dim : dimension_count := dimension_of(SELF);
WHERE
  wr1 : SIZEOF(QUERY(using_rep <* using_representations(SELF) | NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.GEOMETRIC_REPRESENTATION_CONTEXT' 
    IN TYPEOF(using_rep.context_of_items)))) = 0;
END_ENTITY; (* declared in: geometry_schema *)
 
ENTITY global_uncertainty_assigned_context
SUBTYPE OF (representation_context);
  uncertainty : SET [1:?] OF uncertainty_measure_with_unit;
END_ENTITY; (* declared in: representation_schema *)
 
ENTITY global_unit_assigned_context
SUBTYPE OF (representation_context);
  units : SET [1:?] OF unit;
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY group;
  name : label;
  description :  OPTIONAL text;
DERIVE
  id : identifier := get_id_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM'))
     <= 1;
END_ENTITY; (* declared in: group_schema *)
 
ENTITY group_assignment ABSTRACT SUPERTYPE;
  assigned_group : group;
DERIVE
  role : object_role := get_role(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE'))
     <= 1;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY group_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_group : group;
  related_group : group;
END_ENTITY; (* declared in: group_schema *)
 
ENTITY hierarchical_interface_connection
SUBTYPE OF (interface_connection);
END_ENTITY; (* declared in: interface_mim *)
 
ENTITY hybrid_breakdown_context
SUBTYPE OF (breakdown_context);
END_ENTITY; (* declared in: hybrid_breakdown_mim *)
 
ENTITY hybrid_element_usage
SUBTYPE OF (breakdown_element_usage);
END_ENTITY; (* declared in: hybrid_breakdown_mim *)
 
ENTITY id_attribute;
  attribute_value : identifier;
  identified_item : id_attribute_select;
END_ENTITY; (* declared in: basic_attribute_schema *)
 
ENTITY identification_assignment ABSTRACT SUPERTYPE;
  assigned_id : identifier;
  role : identification_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY identification_role;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY in_zone
SUBTYPE OF (group);
END_ENTITY; (* declared in: zonal_breakdown_mim *)
 
ENTITY information_right
SUBTYPE OF (action_method);
END_ENTITY; (* declared in: information_rights_mim *)
 
ENTITY information_usage_right
SUBTYPE OF (action_method);
END_ENTITY; (* declared in: information_rights_mim *)
 
ENTITY interface_connection
SUBTYPE OF (group);
END_ENTITY; (* declared in: interface_mim *)
 
ENTITY interface_connector_as_planned
SUBTYPE OF (product_definition_formation);
END_ENTITY; (* declared in: interface_lifecycle_mim *)
 
ENTITY interface_connector_as_realized
SUBTYPE OF (product_definition_formation);
END_ENTITY; (* declared in: interface_lifecycle_mim *)
 
ENTITY interface_connector_definition
SUBTYPE OF (product_definition);
END_ENTITY; (* declared in: interface_mim *)
 
ENTITY interface_connector_design
SUBTYPE OF (product_definition_formation);
END_ENTITY; (* declared in: interface_lifecycle_mim *)
 
ENTITY interface_connector_design_to_planned
SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.
  relating_product_definition_formation : interface_connector_design;
  SELF\product_definition_formation_relationship.
  related_product_definition_formation : interface_connector_as_planned;
WHERE
  wr1 : SELF.relating_product_definition_formation.of_product :=: SELF.
    related_product_definition_formation.of_product;
END_ENTITY; (* declared in: interface_lifecycle_mim *)
 
ENTITY interface_connector_design_to_realized
SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.
  relating_product_definition_formation : interface_connector_design;
  SELF\product_definition_formation_relationship.
  related_product_definition_formation : interface_connector_as_realized;
WHERE
  wr1 : SELF.relating_product_definition_formation.of_product :=: SELF.
    related_product_definition_formation.of_product;
END_ENTITY; (* declared in: interface_lifecycle_mim *)
 
ENTITY interface_connector_occurrence
SUBTYPE OF (group);
END_ENTITY; (* declared in: interface_mim *)
 
ENTITY interface_connector_planned_to_realized
SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.
  relating_product_definition_formation : interface_connector_as_planned;
  SELF\product_definition_formation_relationship.
  related_product_definition_formation : interface_connector_as_realized;
WHERE
  wr1 : SELF.relating_product_definition_formation.of_product :=: SELF.
    related_product_definition_formation.of_product;
END_ENTITY; (* declared in: interface_lifecycle_mim *)
 
ENTITY interface_connector_version
SUBTYPE OF (product_definition_formation);
END_ENTITY; (* declared in: interface_mim *)
 
ENTITY interface_definition_connection
SUBTYPE OF (product_definition_relationship);
END_ENTITY; (* declared in: interface_mim *)
 
ENTITY interface_definition_for
SUBTYPE OF (product_definition_relationship);
END_ENTITY; (* declared in: interface_mim *)
 
ENTITY interface_specification_definition
SUBTYPE OF (product_definition);
END_ENTITY; (* declared in: interface_mim *)
 
ENTITY interface_specification_version
SUBTYPE OF (product_definition_formation);
END_ENTITY; (* declared in: interface_mim *)
 
ENTITY intersection;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  operand : SET [2:?] OF class;
  resultant : class;
END_ENTITY; (* declared in: set_theory_schema *)
 
ENTITY item_defined_transformation;
  name : label;
  description :  OPTIONAL text;
  transform_item_1 : representation_item;
  transform_item_2 : representation_item;
END_ENTITY; (* declared in: representation_schema *)
 
ENTITY justification_assignment
SUBTYPE OF (group);
END_ENTITY; (* declared in: justification_mim *)
 
ENTITY justification_group_assignment
SUBTYPE OF (group_assignment);
  items : SET [1:1] OF product;
END_ENTITY; (* declared in: justification_mim *)
 
ENTITY justification_item_group_assignment
SUBTYPE OF (group_assignment);
  items : SET [1:1] OF justification_item;
END_ENTITY; (* declared in: justification_mim *)
 
ENTITY justification_support_assignment
SUBTYPE OF (group);
END_ENTITY; (* declared in: justification_mim *)
 
ENTITY justification_support_item_group_assignment
SUBTYPE OF (group_assignment);
  items : SET [1:1] OF justification_support_item;
END_ENTITY; (* declared in: justification_mim *)
 
ENTITY language
SUBTYPE OF (group);
WHERE
  wr1 : SELF\group.name <> '';
END_ENTITY; (* declared in: multi_linguism_mim *)
 
ENTITY length_measure_with_unit
SUBTYPE OF (measure_with_unit);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LENGTH_UNIT' IN TYPEOF(SELF\
    measure_with_unit.unit_component);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY length_unit
SUBTYPE OF (named_unit);
WHERE
  wr1 : (SELF\named_unit.dimensions.length_exponent = 1.0) AND (SELF\named_unit
    .dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.
    time_exponent = 0.0) AND (SELF\named_unit.dimensions.
    electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.
    thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.
    amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.
    luminous_intensity_exponent = 0.0);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY local_time;
  hour_component : hour_in_day;
  minute_component :  OPTIONAL minute_in_hour;
  second_component :  OPTIONAL second_in_minute;
  zone : coordinated_universal_time_offset;
WHERE
  wr1 : valid_time(SELF);
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY location;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: location_schema *)
 
ENTITY location_assignment ABSTRACT SUPERTYPE;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  assigned_location : location;
  role : location_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY location_relationship;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  relating_location : location;
  related_location : location;
END_ENTITY; (* declared in: location_schema *)
 
ENTITY location_representation_assignment ABSTRACT SUPERTYPE;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  represented_location : location;
  role : location_representation_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY location_representation_role;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY location_role;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY looping_element
SUBTYPE OF (task_element);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY lot_effectivity
SUBTYPE OF (effectivity);
  effectivity_lot_id : identifier;
  effectivity_lot_size : measure_with_unit;
END_ENTITY; (* declared in: effectivity_schema *)
 
ENTITY luminous_intensity_measure_with_unit
SUBTYPE OF (measure_with_unit);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LUMINOUS_INTENSITY_UNIT' IN 
    TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY luminous_intensity_unit
SUBTYPE OF (named_unit);
WHERE
  wr1 : (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit
    .dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.
    time_exponent = 0.0) AND (SELF\named_unit.dimensions.
    electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.
    thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.
    amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.
    luminous_intensity_exponent = 1.0);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY make_from_usage_option
SUBTYPE OF (product_definition_usage);
  ranking : INTEGER;
  ranking_rationale : text;
  quantity : measure_with_unit;
WHERE
  wr1 : NOT ('NUMBER' IN TYPEOF(quantity.value_component)) OR (quantity.
    value_component > 0);
END_ENTITY; (* declared in: product_structure_schema *)
 
ENTITY mapped_item
SUBTYPE OF (representation_item);
  mapping_source : representation_map;
  mapping_target : representation_item;
WHERE
  wr1 : acyclic_mapped_representation(using_representations(SELF), [SELF]);
END_ENTITY; (* declared in: representation_schema *)
 
ENTITY mass_measure_with_unit
SUBTYPE OF (measure_with_unit);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MASS_UNIT' IN TYPEOF(SELF\
    measure_with_unit.unit_component);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY mass_unit
SUBTYPE OF (named_unit);
WHERE
  wr1 : (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit
    .dimensions.mass_exponent = 1.0) AND (SELF\named_unit.dimensions.
    time_exponent = 0.0) AND (SELF\named_unit.dimensions.
    electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.
    thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.
    amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.
    luminous_intensity_exponent = 0.0);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY measure_representation_item
SUBTYPE OF (representation_item, measure_with_unit);
END_ENTITY; (* declared in: qualified_measure_schema *)
 
ENTITY measure_with_unit
SUPERTYPE OF (ONEOF (length_measure_with_unit, mass_measure_with_unit, 
time_measure_with_unit, electric_current_measure_with_unit, 
thermodynamic_temperature_measure_with_unit, 
celsius_temperature_measure_with_unit, amount_of_substance_measure_with_unit, 
luminous_intensity_measure_with_unit, plane_angle_measure_with_unit, 
solid_angle_measure_with_unit, area_measure_with_unit, volume_measure_with_unit
, ratio_measure_with_unit));
  value_component : measure_value;
  unit_component : unit;
WHERE
  wr1 : valid_units(SELF);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY message_contents_assignment
SUBTYPE OF (group_assignment);
  items : SET [1:?] OF representation;
  SELF\group_assignment.assigned_group : message_contents_group;
DERIVE
  message_contents_group : message_contents_group := SELF\group_assignment.
  assigned_group;
END_ENTITY; (* declared in: message_mim *)
 
ENTITY message_contents_group
SUBTYPE OF (group);
END_ENTITY; (* declared in: message_mim *)
 
ENTITY message_relationship
SUBTYPE OF (product_relationship);
  SELF\product_relationship.relating_product : structured_message;
  SELF\product_relationship.related_product : structured_message;
DERIVE
  relating_message : structured_message := SELF\product_relationship.
  relating_product;
  related_message : structured_message := SELF\product_relationship.
  related_product;
END_ENTITY; (* declared in: message_mim *)
 
ENTITY multi_language_attribute_assignment
SUBTYPE OF (attribute_value_assignment);
  items : SET [1:?] OF multi_language_attribute_item;
DERIVE
  translation_language : language := language_indication[1]\
  attribute_classification_assignment.assigned_class;
INVERSE
  language_indication : SET [1:1] OF attribute_language_assignment FOR items;
WHERE
  wr1 : SELF\attribute_value_assignment.role.name = 'alternate language';
  wr2 : SIZEOF(QUERY(ala <* language_indication | (ala\
    attribute_classification_assignment.attribute_name = 'attribute_value') AND
     (ala\attribute_classification_assignment.role.name = 'translated'))) = 1;
  wr3 : SELF\attribute_value_assignment.attribute_name <> '';
  wr4 : SIZEOF(QUERY(ci <* items | SIZEOF(QUERY(ata <* USEDIN(ci, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT.ITEMS'
    ) | (ata\attribute_value_assignment.attribute_name = SELF\
    attribute_value_assignment.attribute_name) AND (ata.translation_language
     :=: translation_language))) > 1)) = 0;
  wr5 : SIZEOF(QUERY(ci <* items | SIZEOF(QUERY(ata <* USEDIN(ci, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS'
    ) | (ata\attribute_classification_assignment.role.name = 'primary') AND (
    ata\attribute_classification_assignment.attribute_name = SELF\
    attribute_value_assignment.attribute_name) AND (ata\
    attribute_classification_assignment.assigned_class :=: translation_language
    ))) > 0)) = 0;
END_ENTITY; (* declared in: multi_linguism_mim *)
 
ENTITY name_assignment ABSTRACT SUPERTYPE;
  assigned_name : label;
DERIVE
  role : object_role := get_role(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE'))
     <= 1;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY name_attribute;
  attribute_value : label;
  named_item : name_attribute_select;
END_ENTITY; (* declared in: basic_attribute_schema *)
 
ENTITY named_unit
SUPERTYPE OF (ONEOF (si_unit, conversion_based_unit, context_dependent_unit)
 ANDOR ONEOF (length_unit, mass_unit, time_unit, electric_current_unit, 
thermodynamic_temperature_unit, amount_of_substance_unit, 
luminous_intensity_unit, plane_angle_unit, solid_angle_unit, area_unit, 
volume_unit, ratio_unit));
  dimensions : dimensional_exponents;
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY next_assembly_usage_occurrence
SUBTYPE OF (assembly_component_usage);
END_ENTITY; (* declared in: product_structure_schema *)
 
ENTITY object_role;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: basic_attribute_schema *)
 
ENTITY observation
SUBTYPE OF (action_actual);
END_ENTITY; (* declared in: observation_mim *)
 
ENTITY observation_consequence
SUBTYPE OF (action_request_solution);
END_ENTITY; (* declared in: observation_mim *)
 
ENTITY observation_relationship
SUBTYPE OF (action_relationship);
END_ENTITY; (* declared in: observation_mim *)
 
ENTITY ordinal_date
SUBTYPE OF (date);
  day_component : day_in_year_number;
WHERE
  wr1 : NOT leap_year(SELF.year_component) AND {1 <= day_component <= 365} OR 
    leap_year(SELF.year_component) AND {1 <= day_component <= 366};
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY organization;
  id :  OPTIONAL identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY organization_assignment ABSTRACT SUPERTYPE;
  assigned_organization : organization;
  role : organization_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY organization_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_organization : organization;
  related_organization : organization;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY organization_role;
  name : label;
DERIVE
  description : text := get_description_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY organization_type;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY organization_type_assignment ABSTRACT SUPERTYPE;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  assigned_organization_type : organization_type;
  role : organization_type_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY organization_type_relationship;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  relating_organization_type : organization_type;
  related_organization_type : organization_type;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY organization_type_role;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY organizational_address
SUBTYPE OF (address);
  organizations : SET [1:?] OF organization;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY organizational_project;
  name : label;
  description :  OPTIONAL text;
  responsible_organizations : SET [1:?] OF organization;
DERIVE
  id : identifier := get_id_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM'))
     <= 1;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY organizational_project_assignment ABSTRACT SUPERTYPE;
  assigned_organizational_project : organizational_project;
  role : organizational_project_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY organizational_project_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_organizational_project : organizational_project;
  related_organizational_project : organizational_project;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY organizational_project_role;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY person;
  id : identifier;
  last_name :  OPTIONAL label;
  first_name :  OPTIONAL label;
  middle_names :  OPTIONAL  LIST [1:?] OF label;
  prefix_titles :  OPTIONAL  LIST [1:?] OF label;
  suffix_titles :  OPTIONAL  LIST [1:?] OF label;
WHERE
  wr1 : EXISTS(last_name) OR EXISTS(first_name);
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY person_and_organization;
  the_person : person;
  the_organization : organization;
DERIVE
  name : label := get_name_value(SELF);
  description : text := get_description_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
  wr2 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY person_and_organization_address
SUBTYPE OF (organizational_address, personal_address);
  SELF\organizational_address.organizations : SET [1:1] OF organization;
  SELF\personal_address.people : SET [1:1] OF person;
WHERE
  wr1 : SIZEOF(QUERY(pao <* USEDIN(SELF\personal_address.people[1], 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PERSON_AND_ORGANIZATION.THE_PERSON'
    ) | pao.the_organization :=: SELF\organizational_address.organizations[1]))
     = 1;
END_ENTITY; (* declared in: person_organization_mim *)
 
ENTITY person_and_organization_assignment ABSTRACT SUPERTYPE;
  assigned_person_and_organization : person_and_organization;
  role : person_and_organization_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY person_and_organization_role;
  name : label;
DERIVE
  description : text := get_description_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY person_role;
  name : label;
DERIVE
  description : text := get_description_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY person_type;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY person_type_assignment ABSTRACT SUPERTYPE;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  assigned_person_type : person_type;
  role : person_type_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY person_type_definition;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  formation : person_type_definition_formation;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY person_type_definition_assignment ABSTRACT SUPERTYPE;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  assigned_person_type_definition : person_type_definition;
  role : person_type_definition_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY person_type_definition_formation;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  of_person_type : person_type;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY person_type_definition_relationship;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  relating_person_type_definition : person_type_definition;
  related_person_type_definition : person_type_definition;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY person_type_definition_role;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY person_type_role;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY personal_address
SUBTYPE OF (address);
  people : SET [1:?] OF person;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY physical_breakdown_context
SUBTYPE OF (breakdown_context);
END_ENTITY; (* declared in: physical_breakdown_mim *)
 
ENTITY physical_element_usage
SUBTYPE OF (breakdown_element_usage);
END_ENTITY; (* declared in: physical_breakdown_mim *)
 
ENTITY placement
SUPERTYPE OF (ONEOF (axis2_placement_2d, axis2_placement_3d))
SUBTYPE OF (geometric_representation_item);
  location : cartesian_point;
END_ENTITY; (* declared in: geometry_schema *)
 
ENTITY plane_angle_measure_with_unit
SUBTYPE OF (measure_with_unit);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PLANE_ANGLE_UNIT' IN TYPEOF(
    SELF\measure_with_unit.unit_component);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY plane_angle_unit
SUBTYPE OF (named_unit);
WHERE
  wr1 : (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit
    .dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.
    time_exponent = 0.0) AND (SELF\named_unit.dimensions.
    electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.
    thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.
    amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.
    luminous_intensity_exponent = 0.0);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY point
SUPERTYPE OF (cartesian_point)
SUBTYPE OF (geometric_representation_item);
END_ENTITY; (* declared in: geometry_schema *)
 
ENTITY position_in_organization;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY position_in_organization_assignment ABSTRACT SUPERTYPE;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  assigned_position_in_organization : position_in_organization;
  role : position_in_organization_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY position_in_organization_relationship;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  relating_position_in_organization : position_in_organization;
  related_position_in_organization : position_in_organization;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY position_in_organization_role;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY position_in_organization_type;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: person_organization_schema *)
 
ENTITY position_in_organization_type_assignment ABSTRACT SUPERTYPE;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  assigned_position_in_organization_type : position_in_organization_type;
  role : position_in_organization_type_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY position_in_organization_type_role;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY power_set;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  base : class;
  derived : class;
WHERE
  derived_different : NOT identical_sets(base, derived);
END_ENTITY; (* declared in: set_theory_schema *)
 
ENTITY precision_qualifier;
  precision_value : INTEGER;
END_ENTITY; (* declared in: qualified_measure_schema *)
 
ENTITY probability_generator
SUBTYPE OF (representation);
END_ENTITY; (* declared in: probability_mim *)
 
ENTITY process_product_association;
  name : label;
  description : text;
  defined_product : characterized_product_definition;
  process : product_definition_process;
END_ENTITY; (* declared in: process_property_schema *)
 
ENTITY process_property_association;
  name : label;
  description : text;
  process : property_process;
  property_or_shape : property_or_shape_select;
END_ENTITY; (* declared in: process_property_schema *)
 
ENTITY product;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  frame_of_reference : SET [1:?] OF product_context;
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY product_as_individual
SUBTYPE OF (product);
END_ENTITY; (* declared in: product_as_individual_mim *)
 
ENTITY product_as_individual_version
ABSTRACT SUPERTYPE OF (ONEOF (product_as_planned, product_as_realized))
SUBTYPE OF (product_definition_formation);
  SELF\product_definition_formation.of_product : product_as_individual;
END_ENTITY; (* declared in: product_as_individual_mim *)
 
ENTITY product_as_individual_view
SUBTYPE OF (product_definition);
  SELF\product_definition.formation : product_as_individual_version;
DERIVE
  defined_version : product_as_individual_version := SELF\product_definition.
  formation;
END_ENTITY; (* declared in: product_as_individual_mim *)
 
ENTITY product_as_planned
SUBTYPE OF (product_as_individual_version);
END_ENTITY; (* declared in: product_as_individual_mim *)
 
ENTITY product_as_realized
SUBTYPE OF (product_as_individual_version);
END_ENTITY; (* declared in: product_as_individual_mim *)
 
ENTITY product_category;
  name : label;
  description :  OPTIONAL text;
DERIVE
  id : identifier := get_id_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM'))
     <= 1;
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY product_category_relationship;
  name : label;
  description :  OPTIONAL text;
  category : product_category;
  sub_category : product_category;
WHERE
  wr1 : acyclic_product_category_relationship(SELF, [SELF.sub_category]);
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY product_concept;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  market_context : product_concept_context;
UNIQUE
  ur1 : id;
END_ENTITY; (* declared in: product_concept_schema *)
 
ENTITY product_concept_context
SUBTYPE OF (application_context_element);
  market_segment_type : label;
END_ENTITY; (* declared in: application_context_schema *)
 
ENTITY product_context
SUBTYPE OF (application_context_element);
  discipline_type : label;
END_ENTITY; (* declared in: application_context_schema *)
 
ENTITY product_definition;
  id : identifier;
  description :  OPTIONAL text;
  formation : product_definition_formation;
  frame_of_reference : product_definition_context;
DERIVE
  name : label := get_name_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY product_definition_context
SUBTYPE OF (application_context_element);
  life_cycle_stage : label;
END_ENTITY; (* declared in: application_context_schema *)
 
ENTITY product_definition_context_association;
  definition : product_definition;
  frame_of_reference : product_definition_context;
  role : product_definition_context_role;
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY product_definition_context_role;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY product_definition_effectivity
SUBTYPE OF (effectivity);
  usage : product_definition_relationship;
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.EFFECTIVITY_ASSIGNMENT.ASSIGNED_EFFECTIVITY'
    )) = 0;
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY product_definition_element_relationship
SUBTYPE OF (group);
END_ENTITY; (* declared in: product_breakdown_mim *)
 
ENTITY product_definition_formation;
  id : identifier;
  description :  OPTIONAL text;
  of_product : product;
UNIQUE
  ur1 : id, of_product;
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY product_definition_formation_relationship;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  relating_product_definition_formation : product_definition_formation;
  related_product_definition_formation : product_definition_formation;
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY product_definition_formation_with_specified_source
SUBTYPE OF (product_definition_formation);
  make_or_buy : source;
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY product_definition_group_assignment
SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : 
  product_definition_element_relationship;
  items : SET [1:1] OF product_definition_or_product_definition_relationship;
END_ENTITY; (* declared in: product_breakdown_mim *)
 
ENTITY product_definition_process
SUBTYPE OF (action);
  identification : identifier;
INVERSE
  product_definitions : SET [1:?] OF process_product_association FOR process;
END_ENTITY; (* declared in: process_property_schema *)
 
ENTITY product_definition_relationship
SUPERTYPE OF (ONEOF (attachment_slot_on_product, breakdown_context, 
breakdown_element_usage, breakdown_of, interface_definition_connection, 
interface_definition_for, product_in_attachment_slot));
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  relating_product_definition : product_definition;
  related_product_definition : product_definition;
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY product_definition_shape
SUBTYPE OF (property_definition);
UNIQUE
  ur1 : SELF\property_definition.definition;
WHERE
  wr1 : SIZEOF([
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CHARACTERIZED_PRODUCT_DEFINITION'
    , 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CHARACTERIZED_OBJECT'] * TYPEOF(
    SELF\property_definition.definition)) > 0;
END_ENTITY; (* declared in: product_property_definition_schema *)
 
ENTITY product_definition_substitute;
  description :  OPTIONAL text;
  context_relationship : product_definition_relationship;
  substitute_definition : product_definition;
DERIVE
  name : label := get_name_value(SELF);
WHERE
  wr1 : context_relationship.related_product_definition :<>: 
    substitute_definition;
  wr2 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY product_definition_usage
SUPERTYPE OF (ONEOF (make_from_usage_option, assembly_component_usage))
SUBTYPE OF (product_definition_relationship);
UNIQUE
  ur1 : SELF\product_definition_relationship.id, SELF\
    product_definition_relationship.relating_product_definition, SELF\
    product_definition_relationship.related_product_definition;
WHERE
  wr1 : acyclic_product_definition_relationship(SELF, [SELF\
    product_definition_relationship.related_product_definition], 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_USAGE');
END_ENTITY; (* declared in: product_structure_schema *)
 
ENTITY product_definition_with_associated_documents
SUBTYPE OF (product_definition);
  documentation_ids : SET [1:?] OF document;
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY product_design_to_individual
SUBTYPE OF (product_relationship);
  SELF\product_relationship.related_product : product_as_individual;
DERIVE
  individual_product : product_as_individual := SELF\product_relationship.
  related_product;
  product_design : product := SELF\product_relationship.relating_product;
END_ENTITY; (* declared in: product_as_individual_mim *)
 
ENTITY product_design_version_to_individual
SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.
  related_product_definition_formation : product_as_individual_version;
DERIVE
  individual_product : product_as_individual_version := SELF\
  product_definition_formation_relationship.
  related_product_definition_formation;
  product_design_version : product_definition_formation := SELF\
  product_definition_formation_relationship.
  relating_product_definition_formation;
END_ENTITY; (* declared in: product_as_individual_mim *)
 
ENTITY product_group
SUBTYPE OF (group);
END_ENTITY; (* declared in: product_group_mim *)
 
ENTITY product_group_attribute_assignment
SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : product_group_attributes;
  attributes : SET [1:1] OF attribute_select;
END_ENTITY; (* declared in: product_group_mim *)
 
ENTITY product_group_attribute_set
SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : product_group;
  product_group_attributes : SET [1:1] OF product_group_attributes;
END_ENTITY; (* declared in: product_group_mim *)
 
ENTITY product_group_attributes
SUBTYPE OF (group);
END_ENTITY; (* declared in: product_group_mim *)
 
ENTITY product_group_context
SUBTYPE OF (descriptive_representation_item);
END_ENTITY; (* declared in: product_group_mim *)
 
ENTITY product_group_membership
SUBTYPE OF (characterized_object, group_assignment);
  member : product_select;
END_ENTITY; (* declared in: product_group_mim *)
 
ENTITY product_group_membership_rules
SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : product_group;
  product_group_rules : SET [1:1] OF product_group_rules;
END_ENTITY; (* declared in: product_group_mim *)
 
ENTITY product_group_purpose
SUBTYPE OF (descriptive_representation_item);
END_ENTITY; (* declared in: product_group_mim *)
 
ENTITY product_group_relationship
SUBTYPE OF (group_relationship);
END_ENTITY; (* declared in: product_group_mim *)
 
ENTITY product_group_rule
SUBTYPE OF (descriptive_representation_item);
END_ENTITY; (* declared in: product_group_mim *)
 
ENTITY product_group_rule_assignment
SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : product_group_rules;
  product_group_rules : SET [1:?] OF product_group_rule;
END_ENTITY; (* declared in: product_group_mim *)
 
ENTITY product_group_rules
SUBTYPE OF (group);
END_ENTITY; (* declared in: product_group_mim *)
 
ENTITY product_in_attachment_slot
SUBTYPE OF (product_definition_relationship);
END_ENTITY; (* declared in: attachment_slot_mim *)
 
ENTITY product_planned_to_realized
SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.
  relating_product_definition_formation : product_as_planned;
  SELF\product_definition_formation_relationship.
  related_product_definition_formation : product_as_realized;
DERIVE
  planned_product : product_as_planned := SELF\
  product_definition_formation_relationship.
  relating_product_definition_formation;
  realized_product : product_as_realized := SELF\
  product_definition_formation_relationship.
  related_product_definition_formation;
END_ENTITY; (* declared in: product_as_individual_mim *)
 
ENTITY product_related_product_category
SUBTYPE OF (product_category);
  products : SET [1:?] OF product;
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY product_relationship;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  relating_product : product;
  related_product : product;
END_ENTITY; (* declared in: product_definition_schema *)
 
ENTITY promissory_usage_occurrence
SUBTYPE OF (assembly_component_usage);
END_ENTITY; (* declared in: product_structure_schema *)
 
ENTITY proper_subset
SUBTYPE OF (subset);
WHERE
  subset_different : NOT identical_sets(superset, subset);
END_ENTITY; (* declared in: set_theory_schema *)
 
ENTITY property_definition;
  name : label;
  description :  OPTIONAL text;
  definition : characterized_definition;
DERIVE
  id : identifier := get_id_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM'))
     <= 1;
END_ENTITY; (* declared in: product_property_definition_schema *)
 
ENTITY property_definition_relationship;
  name : label;
  description : text;
  relating_property_definition : property_definition;
  related_property_definition : property_definition;
END_ENTITY; (* declared in: material_property_definition_schema *)
 
ENTITY property_definition_representation;
  definition : represented_definition;
  used_representation : representation;
DERIVE
  description : text := get_description_value(SELF);
  name : label := get_name_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
  wr2 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
END_ENTITY; (* declared in: product_property_representation_schema *)
 
ENTITY property_process
SUBTYPE OF (action);
  identification : identifier;
INVERSE
  properties : SET [1:?] OF process_property_association FOR process;
END_ENTITY; (* declared in: process_property_schema *)
 
ENTITY qualification_type;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: qualifications_schema *)
 
ENTITY qualification_type_assignment ABSTRACT SUPERTYPE;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  assigned_qualification_type : qualification_type;
  role : qualification_type_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY qualification_type_relationship;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  relating_qualification_type : qualification_type;
  related_qualification_type : qualification_type;
END_ENTITY; (* declared in: qualifications_schema *)
 
ENTITY qualification_type_role;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY qualified_representation_item
SUBTYPE OF (representation_item);
  qualifiers : SET [1:?] OF value_qualifier;
WHERE
  wr1 : SIZEOF(QUERY(temp <* qualifiers | 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRECISION_QUALIFIER' IN TYPEOF(
    temp))) < 2;
END_ENTITY; (* declared in: qualified_measure_schema *)
 
ENTITY quantified_assembly_component_usage
SUBTYPE OF (assembly_component_usage);
  quantity : measure_with_unit;
WHERE
  wr1 : NOT ('NUMBER' IN TYPEOF(quantity.value_component)) OR (quantity.
    value_component > 0);
END_ENTITY; (* declared in: product_structure_schema *)
 
ENTITY ratio_measure_with_unit
SUBTYPE OF (measure_with_unit);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.RATIO_UNIT' IN TYPEOF(SELF\
    measure_with_unit.unit_component);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY ratio_unit
SUBTYPE OF (named_unit);
WHERE
  wr1 : (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit
    .dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.
    time_exponent = 0.0) AND (SELF\named_unit.dimensions.
    electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.
    thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.
    amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.
    luminous_intensity_exponent = 0.0);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY relationship_condition;
  name : label;
  applicable_relationships : SET [1:?] OF relationship_with_condition;
  condition_description : text;
END_ENTITY; (* declared in: method_definition_schema *)
 
ENTITY relative_event_occurrence
SUBTYPE OF (event_occurrence);
  base_event : event_occurrence;
  offset : time_measure_with_unit;
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY replacement_relationship
SUBTYPE OF (action_relationship);
WHERE
  wr1 : acyclic_action_relationship(SELF, [SELF\action_relationship.
    related_action], 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPLACEMENT_RELATIONSHIP');
END_ENTITY; (* declared in: process_property_schema *)
 
ENTITY representation;
  name : label;
  items : SET [1:?] OF representation_item;
  context_of_items : representation_context;
DERIVE
  id : identifier := get_id_value(SELF);
  description : text := get_description_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM'))
     <= 1;
  wr2 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
END_ENTITY; (* declared in: representation_schema *)
 
ENTITY representation_context;
  context_identifier : identifier;
  context_type : text;
INVERSE
  representations_in_context : SET [1:?] OF representation FOR context_of_items
  ;
END_ENTITY; (* declared in: representation_schema *)
 
ENTITY representation_item;
  name : label;
WHERE
  wr1 : SIZEOF(using_representations(SELF)) > 0;
END_ENTITY; (* declared in: representation_schema *)
 
ENTITY representation_map;
  mapping_origin : representation_item;
  mapped_representation : representation;
INVERSE
  map_usage : SET [1:?] OF mapped_item FOR mapping_source;
WHERE
  wr1 : item_in_context(SELF.mapping_origin, SELF.mapped_representation.
    context_of_items);
END_ENTITY; (* declared in: representation_schema *)
 
ENTITY representation_relationship;
  name : label;
  description :  OPTIONAL text;
  rep_1 : representation;
  rep_2 : representation;
END_ENTITY; (* declared in: representation_schema *)
 
ENTITY representation_relationship_with_transformation
SUBTYPE OF (representation_relationship);
  transformation_operator : transformation;
WHERE
  wr1 : SELF\representation_relationship.rep_1.context_of_items :<>: SELF\
    representation_relationship.rep_2.context_of_items;
END_ENTITY; (* declared in: representation_schema *)
 
ENTITY requirement_assigned_object
SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : requirement_assignment;
  items : SET [1:1] OF requirement_assigned_item;
END_ENTITY; (* declared in: requirement_assignment_mim *)
 
ENTITY requirement_assignment
SUBTYPE OF (characterized_object, group);
END_ENTITY; (* declared in: requirement_assignment_mim *)
 
ENTITY requirement_for_action_resource
SUBTYPE OF (action_resource_requirement);
  resources : SET [1:?] OF action_resource;
END_ENTITY; (* declared in: process_property_schema *)
 
ENTITY requirement_source
SUBTYPE OF (group);
END_ENTITY; (* declared in: requirement_assignment_mim *)
 
ENTITY resource_property;
  name : label;
  description : text;
  resource : characterized_resource_definition;
END_ENTITY; (* declared in: process_property_schema *)
 
ENTITY resource_property_relationship;
  name : label;
  description : text;
  relating_resource_property : resource_property;
  related_resource_property : resource_property;
WHERE
  wr1 : relating_resource_property :<>: related_resource_property;
END_ENTITY; (* declared in: process_property_schema *)
 
ENTITY resource_property_representation;
  name : label;
  description : text;
  property : resource_property;
  representation : representation;
END_ENTITY; (* declared in: process_property_representation_schema *)
 
ENTITY resource_requirement_type;
  name : label;
  description : text;
END_ENTITY; (* declared in: process_property_schema *)
 
ENTITY resource_requirement_type_relationship;
  name : label;
  description : text;
  relating_requirement_type : resource_requirement_type;
  related_requirement_type : resource_requirement_type;
WHERE
  wr1 : relating_requirement_type :<>: related_requirement_type;
END_ENTITY; (* declared in: process_property_schema *)
 
ENTITY right_to_usage_association
SUBTYPE OF (action_method_relationship);
  SELF\action_method_relationship.relating_method : information_usage_right;
  SELF\action_method_relationship.related_method : information_right;
DERIVE
  right_usage : information_usage_right := SELF\action_method_relationship.
  relating_method;
  right_applied : information_right := SELF\action_method_relationship.
  related_method;
END_ENTITY; (* declared in: information_rights_mim *)
 
ENTITY role_association;
  role : object_role;
  item_with_role : role_select;
END_ENTITY; (* declared in: basic_attribute_schema *)
 
ENTITY same_membership;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  set_1 : class;
  set_2 : class;
END_ENTITY; (* declared in: set_theory_schema *)
 
ENTITY security_classification;
  name : label;
  purpose : text;
  security_level : security_classification_level;
END_ENTITY; (* declared in: security_classification_schema *)
 
ENTITY security_classification_assignment ABSTRACT SUPERTYPE;
  assigned_security_classification : security_classification;
DERIVE
  role : object_role := get_role(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE'))
     <= 1;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY security_classification_level;
  name : label;
END_ENTITY; (* declared in: security_classification_schema *)
 
ENTITY selected_item
SUBTYPE OF (class);
END_ENTITY; (* declared in: selected_item_mim *)
 
ENTITY selected_item_assignment;
  assigned_class : selected_item;
  item : selected_item_select;
END_ENTITY; (* declared in: selected_item_mim *)
 
ENTITY selected_items_assignment_in_context_group
SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : selected_items_context_group;
  selected_item_assignment : SET [1:1] OF selected_item_assignment;
END_ENTITY; (* declared in: selected_item_mim *)
 
ENTITY selected_items_context_group
SUBTYPE OF (group);
END_ENTITY; (* declared in: selected_item_mim *)
 
ENTITY selected_items_context_group_to_context
SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : selected_items_context_group;
  item_context : SET [1:?] OF selected_item_context_items;
END_ENTITY; (* declared in: selected_item_mim *)
 
ENTITY sequential_method
SUBTYPE OF (serial_action_method);
  sequence_position : count_measure;
END_ENTITY; (* declared in: method_definition_schema *)
 
ENTITY serial_action_method
SUBTYPE OF (action_method_relationship);
END_ENTITY; (* declared in: method_definition_schema *)
 
ENTITY serial_numbered_effectivity
SUBTYPE OF (effectivity);
  effectivity_start_id : identifier;
  effectivity_end_id :  OPTIONAL identifier;
END_ENTITY; (* declared in: effectivity_schema *)
 
ENTITY shape_aspect;
  name : label;
  description :  OPTIONAL text;
  of_shape : product_definition_shape;
  product_definitional : LOGICAL;
DERIVE
  id : identifier := get_id_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM'))
     <= 1;
END_ENTITY; (* declared in: product_property_definition_schema *)
 
ENTITY shape_aspect_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_shape_aspect : shape_aspect;
  related_shape_aspect : shape_aspect;
DERIVE
  id : identifier := get_id_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM'))
     <= 1;
END_ENTITY; (* declared in: product_property_definition_schema *)
 
ENTITY shape_definition_representation
SUBTYPE OF (property_definition_representation);
WHERE
  wr1 : ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_SHAPE' IN 
    TYPEOF(SELF.definition)) OR (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SHAPE_DEFINITION' IN TYPEOF(SELF.
    definition.definition));
  wr2 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SHAPE_REPRESENTATION' IN 
    TYPEOF(SELF.used_representation);
END_ENTITY; (* declared in: product_property_representation_schema *)
 
ENTITY shape_representation
SUBTYPE OF (representation);
END_ENTITY; (* declared in: product_property_representation_schema *)
 
ENTITY shape_representation_relationship
SUBTYPE OF (representation_relationship);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SHAPE_REPRESENTATION' IN 
    TYPEOF(SELF\representation_relationship.rep_1) + TYPEOF(SELF\
    representation_relationship.rep_2);
END_ENTITY; (* declared in: product_property_representation_schema *)
 
ENTITY si_unit
SUBTYPE OF (named_unit);
  prefix :  OPTIONAL si_prefix;
  name : si_unit_name;
DERIVE
  SELF\named_unit.dimensions : dimensional_exponents := dimensions_for_si_unit(
  name);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY simultaneous_task_element
SUBTYPE OF (concurrent_task_element);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY solid_angle_measure_with_unit
SUBTYPE OF (measure_with_unit);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SOLID_ANGLE_UNIT' IN TYPEOF(
    SELF\measure_with_unit.unit_component);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY solid_angle_unit
SUBTYPE OF (named_unit);
WHERE
  wr1 : (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit
    .dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.
    time_exponent = 0.0) AND (SELF\named_unit.dimensions.
    electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.
    thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.
    amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.
    luminous_intensity_exponent = 0.0);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY source_for_requirement
SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : requirement_source;
  items : SET [1:1] OF requirement_source_item;
END_ENTITY; (* declared in: requirement_assignment_mim *)
 
ENTITY sourced_requirement
SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : requirement_source;
  items : SET [1:1] OF product_definition;
END_ENTITY; (* declared in: requirement_assignment_mim *)
 
ENTITY specified_higher_usage_occurrence
SUBTYPE OF (assembly_component_usage);
  upper_usage : assembly_component_usage;
  next_usage : next_assembly_usage_occurrence;
UNIQUE
  ur1 : upper_usage, next_usage;
WHERE
  wr1 : SELF :<>: upper_usage;
  wr2 : SELF\product_definition_relationship.relating_product_definition :=: 
    upper_usage.relating_product_definition;
  wr3 : SELF\product_definition_relationship.related_product_definition :=: 
    next_usage.related_product_definition;
  wr4 : (upper_usage.related_product_definition :=: next_usage.
    relating_product_definition) OR (SIZEOF(QUERY(pdr <* USEDIN(upper_usage.
    related_product_definition, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION'
    ) | pdr.relating_product_definition :=: next_usage.
    relating_product_definition)) = 1);
  wr5 : SIZEOF([
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.NEXT_ASSEMBLY_USAGE_OCCURRENCE', 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SPECIFIED_HIGHER_USAGE_OCCURRENCE'
    ] * TYPEOF(upper_usage)) = 1;
END_ENTITY; (* declared in: product_structure_schema *)
 
ENTITY standard_uncertainty
SUBTYPE OF (uncertainty_qualifier);
  uncertainty_value : REAL;
END_ENTITY; (* declared in: qualified_measure_schema *)
 
ENTITY state_observed;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: state_observed_schema *)
 
ENTITY state_observed_assignment ABSTRACT SUPERTYPE;
  assigned_state_observed : state_observed;
  role : state_observed_role;
END_ENTITY; (* declared in: state_observed_schema *)
 
ENTITY state_observed_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_state_observed : SET [1:?] OF state_observed;
  related_state_observed : SET [1:?] OF state_observed;
END_ENTITY; (* declared in: state_observed_schema *)
 
ENTITY state_observed_role;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: state_observed_schema *)
 
ENTITY state_predicted
SUBTYPE OF (state_observed);
END_ENTITY; (* declared in: state_observed_mim *)
 
ENTITY state_type;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: state_type_schema *)
 
ENTITY state_type_assignment ABSTRACT SUPERTYPE;
  assigned_state_type : state_type;
  role : state_type_role;
END_ENTITY; (* declared in: state_type_schema *)
 
ENTITY state_type_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_state_type : SET [1:?] OF state_type;
  related_state_type : SET [1:?] OF state_type;
END_ENTITY; (* declared in: state_type_schema *)
 
ENTITY state_type_role;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: state_type_schema *)
 
ENTITY statechar_applied_object
SUBTYPE OF (characterized_object, state_observed_assignment);
END_ENTITY; (* declared in: state_characterized_mim *)
 
ENTITY statechar_object
SUBTYPE OF (characterized_object, state_observed);
END_ENTITY; (* declared in: state_characterized_mim *)
 
ENTITY statechar_relationship_object
SUBTYPE OF (characterized_object, state_observed_relationship);
END_ENTITY; (* declared in: state_characterized_mim *)
 
ENTITY statechar_type_applied_object
SUBTYPE OF (characterized_object, state_type_assignment);
END_ENTITY; (* declared in: state_characterized_mim *)
 
ENTITY statechar_type_object
SUBTYPE OF (characterized_object, state_type);
END_ENTITY; (* declared in: state_characterized_mim *)
 
ENTITY statechar_type_relationship_object
SUBTYPE OF (characterized_object, state_type_relationship);
END_ENTITY; (* declared in: state_characterized_mim *)
 
ENTITY structured_message
SUBTYPE OF (product);
END_ENTITY; (* declared in: message_mim *)
 
ENTITY subset;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  subset : class;
  superset : class;
END_ENTITY; (* declared in: set_theory_schema *)
 
ENTITY system_breakdown_context
SUBTYPE OF (breakdown_context);
END_ENTITY; (* declared in: system_breakdown_mim *)
 
ENTITY system_element_usage
SUBTYPE OF (breakdown_element_usage);
END_ENTITY; (* declared in: system_breakdown_mim *)
 
ENTITY task_element
SUPERTYPE OF (ONEOF (advisory_task_element, concurrent_task_element, end_task, 
exit_loop, looping_element, task_element_sequence, task_invocation, task_step))
SUBTYPE OF (action_method);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY task_element_relationship
SUBTYPE OF (action_method_relationship);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY task_element_sequence
SUBTYPE OF (task_element);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY task_invocation
SUBTYPE OF (task_element);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY task_method
SUBTYPE OF (action_method);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY task_method_relationship
SUBTYPE OF (action_method_relationship);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY task_method_version
SUBTYPE OF (action_method);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY task_method_version_relationship
SUBTYPE OF (action_method_relationship);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY task_objective
SUBTYPE OF (action_method);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY task_step
SUBTYPE OF (task_element);
END_ENTITY; (* declared in: task_specification_mim *)
 
ENTITY thermodynamic_temperature_measure_with_unit
SUBTYPE OF (measure_with_unit);
WHERE
  wr1 : 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN
     TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY thermodynamic_temperature_unit
SUBTYPE OF (named_unit);
WHERE
  wr1 : (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit
    .dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.
    time_exponent = 0.0) AND (SELF\named_unit.dimensions.
    electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.
    thermodynamic_temperature_exponent = 1.0) AND (SELF\named_unit.dimensions.
    amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.
    luminous_intensity_exponent = 0.0);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY time_interval;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY time_interval_assignment ABSTRACT SUPERTYPE;
  assigned_time_interval : time_interval;
  role : time_interval_role;
END_ENTITY; (* declared in: management_resources_schema *)
 
ENTITY time_interval_based_effectivity
SUBTYPE OF (effectivity);
  effectivity_period : time_interval;
END_ENTITY; (* declared in: effectivity_schema *)
 
ENTITY time_interval_relationship;
  name : label;
  description :  OPTIONAL text;
  relating_time_interval : time_interval;
  related_time_interval : time_interval;
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY time_interval_role;
  name : label;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY time_interval_with_bounds
SUBTYPE OF (time_interval);
  primary_bound :  OPTIONAL date_time_or_event_occurrence;
  secondary_bound :  OPTIONAL date_time_or_event_occurrence;
  duration :  OPTIONAL time_measure_with_unit;
WHERE
  wr1 : NOT (EXISTS(secondary_bound) AND EXISTS(duration));
  wr2 : EXISTS(primary_bound) OR EXISTS(secondary_bound);
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY time_measure_with_unit
SUBTYPE OF (measure_with_unit);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.TIME_UNIT' IN TYPEOF(SELF\
    measure_with_unit.unit_component);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY time_role;
  name : label;
DERIVE
  description : text := get_description_value(SELF);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
    )) <= 1;
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY time_unit
SUBTYPE OF (named_unit);
WHERE
  wr1 : (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit
    .dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.
    time_exponent = 1.0) AND (SELF\named_unit.dimensions.
    electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.
    thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.
    amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.
    luminous_intensity_exponent = 0.0);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY type_qualifier;
  name : label;
END_ENTITY; (* declared in: qualified_measure_schema *)
 
ENTITY uncertainty_measure_with_unit
SUBTYPE OF (measure_with_unit);
  name : label;
  description :  OPTIONAL text;
WHERE
  wr1 : valid_measure_value(SELF\measure_with_unit.value_component);
END_ENTITY; (* declared in: representation_schema *)
 
ENTITY uncertainty_qualifier
SUPERTYPE OF (standard_uncertainty);
  measure_name : label;
  description : text;
END_ENTITY; (* declared in: qualified_measure_schema *)
 
ENTITY union;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  operand : SET [2:?] OF class;
  resultant : class;
END_ENTITY; (* declared in: set_theory_schema *)
 
ENTITY usage_association
SUBTYPE OF (action_method_relationship);
  SELF\action_method_relationship.relating_method : information_usage_right;
  SELF\action_method_relationship.related_method : information_usage_right;
DERIVE
  relating : information_usage_right := SELF\action_method_relationship.
  relating_method;
  related : information_usage_right := SELF\action_method_relationship.
  related_method;
END_ENTITY; (* declared in: information_rights_mim *)
 
ENTITY value_range
SUBTYPE OF (compound_representation_item);
WHERE
  wr1 : ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'SET_REPRESENTATION_ITEM'
     IN TYPEOF(item_element)) AND value_range_wr1(item_element);
  wr2 : value_range_wr2(item_element);
  wr3 : value_range_wr3(item_element);
END_ENTITY; (* declared in: extended_measure_representation_mim *)
 
ENTITY value_representation_item
SUBTYPE OF (representation_item);
  value_component : measure_value;
WHERE
  wr1 : SIZEOF(QUERY(rep <* using_representations(SELF) | NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.GLOBAL_UNIT_ASSIGNED_CONTEXT' IN 
    TYPEOF(rep.context_of_items)))) = 0;
END_ENTITY; (* declared in: representation_schema *)
 
ENTITY vector
SUBTYPE OF (geometric_representation_item);
  orientation : direction;
  magnitude : length_measure;
WHERE
  wr1 : magnitude >= 0.0;
END_ENTITY; (* declared in: geometry_schema *)
 
ENTITY versioned_action_request;
  id : identifier;
  version : label;
  purpose : text;
  description :  OPTIONAL text;
END_ENTITY; (* declared in: action_schema *)
 
ENTITY versioned_action_request_relationship;
  id : identifier;
  name : label;
  description :  OPTIONAL text;
  relating_versioned_action_request : versioned_action_request;
  related_versioned_action_request : versioned_action_request;
END_ENTITY; (* declared in: action_schema *)
 
ENTITY volume_measure_with_unit
SUBTYPE OF (measure_with_unit);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VOLUME_UNIT' IN TYPEOF(SELF\
    measure_with_unit.unit_component);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY volume_unit
SUBTYPE OF (named_unit);
WHERE
  wr1 : (SELF\named_unit.dimensions.length_exponent = 3.000000) AND (SELF\
    named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.
    dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.
    electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.
    thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.
    dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.
    dimensions.luminous_intensity_exponent = 0.000000);
END_ENTITY; (* declared in: measure_schema *)
 
ENTITY week_of_year_and_day_date
SUBTYPE OF (date);
  week_component : week_in_year_number;
  day_component :  OPTIONAL day_in_week_number;
END_ENTITY; (* declared in: date_time_schema *)
 
ENTITY zone_breakdown_context
SUBTYPE OF (breakdown_context);
END_ENTITY; (* declared in: zonal_breakdown_mim *)
 
ENTITY zone_element_usage
SUBTYPE OF (breakdown_element_usage);
END_ENTITY; (* declared in: zonal_breakdown_mim *)
 
FUNCTION acyclic_action_relationship(relation : action_relationship; relatives
   : SET [1:?] OF action; specific_relation : STRING) : BOOLEAN;
LOCAL
  x : SET OF action_relationship;
END_LOCAL;
  IF relation.relating_action IN relatives THEN
    RETURN (FALSE);
  END_IF;
  x := QUERY(actn <* bag_to_set(USEDIN(relation.relating_action, 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_RELATIONSHIP.RELATED_ACTION')
  ) | specific_relation IN TYPEOF(actn));
  REPEAT i := 1 TO HIINDEX(x);
    IF NOT acyclic_action_relationship(x[i], relatives + relation.
    relating_action, specific_relation) THEN
      RETURN (FALSE);
    END_IF;
  END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; (* declared in: action_schema *)
 
FUNCTION acyclic_mapped_representation(parent_set : SET OF representation; 
  children_set : SET OF representation_item) : BOOLEAN;
LOCAL
  x : SET OF representation_item;
  y : SET OF representation_item;
END_LOCAL;
  x := QUERY(z <* children_set | 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MAPPED_ITEM' IN TYPEOF(z));
  IF SIZEOF(x) > 0 THEN
    REPEAT i := 1 TO HIINDEX(x);
      IF x[i]\mapped_item.mapping_source.mapped_representation IN parent_set
       THEN
        RETURN (FALSE);
      END_IF;
      IF NOT acyclic_mapped_representation(parent_set + x[i]\mapped_item.
      mapping_source.mapped_representation, x[i]\mapped_item.mapping_source.
      mapped_representation.items) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_IF;
  x := children_set - x;
  IF SIZEOF(x) > 0 THEN
    REPEAT i := 1 TO HIINDEX(x);
      y := QUERY(z <* bag_to_set(USEDIN(x[i], '')) | 
      'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION_ITEM' IN TYPEOF(z
      ));
      IF NOT acyclic_mapped_representation(parent_set, y) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_IF;
  RETURN (TRUE);
END_FUNCTION; (* declared in: representation_schema *)
 
FUNCTION acyclic_product_category_relationship(relation : 
  product_category_relationship; children : SET OF product_category) : BOOLEAN;
LOCAL
  x : SET OF product_category_relationship;
  local_children : SET OF product_category;
END_LOCAL;
  REPEAT i := 1 TO HIINDEX(children);
    IF relation.category :=: children[i] THEN
      RETURN (FALSE);
    END_IF;
  END_REPEAT;
  x := bag_to_set(USEDIN(relation.category, 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_CATEGORY_RELATIONSHIP.SUB_CATEGORY'
  ));
  local_children := children + relation.category;
  IF SIZEOF(x) > 0 THEN
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_product_category_relationship(x[i], local_children) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_IF;
  RETURN (TRUE);
END_FUNCTION; (* declared in: product_definition_schema *)
 
FUNCTION acyclic_product_definition_relationship(relation : 
  product_definition_relationship; relatives : SET [1:?] OF product_definition
  ; specific_relation : STRING) : BOOLEAN;
LOCAL
  x : SET OF product_definition_relationship;
END_LOCAL;
  IF relation.relating_product_definition IN relatives THEN
    RETURN (FALSE);
  END_IF;
  x := QUERY(pd <* bag_to_set(USEDIN(relation.relating_product_definition, 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION'
  )) | specific_relation IN TYPEOF(pd));
  REPEAT i := 1 TO HIINDEX(x);
    IF NOT acyclic_product_definition_relationship(x[i], relatives + relation.
    relating_product_definition, specific_relation) THEN
      RETURN (FALSE);
    END_IF;
  END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; (* declared in: product_definition_schema *)
 
FUNCTION bag_to_set(the_bag :  BAG  OF GENERIC : intype) : SET OF GENERIC : 
  intype;
LOCAL
  the_set : SET OF GENERIC : intype := [];
END_LOCAL;
  IF SIZEOF(the_bag) > 0 THEN
    REPEAT i := 1 TO HIINDEX(the_bag);
      the_set := the_set + the_bag[i];
    END_REPEAT;
  END_IF;
  RETURN (the_set);
END_FUNCTION; (* declared in: support_resource_schema *)
 
FUNCTION base_axis(dim : INTEGER; axis1 : direction; axis2 : direction; axis3
   : direction) :  LIST [2:3] OF direction;
LOCAL
  u :  LIST [2:3] OF direction;
  factor : REAL;
  d1 : direction;
  d2 : direction;
END_LOCAL;
  IF dim = 3 THEN
    d1 := NVL(normalise(axis3), dummy_gri||direction([0.0, 0.0, 1.0]));
    d2 := first_proj_axis(d1, axis1);
    u := [d2, second_proj_axis(d1, d2, axis2), d1];
  ELSE
    IF EXISTS(axis1) THEN
      d1 := normalise(axis1);
      u := [d1, orthogonal_complement(d1)];
      IF EXISTS(axis2) THEN
        factor := dot_product(axis2, u[2]);
        IF factor < 0.0 THEN
          u[2].direction_ratios[1] := -u[2].direction_ratios[1];
          u[2].direction_ratios[2] := -u[2].direction_ratios[2];
        END_IF;
      END_IF;
    ELSE
      IF EXISTS(axis2) THEN
        d1 := normalise(axis2);
        u := [orthogonal_complement(d1), d1];
        u[1].direction_ratios[1] := -u[1].direction_ratios[1];
        u[1].direction_ratios[2] := -u[1].direction_ratios[2];
      ELSE
        u := [dummy_gri||direction([1.0, 0.0]), dummy_gri||direction([0.0, 1.0]
        )];
      END_IF;
    END_IF;
  END_IF;
  RETURN (u);
END_FUNCTION; (* declared in: geometry_schema *)
 
FUNCTION build_2axes(ref_direction : direction) :  LIST [2:2] OF direction;
LOCAL
  d : direction := NVL(normalise(ref_direction), dummy_gri||direction([1.0, 0.0
  ]));
END_LOCAL;
  RETURN ([d, orthogonal_complement(d)]);
END_FUNCTION; (* declared in: geometry_schema *)
 
FUNCTION build_axes(axis : direction; ref_direction : direction) :  LIST [3:3]
   OF direction;
LOCAL
  d1 : direction;
  d2 : direction;
END_LOCAL;
  d1 := NVL(normalise(axis), dummy_gri||direction([0.0, 0.0, 1.0]));
  d2 := first_proj_axis(d1, ref_direction);
  RETURN ([d2, normalise(cross_product(d1, d2)).orientation, d1]);
END_FUNCTION; (* declared in: geometry_schema *)
 
FUNCTION cross_product(arg1 : direction; arg2 : direction) : vector;
LOCAL
  mag : REAL;
  res : direction;
  v1 :  LIST [3:3] OF REAL;
  v2 :  LIST [3:3] OF REAL;
  result : vector;
END_LOCAL;
  IF NOT EXISTS(arg1) OR (arg1.dim = 2) OR NOT EXISTS(arg2) OR (arg2.dim = 2)
   THEN
    RETURN (?);
  ELSE
    v1 := normalise(arg1).direction_ratios;
    v2 := normalise(arg2).direction_ratios;
    res := dummy_gri||direction([v1[2] * v2[3] - v1[3] * v2[2], v1[3] * v2[1]
     - v1[1] * v2[3], v1[1] * v2[2] - v1[2] * v2[1]]);
    mag := 0.0;
    REPEAT i := 1 TO 3;
      mag := mag + res.direction_ratios[i] * res.direction_ratios[i];
    END_REPEAT;
    IF mag > 0.0 THEN
      result := dummy_gri||vector(res, SQRT(mag));
    ELSE
      result := dummy_gri||vector(arg1, 0.0);
    END_IF;
    RETURN (result);
  END_IF;
END_FUNCTION; (* declared in: geometry_schema *)
 
FUNCTION dependently_instantiated(set_of_input_instances : SET OF GENERIC; 
  set_of_input_types : SET OF STRING; previous_in_chain : LIST OF GENERIC) : 
  BOOLEAN;
   (* generated by longform-generator *)
LOCAL
  number_of_input_instances : INTEGER;
  number_of_referring_instances : INTEGER;
  bag_of_referring_instances :  BAG  OF GENERIC := [];
  dependently_instantiated_flag : BOOLEAN;
  previous_in_chain_plus : LIST OF GENERIC := [];
  recursion : BOOLEAN;
  result : BOOLEAN := TRUE;
  set_of_types : SET OF STRING := [];
END_LOCAL;
  IF EXISTS(set_of_input_instances) THEN
    number_of_input_instances := SIZEOF(set_of_input_instances);
    set_of_input_types := set_of_input_types + 'GENERIC';
    REPEAT i := 1 TO number_of_input_instances;
      bag_of_referring_instances := USEDIN(set_of_input_instances[i], '');
      IF EXISTS(bag_of_referring_instances) THEN
        number_of_referring_instances := SIZEOF(bag_of_referring_instances);
        dependently_instantiated_flag := FALSE;
        REPEAT j := 1 TO number_of_referring_instances;
          set_of_types := TYPEOF(bag_of_referring_instances[j]);
          IF set_of_types <= set_of_input_types THEN
            IF EXISTS(previous_in_chain) THEN
              recursion := TRUE;
              REPEAT k := 1 TO SIZEOF(previous_in_chain);
                IF previous_in_chain[k] :=: bag_of_referring_instances[j] THEN
                  recursion := FALSE;
                  ESCAPE;
                END_IF;
              END_REPEAT;
            END_IF;
            IF recursion THEN
              previous_in_chain_plus := previous_in_chain + 
              set_of_input_instances[i];
              IF dependently_instantiated([bag_of_referring_instances[j]], 
              set_of_input_types, previous_in_chain_plus) THEN
                dependently_instantiated_flag := TRUE;
                ESCAPE;
              ELSE
                SKIP;
              END_IF;
            END_IF;
          ELSE
            dependently_instantiated_flag := TRUE;
            ESCAPE;
          END_IF;
        END_REPEAT;
        IF NOT dependently_instantiated_flag THEN
          RETURN (FALSE);
        END_IF;
      ELSE
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  ELSE
    RETURN (FALSE);
  END_IF;
  RETURN (TRUE);
END_FUNCTION; 
 
FUNCTION derive_dimensional_exponents(x : unit) : dimensional_exponents;
LOCAL
  result : dimensional_exponents := dimensional_exponents(0.0, 0.0, 0.0, 0.0, 
  0.0, 0.0, 0.0);
END_LOCAL;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DERIVED_UNIT' IN TYPEOF(x) THEN
    REPEAT i := LOINDEX(x.elements) TO HIINDEX(x.elements);
      result.length_exponent := result.length_exponent + x.elements[i].exponent
       * x.elements[i].unit.dimensions.length_exponent;
      result.mass_exponent := result.mass_exponent + x.elements[i].exponent * x
      .elements[i].unit.dimensions.mass_exponent;
      result.time_exponent := result.time_exponent + x.elements[i].exponent * x
      .elements[i].unit.dimensions.time_exponent;
      result.electric_current_exponent := result.electric_current_exponent + x.
      elements[i].exponent * x.elements[i].unit.dimensions.
      electric_current_exponent;
      result.thermodynamic_temperature_exponent := result.
      thermodynamic_temperature_exponent + x.elements[i].exponent * x.elements[
      i].unit.dimensions.thermodynamic_temperature_exponent;
      result.amount_of_substance_exponent := result.
      amount_of_substance_exponent + x.elements[i].exponent * x.elements[i].
      unit.dimensions.amount_of_substance_exponent;
      result.luminous_intensity_exponent := result.luminous_intensity_exponent
       + x.elements[i].exponent * x.elements[i].unit.dimensions.
      luminous_intensity_exponent;
    END_REPEAT;
  ELSE
    result := x.dimensions;
  END_IF;
  RETURN (result);
END_FUNCTION; (* declared in: measure_schema *)
 
FUNCTION dimension_of(item : geometric_representation_item) : dimension_count;
LOCAL
  x : SET OF representation;
  y : representation_context;
  dim : dimension_count;
END_LOCAL;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CARTESIAN_POINT' IN TYPEOF(item)
   THEN
    dim := SIZEOF(item\cartesian_point.coordinates);
    RETURN (dim);
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DIRECTION' IN TYPEOF(item) THEN
    dim := SIZEOF(item\direction.direction_ratios);
    RETURN (dim);
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VECTOR' IN TYPEOF(item) THEN
    dim := SIZEOF(item\vector.orientation\direction.direction_ratios);
    RETURN (dim);
  END_IF;
  x := using_representations(item);
  y := x[1].context_of_items;
  dim := y\geometric_representation_context.coordinate_space_dimension;
  RETURN (dim);
END_FUNCTION; (* declared in: geometry_schema *)
 
FUNCTION dimensions_for_si_unit(n : si_unit_name) : dimensional_exponents;
  CASE n OF 
     metre : 
    RETURN (dimensional_exponents(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
     gram : 
    RETURN (dimensional_exponents(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0));
     second : 
    RETURN (dimensional_exponents(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0));
     ampere : 
    RETURN (dimensional_exponents(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0));
     kelvin : 
    RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0));
     mole : 
    RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0));
     candela : 
    RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
     radian : 
    RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
     steradian : 
    RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
     hertz : 
    RETURN (dimensional_exponents(0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0));
     newton : 
    RETURN (dimensional_exponents(1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
     pascal : 
    RETURN (dimensional_exponents(-1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
     joule : 
    RETURN (dimensional_exponents(2.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
     watt : 
    RETURN (dimensional_exponents(2.0, 1.0, -3.0, 0.0, 0.0, 0.0, 0.0));
     coulomb : 
    RETURN (dimensional_exponents(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0));
     volt : 
    RETURN (dimensional_exponents(2.0, 1.0, -3.0, -1.0, 0.0, 0.0, 0.0));
     farad : 
    RETURN (dimensional_exponents(-2.0, -1.0, 4.0, 1.0, 0.0, 0.0, 0.0));
     ohm : 
    RETURN (dimensional_exponents(2.0, 1.0, -3.0, -2.0, 0.0, 0.0, 0.0));
     siemens : 
    RETURN (dimensional_exponents(-2.0, -1.0, 3.0, 2.0, 0.0, 0.0, 0.0));
     weber : 
    RETURN (dimensional_exponents(2.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0));
     tesla : 
    RETURN (dimensional_exponents(0.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0));
     henry : 
    RETURN (dimensional_exponents(2.0, 1.0, -2.0, -2.0, 0.0, 0.0, 0.0));
     degree_celsius : 
    RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0));
     lumen : 
    RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
     lux : 
    RETURN (dimensional_exponents(-2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
     becquerel : 
    RETURN (dimensional_exponents(0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0));
     gray : 
    RETURN (dimensional_exponents(2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0));
     sievert : 
    RETURN (dimensional_exponents(2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0));
    OTHERWISE  : RETURN (?);
  END_CASE;
END_FUNCTION; (* declared in: measure_schema *)
 
FUNCTION dot_product(arg1 : direction; arg2 : direction) : REAL;
LOCAL
  scalar : REAL;
  vec1 : direction;
  vec2 : direction;
  ndim : INTEGER;
END_LOCAL;
  IF NOT EXISTS(arg1) OR NOT EXISTS(arg2) THEN
    scalar := ?;
  ELSE
    IF arg1.dim <> arg2.dim THEN
      scalar := ?;
    ELSE
      vec1 := normalise(arg1);
      vec2 := normalise(arg2);
      ndim := arg1.dim;
      scalar := 0.0;
      REPEAT i := 1 TO ndim;
        scalar := scalar + vec1.direction_ratios[i] * vec2.direction_ratios[i];
      END_REPEAT;
    END_IF;
  END_IF;
  RETURN (scalar);
END_FUNCTION; (* declared in: geometry_schema *)
 
FUNCTION first_proj_axis(z_axis : direction; arg : direction) : direction;
LOCAL
  x_axis : direction;
  v : direction;
  z : direction;
  x_vec : vector;
END_LOCAL;
  IF NOT EXISTS(z_axis) THEN
    RETURN (?);
  ELSE
    z := normalise(z_axis);
    IF NOT EXISTS(arg) THEN
      IF (z.direction_ratios <> [1.0, 0.0, 0.0]) AND (z.direction_ratios <> [-
      1.0, 0.0, 0.0]) THEN
        v := dummy_gri||direction([1.0, 0.0, 0.0]);
      ELSE
        v := dummy_gri||direction([0.0, 1.0, 0.0]);
      END_IF;
    ELSE
      IF arg.dim <> 3 THEN
        RETURN (?);
      END_IF;
      IF cross_product(arg, z).magnitude = 0.0 THEN
        RETURN (?);
      ELSE
        v := normalise(arg);
      END_IF;
    END_IF;
    x_vec := scalar_times_vector(dot_product(v, z), z);
    x_axis := vector_difference(v, x_vec).orientation;
    x_axis := normalise(x_axis);
  END_IF;
  RETURN (x_axis);
END_FUNCTION; (* declared in: geometry_schema *)
 
FUNCTION get_description_value(obj : description_attribute_select) : text;
LOCAL
  description_bag :  BAG  OF description_attribute := USEDIN(obj, 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
  );
END_LOCAL;
  IF SIZEOF(description_bag) = 1 THEN
    RETURN (description_bag[1].attribute_value);
  ELSE
    RETURN (?);
  END_IF;
END_FUNCTION; (* declared in: basic_attribute_schema *)
 
FUNCTION get_id_value(obj : id_attribute_select) : identifier;
LOCAL
  id_bag :  BAG  OF id_attribute := USEDIN(obj, 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM');
END_LOCAL;
  IF SIZEOF(id_bag) = 1 THEN
    RETURN (id_bag[1].attribute_value);
  ELSE
    RETURN (?);
  END_IF;
END_FUNCTION; (* declared in: basic_attribute_schema *)
 
FUNCTION get_name_value(obj : name_attribute_select) : label;
LOCAL
  name_bag :  BAG  OF name_attribute := USEDIN(obj, 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM');
END_LOCAL;
  IF SIZEOF(name_bag) = 1 THEN
    RETURN (name_bag[1].attribute_value);
  ELSE
    RETURN (?);
  END_IF;
END_FUNCTION; (* declared in: basic_attribute_schema *)
 
FUNCTION get_role(obj : role_select) : object_role;
LOCAL
  role_bag :  BAG  OF role_association := USEDIN(obj, 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE');
END_LOCAL;
  IF SIZEOF(role_bag) = 1 THEN
    RETURN (role_bag[1].role);
  ELSE
    RETURN (?);
  END_IF;
END_FUNCTION; (* declared in: basic_attribute_schema *)
 
FUNCTION identical_sets(set_a : class; set_b : class) : BOOLEAN;
LOCAL
  set_of_sets : SET OF class := [];
END_LOCAL;
  IF set_a = set_b THEN
    RETURN (TRUE);
  END_IF;
  set_of_sets := set_of_sets + set_b;
  RETURN (identical_to_one_of_set_of_sets(set_a, set_of_sets));
END_FUNCTION; (* declared in: set_theory_schema *)
 
FUNCTION identical_to_one_of_set_of_sets(set_a : class; set_of_sets : SET OF 
  class) : BOOLEAN;
LOCAL
  i : INTEGER;
  initial_size : INTEGER;
  augmented_size : INTEGER;
  set_of_forward_equivalences : SET OF same_membership := [];
  set_of_backward_equivalences : SET OF same_membership := [];
  augmented_set_of_sets : SET OF class := [];
END_LOCAL;
  IF set_a IN set_of_sets THEN
    RETURN (TRUE);
  END_IF;
  initial_size := SIZEOF(set_of_sets);
  IF initial_size = 0 THEN
    RETURN (FALSE);
  END_IF;
  REPEAT i := 1 TO initial_size;
    set_of_forward_equivalences := set_of_forward_equivalences + USEDIN(
    set_of_sets[i], 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SAME_MEMBERSHIP.SET_1');
    set_of_backward_equivalences := set_of_forward_equivalences + USEDIN(
    set_of_sets[i], 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SAME_MEMBERSHIP.SET_2');
  END_REPEAT;
  augmented_set_of_sets := set_of_sets;
  IF SIZEOF(set_of_forward_equivalences) > 0 THEN
    REPEAT i := 1 TO HIINDEX(set_of_forward_equivalences);
      augmented_set_of_sets := augmented_set_of_sets + 
      set_of_forward_equivalences[i].set_2;
    END_REPEAT;
  END_IF;
  IF SIZEOF(set_of_backward_equivalences) > 0 THEN
    REPEAT i := 1 TO HIINDEX(set_of_backward_equivalences);
      augmented_set_of_sets := augmented_set_of_sets + 
      set_of_backward_equivalences[i].set_1;
    END_REPEAT;
  END_IF;
  augmented_size := SIZEOF(augmented_set_of_sets);
  IF augmented_size = initial_size THEN
    RETURN (FALSE);
  END_IF;
  RETURN (identical_to_one_of_set_of_sets(set_a, augmented_set_of_sets));
END_FUNCTION; (* declared in: set_theory_schema *)
 
FUNCTION item_in_context(item : representation_item; cntxt : 
  representation_context) : BOOLEAN;
LOCAL
  y :  BAG  OF representation_item;
END_LOCAL;
  IF SIZEOF(USEDIN(item, 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION.ITEMS') * cntxt.
  representations_in_context) > 0 THEN
    RETURN (TRUE);
  ELSE
    y := QUERY(z <* USEDIN(item, '') | 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION_ITEM' IN TYPEOF(z))
    ;
    IF SIZEOF(y) > 0 THEN
      REPEAT i := 1 TO HIINDEX(y);
        IF item_in_context(y[i], cntxt) THEN
          RETURN (TRUE);
        END_IF;
      END_REPEAT;
    END_IF;
  END_IF;
  RETURN (FALSE);
END_FUNCTION; (* declared in: representation_schema *)
 
FUNCTION leap_year(year : year_number) : BOOLEAN;
  IF (year MOD 4 = 0) AND (year MOD 100 <> 0) OR (year MOD 400 = 0) THEN
    RETURN (TRUE);
  ELSE
    RETURN (FALSE);
  END_IF;
END_FUNCTION; (* declared in: date_time_schema *)
 
FUNCTION normalise(arg : vector_or_direction) : vector_or_direction;
LOCAL
  ndim : INTEGER;
  v : direction;
  result : vector_or_direction;
  vec : vector;
  mag : REAL;
END_LOCAL;
  IF NOT EXISTS(arg) THEN
    result := ?;
  ELSE
    ndim := arg.dim;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VECTOR' IN TYPEOF(arg) THEN
      v := dummy_gri||direction(arg.orientation.direction_ratios);
      IF arg.magnitude = 0.0 THEN
        RETURN (?);
      ELSE
        vec := dummy_gri||vector(v, 1.0);
      END_IF;
    ELSE
      v := dummy_gri||direction(arg.direction_ratios);
    END_IF;
    mag := 0.0;
    REPEAT i := 1 TO ndim;
      mag := mag + v.direction_ratios[i] * v.direction_ratios[i];
    END_REPEAT;
    IF mag > 0.0 THEN
      mag := SQRT(mag);
      REPEAT i := 1 TO ndim;
        v.direction_ratios[i] := v.direction_ratios[i]/mag;
      END_REPEAT;
      IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VECTOR' IN TYPEOF(arg) THEN
        vec.orientation := v;
        result := vec;
      ELSE
        result := v;
      END_IF;
    ELSE
      RETURN (?);
    END_IF;
  END_IF;
  RETURN (result);
END_FUNCTION; (* declared in: geometry_schema *)
 
FUNCTION orthogonal_complement(vec : direction) : direction;
LOCAL
  result : direction;
END_LOCAL;
  IF (vec.dim <> 2) OR NOT EXISTS(vec) THEN
    RETURN (?);
  ELSE
    result := dummy_gri||direction([-vec.direction_ratios[2], vec.
    direction_ratios[1]]);
    RETURN (result);
  END_IF;
END_FUNCTION; (* declared in: geometry_schema *)
 
FUNCTION scalar_times_vector(scalar : REAL; vec : vector_or_direction) : vector
  ;
LOCAL
  v : direction;
  mag : REAL;
  result : vector;
END_LOCAL;
  IF NOT EXISTS(scalar) OR NOT EXISTS(vec) THEN
    RETURN (?);
  ELSE
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VECTOR' IN TYPEOF(vec) THEN
      v := dummy_gri||direction(vec.orientation.direction_ratios);
      mag := scalar * vec.magnitude;
    ELSE
      v := dummy_gri||direction(vec.direction_ratios);
      mag := scalar;
    END_IF;
    IF mag < 0.0 THEN
      REPEAT i := 1 TO SIZEOF(v.direction_ratios);
        v.direction_ratios[i] := -v.direction_ratios[i];
      END_REPEAT;
      mag := -mag;
    END_IF;
    result := dummy_gri||vector(normalise(v), mag);
  END_IF;
  RETURN (result);
END_FUNCTION; (* declared in: geometry_schema *)
 
FUNCTION second_proj_axis(z_axis : direction; x_axis : direction; arg : 
  direction) : direction;
LOCAL
  y_axis : vector;
  v : direction;
  temp : vector;
END_LOCAL;
  IF NOT EXISTS(arg) THEN
    v := dummy_gri||direction([0.0, 1.0, 0.0]);
  ELSE
    v := arg;
  END_IF;
  temp := scalar_times_vector(dot_product(v, z_axis), z_axis);
  y_axis := vector_difference(v, temp);
  temp := scalar_times_vector(dot_product(v, x_axis), x_axis);
  y_axis := vector_difference(y_axis, temp);
  y_axis := normalise(y_axis);
  RETURN (y_axis.orientation);
END_FUNCTION; (* declared in: geometry_schema *)
 
FUNCTION type_check_function(the_type : GENERIC; sub_names : SET OF STRING; 
  criterion : INTEGER) : LOGICAL;
  IF NOT EXISTS(the_type) OR NOT ({0 <= criterion <= 3}) OR (SIZEOF(sub_names)
   = 0) THEN
    RETURN (UNKNOWN);
  ELSE
    CASE criterion OF 
       0 : 
      RETURN (SIZEOF(sub_names * TYPEOF(the_type)) > 0);
       1 : 
      RETURN (SIZEOF(sub_names * TYPEOF(the_type)) = 0);
       2 : 
      RETURN (SIZEOF(sub_names * TYPEOF(the_type)) = 1);
       3 : 
      RETURN (SIZEOF(sub_names * TYPEOF(the_type)) <= 1);
    END_CASE;
  END_IF;
END_FUNCTION; (* declared in: support_resource_schema *)
 
FUNCTION using_items(item : founded_item_select; checked_items : SET OF 
  founded_item_select) : SET OF founded_item_select;
LOCAL
  new_check_items : SET OF founded_item_select;
  result_items : SET OF founded_item_select;
  next_items : SET OF founded_item_select;
END_LOCAL;
  result_items := [];
  new_check_items := checked_items + item;
  next_items := QUERY(z <* bag_to_set(USEDIN(item, '')) | (
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION_ITEM' IN TYPEOF(z)) 
  OR ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.FOUNDED_ITEM' IN TYPEOF(z)));
  IF SIZEOF(next_items) > 0 THEN
    REPEAT i := 1 TO HIINDEX(next_items);
      IF NOT (next_items[i] IN new_check_items) THEN
        result_items := result_items + next_items[i] + using_items(next_items[i
        ], new_check_items);
      END_IF;
    END_REPEAT;
  END_IF;
  RETURN (result_items);
END_FUNCTION; (* declared in: representation_schema *)
 
FUNCTION using_representations(item : founded_item_select) : SET OF 
  representation;
LOCAL
  results : SET OF representation;
  result_bag :  BAG  OF representation;
  intermediate_items : SET OF founded_item_select;
END_LOCAL;
  results := [];
  result_bag := USEDIN(item, 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION.ITEMS');
  IF SIZEOF(result_bag) > 0 THEN
    REPEAT i := 1 TO HIINDEX(result_bag);
      results := results + result_bag[i];
    END_REPEAT;
  END_IF;
  intermediate_items := using_items(item, []);
  IF SIZEOF(intermediate_items) > 0 THEN
    REPEAT i := 1 TO HIINDEX(intermediate_items);
      result_bag := USEDIN(intermediate_items[i], 
      'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION.ITEMS');
      IF SIZEOF(result_bag) > 0 THEN
        REPEAT j := 1 TO HIINDEX(result_bag);
          results := results + result_bag[j];
        END_REPEAT;
      END_IF;
    END_REPEAT;
  END_IF;
  RETURN (results);
END_FUNCTION; (* declared in: representation_schema *)
 
FUNCTION valid_calendar_date(date : calendar_date) : LOGICAL;
  CASE date.month_component OF 
     1 : 
    RETURN ({1 <= date.day_component <= 31});
     2 : 
      BEGIN
        IF leap_year(date.year_component) THEN
          RETURN ({1 <= date.day_component <= 29});
        ELSE
          RETURN ({1 <= date.day_component <= 28});
        END_IF;
      END;
     3 : 
    RETURN ({1 <= date.day_component <= 31});
     4 : 
    RETURN ({1 <= date.day_component <= 30});
     5 : 
    RETURN ({1 <= date.day_component <= 31});
     6 : 
    RETURN ({1 <= date.day_component <= 30});
     7 : 
    RETURN ({1 <= date.day_component <= 31});
     8 : 
    RETURN ({1 <= date.day_component <= 31});
     9 : 
    RETURN ({1 <= date.day_component <= 30});
     10 : 
    RETURN ({1 <= date.day_component <= 31});
     11 : 
    RETURN ({1 <= date.day_component <= 30});
     12 : 
    RETURN ({1 <= date.day_component <= 31});
  END_CASE;
  RETURN (FALSE);
END_FUNCTION; (* declared in: date_time_schema *)
 
FUNCTION valid_measure_value(m : measure_value) : BOOLEAN;
  IF 'REAL' IN TYPEOF(m) THEN
    RETURN (m > 0.0);
  ELSE
    IF 'INTEGER' IN TYPEOF(m) THEN
      RETURN (m > 0);
    ELSE
      RETURN (TRUE);
    END_IF;
  END_IF;
END_FUNCTION; (* declared in: representation_schema *)
 
FUNCTION valid_time(time : local_time) : BOOLEAN;
  IF EXISTS(time.second_component) THEN
    RETURN (EXISTS(time.minute_component));
  ELSE
    RETURN (TRUE);
  END_IF;
END_FUNCTION; (* declared in: date_time_schema *)
 
FUNCTION valid_units(m : measure_with_unit) : BOOLEAN;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LENGTH_MEASURE' IN TYPEOF(m.
  value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MASS_MEASURE' IN TYPEOF(m.
  value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.TIME_MEASURE' IN TYPEOF(m.
  value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ELECTRIC_CURRENT_MEASURE' IN 
  TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.THERMODYNAMIC_TEMPERATURE_MEASURE' 
  IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CELSIUS_TEMPERATURE_MEASURE' IN 
  TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.AMOUNT_OF_SUBSTANCE_MEASURE' IN 
  TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LUMINOUS_INTENSITY_MEASURE' IN 
  TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PLANE_ANGLE_MEASURE' IN TYPEOF(m.
  value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SOLID_ANGLE_MEASURE' IN TYPEOF(m.
  value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.AREA_MEASURE' IN TYPEOF(m.
  value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VOLUME_MEASURE' IN TYPEOF(m.
  value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.RATIO_MEASURE' IN TYPEOF(m.
  value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.POSITIVE_LENGTH_MEASURE' IN 
  TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.POSITIVE_PLANE_ANGLE_MEASURE' IN 
  TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) <> dimensional_exponents(
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  RETURN (TRUE);
END_FUNCTION; (* declared in: measure_schema *)
 
FUNCTION value_range_wr1(agg : compound_item_definition) : BOOLEAN;
  IF (SIZEOF(agg) = 2) AND ((SIZEOF(QUERY(i1 <* agg | 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN 
  TYPEOF(i1))) = 2) OR (SIZEOF(QUERY(i2 <* agg | 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VALUE_REPRESENTATION_ITEM' IN TYPEOF
  (i2))) = 2)) THEN
    RETURN (TRUE);
  ELSE
    RETURN (FALSE);
  END_IF; 
END_FUNCTION; (* declared in: extended_measure_representation_mim *)
 
FUNCTION value_range_wr2(agg : compound_item_definition) : BOOLEAN;
  IF (SIZEOF(QUERY(i <* agg | i.name = 'upper limit')) = 1) AND (SIZEOF(QUERY(i
   <* agg | i.name = 'lower limit')) = 1) THEN
    RETURN (TRUE);
  ELSE
    RETURN (FALSE);
  END_IF; 
END_FUNCTION; (* declared in: extended_measure_representation_mim *)
 
FUNCTION value_range_wr3(agg : compound_item_definition) : BOOLEAN;
  IF SIZEOF(QUERY(i1 <* agg | (
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN 
  TYPEOF(i1)) AND (SIZEOF(QUERY(i2 <* agg | (
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN 
  TYPEOF(i2)) AND (i1 :<>: i2) AND (i1\measure_with_unit.unit_component :=: i2\
  measure_with_unit.unit_component))) = 1))) = 2 THEN
    RETURN (TRUE);
  ELSE
    RETURN (FALSE);
  END_IF; 
END_FUNCTION; (* declared in: extended_measure_representation_mim *)
 
FUNCTION vector_difference(arg1 : vector_or_direction; arg2 : 
  vector_or_direction) : vector;
LOCAL
  result : vector;
  res : direction;
  vec1 : direction;
  vec2 : direction;
  mag : REAL;
  mag1 : REAL;
  mag2 : REAL;
  ndim : INTEGER;
END_LOCAL;
  IF NOT EXISTS(arg1) OR NOT EXISTS(arg2) OR (arg1.dim <> arg2.dim) THEN
    RETURN (?);
  ELSE
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VECTOR' IN TYPEOF(arg1) THEN
      mag1 := arg1.magnitude;
      vec1 := arg1.orientation;
    ELSE
      mag1 := 1.0;
      vec1 := arg1;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VECTOR' IN TYPEOF(arg2) THEN
      mag2 := arg2.magnitude;
      vec2 := arg2.orientation;
    ELSE
      mag2 := 1.0;
      vec2 := arg2;
    END_IF;
    vec1 := normalise(vec1);
    vec2 := normalise(vec2);
    ndim := SIZEOF(vec1.direction_ratios);
    mag := 0.0;
    res := dummy_gri||direction(vec1.direction_ratios);
    REPEAT i := 1 TO ndim;
      res.direction_ratios[i] := mag1 * vec1.direction_ratios[i] + mag2 * vec2.
      direction_ratios[i];
      mag := mag + res.direction_ratios[i] * res.direction_ratios[i];
    END_REPEAT;
    IF mag > 0.0 THEN
      result := dummy_gri||vector(res, SQRT(mag));
    ELSE
      result := dummy_gri||vector(vec1, 0.0);
    END_IF;
  END_IF;
  RETURN (result);
END_FUNCTION; (* declared in: geometry_schema *)
 
RULE ap239_prdi_restrict_product_category_for_product FOR (product);
WHERE
  wr1 : SIZEOF(QUERY(p <* product | SIZEOF(QUERY(prpc <* USEDIN(p, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS'
    ) | prpc.name IN ['assembly', 'attachment slot', 'breakdown', 
    'breakdown element', 'conceptual product', 'detail', 'document', 'envelope'
    , 'functional breakdown', 'functionality', 'hybrid breakdown', 
    'hybrid element', 'interface connector', 'interface specification', 
    'justification', 'message', 'part', 'physical breakdown', 
    'physically realized product', 'prototype part', 'raw material', 
    'requirement', 'spare part', 'standard', 'system breakdown', 
    'system element', 'tool', 'zone breakdown', 'zone element'])) <> 1)) = 0;
END_RULE; (* declared in: ap239_product_definition_information_mim *)
 
RULE application_protocol_definition_required FOR (application_context);
WHERE
  wr1 : SIZEOF(QUERY(ac <* application_context | SIZEOF(QUERY(apd <* USEDIN(ac
    , 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLICATION_PROTOCOL_DEFINITION.APPLICATION')
     | apd.application_interpreted_model_schema_name = 
    'product_life_cycle_support')) > 0)) > 0;
END_RULE; (* declared in: ap239_product_life_cycle_support_mim *)
 
RULE compatible_dimension FOR (cartesian_point, direction, 
  representation_context, geometric_representation_context);
WHERE
  wr1 : SIZEOF(QUERY(x <* cartesian_point | SIZEOF(QUERY(y <* 
    geometric_representation_context | item_in_context(x, y) AND (HIINDEX(x.
    coordinates) <> y.coordinate_space_dimension))) > 0)) = 0;
  wr2 : SIZEOF(QUERY(x <* direction | SIZEOF(QUERY(y <* 
    geometric_representation_context | item_in_context(x, y) AND (HIINDEX(x.
    direction_ratios) <> y.coordinate_space_dimension))) > 0)) = 0;
END_RULE; (* declared in: geometry_schema *)
 
RULE restrict_language_assignment_per_attribute FOR (
  attribute_language_assignment);
WHERE
  wr1 : SIZEOF(QUERY(ala1 <* attribute_language_assignment | SIZEOF(QUERY(it
     <* ala1.items | SIZEOF(QUERY(ala2 <* USEDIN(it, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS'
    ) | (ala1\attribute_classification_assignment.attribute_name = ala2\
    attribute_classification_assignment.attribute_name) AND (ala1\
    attribute_classification_assignment.assigned_class :=: ala2\
    attribute_classification_assignment.assigned_class))) > 1)) > 0)) = 0;
END_RULE; (* declared in: multi_linguism_mim *)
 
RULE subtype_exclusiveness_representation_item FOR (representation_item);
WHERE
  wr1 : SIZEOF(QUERY(cri <* representation_item | NOT type_check_function(cri, 
    ['AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MEASURE_REPRESENTATION_ITEM', 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VALUE_REPRESENTATION_ITEM', 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.COMPOUND_REPRESENTATION_ITEM'], 3)
    )) = 0;
END_RULE; (* declared in: extended_measure_representation_mim *)
 
RULE validate_dependently_instantiable_entity_data_types FOR (
  attribute_value_role, cartesian_transformation_operator, classification_role
  , document_usage_constraint, effectivity_context_role, experience_role, 
  experience_type_role, location_representation_role, location_role, 
  organization_type_role, person_type_definition_role, person_type_role, 
  placement, point, position_in_organization_role, 
  position_in_organization_type_role, qualification_type_role, 
  representation_map, vector);
   (* generated by longform-generator *)
LOCAL
  number_of_input_instances : INTEGER;
  previous_in_chain : LIST OF GENERIC := [];
  set_of_input_types : SET OF STRING := [];
  all_instances : SET OF GENERIC := [];
END_LOCAL;
  all_instances := vector + representation_map + qualification_type_role + 
  position_in_organization_type_role + position_in_organization_role + point + 
  placement + person_type_role + person_type_definition_role + 
  organization_type_role + location_role + location_representation_role + 
  experience_type_role + experience_role + effectivity_context_role + 
  document_usage_constraint + classification_role + 
  cartesian_transformation_operator + attribute_value_role;
  number_of_input_instances := SIZEOF(all_instances);
  REPEAT i := 1 TO number_of_input_instances;
    set_of_input_types := set_of_input_types + TYPEOF(all_instances[i]);
  END_REPEAT;
WHERE
  wr1 : dependently_instantiated(all_instances, set_of_input_types, 
    previous_in_chain);
END_RULE;
 
END_SCHEMA;
