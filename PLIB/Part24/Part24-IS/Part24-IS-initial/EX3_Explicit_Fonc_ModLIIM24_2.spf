ISO-10303-21;
HEADER;
FILE_DESCRIPTION(('PLIB EXPLICIT FUNCTIONAL MODEL EXAMPLE 1'), '1');
FILE_NAME('P25_fm_explicit_p101.p21',
          '2001-07-30T18:38:14',
          (''),
          ('LISI/ENSMA'),
          'ECCO RUNTIME SYSTEM BUILT-IN PREPROCESSOR V2.3.3',
          'ECCO RUNTIME SYSTEM V2.3.3',
          '');
FILE_SCHEMA(('ISO13584_F_M_IIM_LIBRARY_IMPLICIT_SCHEMA'));
ENDSEC;

DATA;

/* Global library description */
#2=LIBRARY_IN_STANDARD_FORMAT($, $, $, $, (), #30, #11, (#7), (#12), (#20, #30,
#40), (#50, #60, #140, #130), (), #3, $, $, ());
#3=ITEM_NAMES(LABEL('Explicit functional model: Geometry'), (), LABEL('Geometry'), $,
$);
#6=ORGANIZATION('LISI/ENSMA', 'LISI/ENSMA', '');
#7=STANDARD_SIMPLE_PROGRAM_PROTOCOL(#6, $, 'ISO_IS_13584_31',
'001', $, #8, $, 'FORTRAN', .SOURCE., $, $, $);
#8=ITEM_NAMES(LABEL('Geometric prog. interface'), (),
LABEL('ISO_IS_13584_31'), $, $);
#11=LIBRARY_IIM_IDENTIFICATION($, 'IS', 'ISO_13584_24_2', 2001, '3', $, ());
#12=VIEW_EXCHANGE_PROTOCOL_IDENTIFICATION($, 'IS', 'ISO13584_101', 2001, '2D', $,
(#7), $);
#10=GLOBAL_LANGUAGE_ASSIGNMENT('en');

/* DICTIONARY DESCRIPTION */
/*BSU for suppliers */
#20=SUPPLIER_BSU('INA', *);	/* INA code: parts family supplier*/
#30=SUPPLIER_BSU('9/19860073600021', *);
/* LISI/ENSMA code in the coding scheme ICD=0009: SIRET number */
#40=SUPPLIER_BSU('0112/1///13584_101_1', *);
/* Identification of ISO 13584-101 according to ISO 13584-26 */

/* BSU for component_class */
#50=CLASS_BSU('Bearing', '001', #20);
#60=CLASS_BSU('PAW', '001', #20);
#130=CLASS_BSU('PAW_Geometry', '001', #30);
#140=CLASS_BSU('basic_geometry', '001', #40);

/* BSU for properties */
#90=PROPERTY_BSU('d_in', '001', #50);
#100=PROPERTY_BSU('d_out', '001', #50);
#110=PROPERTY_BSU('e', '001', #50);
#150=PROPERTY_BSU('geometry_level', '001', #140);
#160=PROPERTY_BSU('detail_level', '001', #140);
#170=PROPERTY_BSU('side', '001', #140);
#180=PROPERTY_BSU('prg', '001', #130);
#200=PROPERTY_BSU('variant', '001', #140);
#210=PROPERTY_BSU('unreg_variant', '001', #140);

/* v_c_v range */
#155=VIEW_CONTROL_VARIABLE_RANGE(#150, 1, 1);
#165=VIEW_CONTROL_VARIABLE_RANGE(#160, 2, 2);
#175=VIEW_CONTROL_VARIABLE_RANGE(#170, 1, 6);
#205=VIEW_CONTROL_VARIABLE_RANGE (#200, 1, 1);
#215=VIEW_CONTROL_VARIABLE_RANGE (#210, 0, 0);

/* supplier description */
#31=SUPPLIER_ELEMENT(#30, $, '001', #32, #33);
#32=ORGANIZATION('LISI/ENSMA', 'LISI/ENSMA', '');
#33=ADDRESS($, $, $, $, $, $, $, 'FRANCE', $, $, $, $);

/* Dictionary properties description */
/* prg */
#91=REPRESENTATION_P_DET (#180, $, '001', #92, TEXT('variable used to
reference geometry programs'), $, $, $, $, (), $, 'A58', #93, $);
#92=ITEM_NAMES (LABEL('related program'), (), LABEL(''), $, $);
#93=PROGRAM_REFERENCE_TYPE (('ISO13584_F_M_IIM_LIBRARY_IMPLICIT_SCHEMA.PROGRAM_REFERENCE'));

/* Dictionary class description */
/* Functional model class view_of definition*/
#71=FM_CLASS_VIEW_OF(#130, $, '001', #72, TEXT('Explicit functional model
class describing the 2d standard geometry of PAW'), $, $, $, $, (#180),
(), *, *, *, *, *, #140, (#155, #165, #175, #205, #215), (#150, #160, #170, #200, #210),
(), (), (), (), (), (), (), (), #60, (#90, #100, #110), (),(),());
#72=ITEM_NAMES(LABEL('Functional model class of PAW'), (), LABEL('fm class of PAW'), $, $);

/* LIBRARY DESCRIPTION */

#1300=EXPLICIT_FUNCTIONAL_MODEL_CLASS_EXTENSION(#130, (#2501, #2502, #2503,
#2504, #2505, #2506), (#7), (#12), '001', '001', (), (),
(#90, #100, #110, #170),
(#3000, #3010, #3020, #3030, #3040, #3050,
#3100, #3110, #3120, #3130, #3140, #3150,
#3200, #3210, #3220, #3230, #3240, #3250,
#3300, #3310, #3320, #3330, #3340, #3350,
#3400, #3410, #3420, #3430, #3440, #3450),
.T., $, (#90, #100, #110), #180, $, $, (), $);

#2501=PROGRAM_REFERENCE(#7, #2601, 'Add1_PAW', 'PAW_p1', (#90, #100, #110), (), ());
#2502=PROGRAM_REFERENCE(#7, #2602, 'Add2_PAW', 'PAW_p2', (#90, #100, #110), (), ());
#2503=PROGRAM_REFERENCE(#7, #2603, 'Add3_PAW', 'PAW_p3', (#90, #100, #110), (), ());
#2504=PROGRAM_REFERENCE(#7, #2604, 'Add4_PAW', 'PAW_p4', (#90, #100, #110), (), ());
#2505=PROGRAM_REFERENCE(#7, #2605, 'Add5_PAW', 'PAW_p5', (#90, #100, #110), (), ());
#2506=PROGRAM_REFERENCE(#7, #2606, 'Add6_PAW', 'PAW_p6', (#90, #100, #110), (), ());

#2601=NOT_TRANSLATABLE_EXTERNAL_CONTENT((#2701));
#2602=NOT_TRANSLATABLE_EXTERNAL_CONTENT((#2702));
#2603=NOT_TRANSLATABLE_EXTERNAL_CONTENT((#2703));
#2604=NOT_TRANSLATABLE_EXTERNAL_CONTENT((#2704));
#2605=NOT_TRANSLATABLE_EXTERNAL_CONTENT((#2705));
#2606=NOT_TRANSLATABLE_EXTERNAL_CONTENT((#2706));
#2701=LANGUAGE_SPECIFIC_CONTENT((#2801), #2801, $);
#2702=LANGUAGE_SPECIFIC_CONTENT((#2802), #2802, $);
#2703=LANGUAGE_SPECIFIC_CONTENT((#2803), #2803, $);
#2704=LANGUAGE_SPECIFIC_CONTENT((#2804), #2804, $);
#2705=LANGUAGE_SPECIFIC_CONTENT((#2805), #2805, $);
#2706=LANGUAGE_SPECIFIC_CONTENT((#2806), #2806, $);
#2801=EXTERNAL_FILE_UNIT('PAW_p1.for', '7bit');
#2802=EXTERNAL_FILE_UNIT('PAW_p2.for', '7bit');
#2803=EXTERNAL_FILE_UNIT('PAW_p3.for', '7bit');
#2804=EXTERNAL_FILE_UNIT('PAW_p4.for', '7bit');
#2805=EXTERNAL_FILE_UNIT('PAW_p5.for', '7bit');
#2806=EXTERNAL_FILE_UNIT('PAW_p6.for', '7bit');

/*
     GM      |  					FV                          | FM
---------------------------------------------------------------------
d_in d_out e | side | geom_level | det_level | var | unreg_var | prg

*/

#3000=LIB_F_MODEL_INSTANCE(#130, (#3001, #3008, #3009, #3002, #3003, #3004, #3005, #3006, #3007), ());
#3001=PROPERTY_VALUE(REAL_VALUE(10.0), #90);
#3008=PROPERTY_VALUE(REAL_VALUE(1.0), #100);
#3009=PROPERTY_VALUE(REAL_VALUE(15.0), #110);
#3002=PROPERTY_VALUE(INTEGER(1), #170);
#3003=PROPERTY_VALUE(INTEGER(1), #150);
#3004=PROPERTY_VALUE(INTEGER(2), #160);
#3005=PROPERTY_VALUE(INTEGER(1), #200);
#3006=PROPERTY_VALUE(INTEGER(0), #210);
#3007=PROPERTY_VALUE(#2501, #180);
#3010=LIB_F_MODEL_INSTANCE(#130, (#3011, #3018, #3019, #3012, #3013, #3014, #3015, #3016, #3017), ());
#3011=PROPERTY_VALUE(REAL_VALUE(10.0), #90);
#3018=PROPERTY_VALUE(REAL_VALUE(1.0), #100);
#3019=PROPERTY_VALUE(REAL_VALUE(15.0), #110);
#3012=PROPERTY_VALUE(INTEGER(2), #170);
#3013=PROPERTY_VALUE(INTEGER(1), #150);
#3014=PROPERTY_VALUE(INTEGER(2), #160);
#3015=PROPERTY_VALUE(INTEGER(1), #200);
#3016=PROPERTY_VALUE(INTEGER(0), #210);
#3017=PROPERTY_VALUE(#2502, #180);
#3020=LIB_F_MODEL_INSTANCE(#130, (#3021, #3028, #3029, #3022, #3023, #3024, #3025, #3026, #3027), ());
#3021=PROPERTY_VALUE(REAL_VALUE(10.0), #90);
#3028=PROPERTY_VALUE(REAL_VALUE(1.0), #100);
#3029=PROPERTY_VALUE(REAL_VALUE(15.0), #110);
#3022=PROPERTY_VALUE(INTEGER(3), #170);
#3023=PROPERTY_VALUE(INTEGER(1), #150);
#3024=PROPERTY_VALUE(INTEGER(2), #160);
#3025=PROPERTY_VALUE(INTEGER(1), #200);
#3026=PROPERTY_VALUE(INTEGER(0), #210);
#3027=PROPERTY_VALUE(#2503, #180);
#3030=LIB_F_MODEL_INSTANCE(#130, (#3031, #3038, #3039, #3032, #3033, #3034, #3035, #3036, #3037), ());
#3031=PROPERTY_VALUE(REAL_VALUE(10.0), #90);
#3038=PROPERTY_VALUE(REAL_VALUE(1.0), #100);
#3039=PROPERTY_VALUE(REAL_VALUE(15.0), #110);
#3032=PROPERTY_VALUE(INTEGER(4), #170);
#3033=PROPERTY_VALUE(INTEGER(1), #150);
#3034=PROPERTY_VALUE(INTEGER(2), #160);
#3035=PROPERTY_VALUE(INTEGER(1), #200);
#3036=PROPERTY_VALUE(INTEGER(0), #210);
#3037=PROPERTY_VALUE(#2504, #180);
#3040=LIB_F_MODEL_INSTANCE(#130, (#3041, #3048, #3049, #3042, #3043, #3044, #3045, #3046, #3047), ());
#3041=PROPERTY_VALUE(REAL_VALUE(10.0), #90);
#3048=PROPERTY_VALUE(REAL_VALUE(1.0), #100);
#3049=PROPERTY_VALUE(REAL_VALUE(15.0), #110);
#3042=PROPERTY_VALUE(INTEGER(5), #170);
#3043=PROPERTY_VALUE(INTEGER(1), #150);
#3044=PROPERTY_VALUE(INTEGER(2), #160);
#3045=PROPERTY_VALUE(INTEGER(1), #200);
#3046=PROPERTY_VALUE(INTEGER(0), #210);
#3047=PROPERTY_VALUE(#2505, #180);
#3050=LIB_F_MODEL_INSTANCE(#130, (#3051, #3058, #3059, #3052, #3053, #3054, #3055, #3056, #3057), ());
#3051=PROPERTY_VALUE(REAL_VALUE(10.0), #90);
#3058=PROPERTY_VALUE(REAL_VALUE(1.0), #100);
#3059=PROPERTY_VALUE(REAL_VALUE(15.0), #110);
#3052=PROPERTY_VALUE(INTEGER(6), #170);
#3053=PROPERTY_VALUE(INTEGER(1), #150);
#3054=PROPERTY_VALUE(INTEGER(2), #160);
#3055=PROPERTY_VALUE(INTEGER(1), #200);
#3056=PROPERTY_VALUE(INTEGER(0), #210);
#3057=PROPERTY_VALUE(#2506, #180);

#3100=LIB_F_MODEL_INSTANCE(#130, (#3101, #3108, #3109, #3102, #3103, #3104, #3105, #3106, #3107), ());
#3101=PROPERTY_VALUE(REAL_VALUE(11.0), #90);
#3108=PROPERTY_VALUE(REAL_VALUE(1.0), #100);
#3109=PROPERTY_VALUE(REAL_VALUE(16.5), #110);
#3102=PROPERTY_VALUE(INTEGER(1), #170);
#3103=PROPERTY_VALUE(INTEGER(1), #150);
#3104=PROPERTY_VALUE(INTEGER(2), #160);
#3105=PROPERTY_VALUE(INTEGER(1), #200);
#3106=PROPERTY_VALUE(INTEGER(0), #210);
#3107=PROPERTY_VALUE(#2501, #180);
#3110=LIB_F_MODEL_INSTANCE(#130, (#3111, #3118, #3119, #3112, #3113, #3114, #3115, #3116, #3117), ());
#3111=PROPERTY_VALUE(REAL_VALUE(11.0), #90);
#3118=PROPERTY_VALUE(REAL_VALUE(1.0), #100);
#3119=PROPERTY_VALUE(REAL_VALUE(16.5), #110);
#3112=PROPERTY_VALUE(INTEGER(2), #170);
#3113=PROPERTY_VALUE(INTEGER(1), #150);
#3114=PROPERTY_VALUE(INTEGER(2), #160);
#3115=PROPERTY_VALUE(INTEGER(1), #200);
#3116=PROPERTY_VALUE(INTEGER(0), #210);
#3117=PROPERTY_VALUE(#2502, #180);
#3120=LIB_F_MODEL_INSTANCE(#130, (#3121, #3128, #3129, #3122, #3123, #3124, #3125, #3126, #3127), ());
#3121=PROPERTY_VALUE(REAL_VALUE(11.0), #90);
#3128=PROPERTY_VALUE(REAL_VALUE(1.0), #100);
#3129=PROPERTY_VALUE(REAL_VALUE(16.5), #110);
#3122=PROPERTY_VALUE(INTEGER(3), #170);
#3123=PROPERTY_VALUE(INTEGER(1), #150);
#3124=PROPERTY_VALUE(INTEGER(2), #160);
#3125=PROPERTY_VALUE(INTEGER(1), #200);
#3126=PROPERTY_VALUE(INTEGER(0), #210);
#3127=PROPERTY_VALUE(#2503, #180);
#3130=LIB_F_MODEL_INSTANCE(#130, (#3131, #3138, #3139, #3132, #3133, #3134, #3135, #3136, #3137), ());
#3131=PROPERTY_VALUE(REAL_VALUE(11.0), #90);
#3138=PROPERTY_VALUE(REAL_VALUE(1.0), #100);
#3139=PROPERTY_VALUE(REAL_VALUE(16.5), #110);
#3132=PROPERTY_VALUE(INTEGER(4), #170);
#3133=PROPERTY_VALUE(INTEGER(1), #150);
#3134=PROPERTY_VALUE(INTEGER(2), #160);
#3135=PROPERTY_VALUE(INTEGER(1), #200);
#3136=PROPERTY_VALUE(INTEGER(0), #210);
#3137=PROPERTY_VALUE(#2504, #180);
#3140=LIB_F_MODEL_INSTANCE(#130, (#3141, #3148, #3149, #3142, #3143, #3144, #3145, #3146, #3147), ());
#3141=PROPERTY_VALUE(REAL_VALUE(11.0), #90);
#3148=PROPERTY_VALUE(REAL_VALUE(1.0), #100);
#3149=PROPERTY_VALUE(REAL_VALUE(16.5), #110);
#3142=PROPERTY_VALUE(INTEGER(5), #170);
#3143=PROPERTY_VALUE(INTEGER(1), #150);
#3144=PROPERTY_VALUE(INTEGER(2), #160);
#3145=PROPERTY_VALUE(INTEGER(1), #200);
#3146=PROPERTY_VALUE(INTEGER(0), #210);
#3147=PROPERTY_VALUE(#2505, #180);
#3150=LIB_F_MODEL_INSTANCE(#130, (#3151, #3158, #3159, #3152, #3153, #3154, #3155, #3156, #3157), ());
#3151=PROPERTY_VALUE(REAL_VALUE(11.0), #90);
#3158=PROPERTY_VALUE(REAL_VALUE(1.0), #100);
#3159=PROPERTY_VALUE(REAL_VALUE(16.5), #110);
#3152=PROPERTY_VALUE(INTEGER(6), #170);
#3153=PROPERTY_VALUE(INTEGER(1), #150);
#3154=PROPERTY_VALUE(INTEGER(2), #160);
#3155=PROPERTY_VALUE(INTEGER(1), #200);
#3156=PROPERTY_VALUE(INTEGER(0), #210);
#3157=PROPERTY_VALUE(#2506, #180);

#3200=LIB_F_MODEL_INSTANCE(#130, (#3201, #3208, #3209, #3202, #3203, #3204, #3205, #3206, #3207), ());
#3201=PROPERTY_VALUE(REAL_VALUE(13.0), #90);
#3208=PROPERTY_VALUE(REAL_VALUE(2.0), #100);
#3209=PROPERTY_VALUE(REAL_VALUE(19.5), #110);
#3202=PROPERTY_VALUE(INTEGER(1), #170);
#3203=PROPERTY_VALUE(INTEGER(1), #150);
#3204=PROPERTY_VALUE(INTEGER(2), #160);
#3205=PROPERTY_VALUE(INTEGER(1), #200);
#3206=PROPERTY_VALUE(INTEGER(0), #210);
#3207=PROPERTY_VALUE(#2501, #180);
#3210=LIB_F_MODEL_INSTANCE(#130, (#3211, #3218, #3219, #3212, #3213, #3214, #3215, #3216, #3217), ());
#3211=PROPERTY_VALUE(REAL_VALUE(13.0), #90);
#3218=PROPERTY_VALUE(REAL_VALUE(2.0), #100);
#3219=PROPERTY_VALUE(REAL_VALUE(19.5), #110);
#3212=PROPERTY_VALUE(INTEGER(2), #170);
#3213=PROPERTY_VALUE(INTEGER(1), #150);
#3214=PROPERTY_VALUE(INTEGER(2), #160);
#3215=PROPERTY_VALUE(INTEGER(1), #200);
#3216=PROPERTY_VALUE(INTEGER(0), #210);
#3217=PROPERTY_VALUE(#2502, #180);
#3220=LIB_F_MODEL_INSTANCE(#130, (#3221, #3228, #3229, #3222, #3223, #3224, #3225, #3226, #3227), ());
#3221=PROPERTY_VALUE(REAL_VALUE(13.0), #90);
#3228=PROPERTY_VALUE(REAL_VALUE(2.0), #100);
#3229=PROPERTY_VALUE(REAL_VALUE(19.5), #110);
#3222=PROPERTY_VALUE(INTEGER(3), #170);
#3223=PROPERTY_VALUE(INTEGER(1), #150);
#3224=PROPERTY_VALUE(INTEGER(2), #160);
#3225=PROPERTY_VALUE(INTEGER(1), #200);
#3226=PROPERTY_VALUE(INTEGER(0), #210);
#3227=PROPERTY_VALUE(#2503, #180);
#3230=LIB_F_MODEL_INSTANCE(#130, (#3231, #3238, #3239, #3232, #3233, #3234, #3235, #3236, #3237), ());
#3231=PROPERTY_VALUE(REAL_VALUE(13.0), #90);
#3238=PROPERTY_VALUE(REAL_VALUE(2.0), #100);
#3239=PROPERTY_VALUE(REAL_VALUE(19.5), #110);
#3232=PROPERTY_VALUE(INTEGER(4), #170);
#3233=PROPERTY_VALUE(INTEGER(1), #150);
#3234=PROPERTY_VALUE(INTEGER(2), #160);
#3235=PROPERTY_VALUE(INTEGER(1), #200);
#3236=PROPERTY_VALUE(INTEGER(0), #210);
#3237=PROPERTY_VALUE(#2504, #180);
#3240=LIB_F_MODEL_INSTANCE(#130, (#3241, #3248, #3249, #3242, #3243, #3244, #3245, #3246, #3247), ());
#3241=PROPERTY_VALUE(REAL_VALUE(13.0), #90);
#3248=PROPERTY_VALUE(REAL_VALUE(2.0), #100);
#3249=PROPERTY_VALUE(REAL_VALUE(19.5), #110);
#3242=PROPERTY_VALUE(INTEGER(5), #170);
#3243=PROPERTY_VALUE(INTEGER(1), #150);
#3244=PROPERTY_VALUE(INTEGER(2), #160);
#3245=PROPERTY_VALUE(INTEGER(1), #200);
#3246=PROPERTY_VALUE(INTEGER(0), #210);
#3247=PROPERTY_VALUE(#2505, #180);
#3250=LIB_F_MODEL_INSTANCE(#130, (#3251, #3258, #3259, #3252, #3253, #3254, #3255, #3256, #3257), ());
#3251=PROPERTY_VALUE(REAL_VALUE(13.0), #90);
#3258=PROPERTY_VALUE(REAL_VALUE(2.0), #100);
#3259=PROPERTY_VALUE(REAL_VALUE(19.5), #110);
#3252=PROPERTY_VALUE(INTEGER(6), #170);
#3253=PROPERTY_VALUE(INTEGER(1), #150);
#3254=PROPERTY_VALUE(INTEGER(2), #160);
#3255=PROPERTY_VALUE(INTEGER(1), #200);
#3256=PROPERTY_VALUE(INTEGER(0), #210);
#3257=PROPERTY_VALUE(#2506, #180);

#3300=LIB_F_MODEL_INSTANCE(#130, (#3301, #3308, #3309, #3302, #3303, #3304, #3305, #3306, #3307), ());
#3301=PROPERTY_VALUE(REAL_VALUE(17.0), #90);
#3308=PROPERTY_VALUE(REAL_VALUE(3.0), #100);
#3309=PROPERTY_VALUE(REAL_VALUE(25.5), #110);
#3302=PROPERTY_VALUE(INTEGER(1), #170);
#3303=PROPERTY_VALUE(INTEGER(1), #150);
#3304=PROPERTY_VALUE(INTEGER(2), #160);
#3305=PROPERTY_VALUE(INTEGER(1), #200);
#3306=PROPERTY_VALUE(INTEGER(0), #210);
#3307=PROPERTY_VALUE(#2501, #180);
#3310=LIB_F_MODEL_INSTANCE(#130, (#3311, #3318, #3319, #3312, #3313, #3314, #3315, #3316, #3317), ());
#3311=PROPERTY_VALUE(REAL_VALUE(17.0), #90);
#3318=PROPERTY_VALUE(REAL_VALUE(3.0), #100);
#3319=PROPERTY_VALUE(REAL_VALUE(25.5), #110);
#3312=PROPERTY_VALUE(INTEGER(2), #170);
#3313=PROPERTY_VALUE(INTEGER(1), #150);
#3314=PROPERTY_VALUE(INTEGER(2), #160);
#3315=PROPERTY_VALUE(INTEGER(1), #200);
#3316=PROPERTY_VALUE(INTEGER(0), #210);
#3317=PROPERTY_VALUE(#2502, #180);
#3320=LIB_F_MODEL_INSTANCE(#130, (#3321, #3328, #3329, #3322, #3323, #3324, #3325, #3326, #3327), ());
#3321=PROPERTY_VALUE(REAL_VALUE(17.0), #90);
#3328=PROPERTY_VALUE(REAL_VALUE(3.0), #100);
#3329=PROPERTY_VALUE(REAL_VALUE(25.5), #110);
#3322=PROPERTY_VALUE(INTEGER(3), #170);
#3323=PROPERTY_VALUE(INTEGER(1), #150);
#3324=PROPERTY_VALUE(INTEGER(2), #160);
#3325=PROPERTY_VALUE(INTEGER(1), #200);
#3326=PROPERTY_VALUE(INTEGER(0), #210);
#3327=PROPERTY_VALUE(#2503, #180);
#3330=LIB_F_MODEL_INSTANCE(#130, (#3331, #3338, #3339, #3332, #3333, #3334, #3335, #3336, #3337), ());
#3331=PROPERTY_VALUE(REAL_VALUE(17.0), #90);
#3338=PROPERTY_VALUE(REAL_VALUE(3.0), #100);
#3339=PROPERTY_VALUE(REAL_VALUE(25.5), #110);
#3332=PROPERTY_VALUE(INTEGER(4), #170);
#3333=PROPERTY_VALUE(INTEGER(1), #150);
#3334=PROPERTY_VALUE(INTEGER(2), #160);
#3335=PROPERTY_VALUE(INTEGER(1), #200);
#3336=PROPERTY_VALUE(INTEGER(0), #210);
#3337=PROPERTY_VALUE(#2504, #180);
#3340=LIB_F_MODEL_INSTANCE(#130, (#3341, #3348, #3349, #3342, #3343, #3344, #3345, #3346, #3347), ());
#3341=PROPERTY_VALUE(REAL_VALUE(17.0), #90);
#3348=PROPERTY_VALUE(REAL_VALUE(3.0), #100);
#3349=PROPERTY_VALUE(REAL_VALUE(25.5), #110);
#3342=PROPERTY_VALUE(INTEGER(5), #170);
#3343=PROPERTY_VALUE(INTEGER(1), #150);
#3344=PROPERTY_VALUE(INTEGER(2), #160);
#3345=PROPERTY_VALUE(INTEGER(1), #200);
#3346=PROPERTY_VALUE(INTEGER(0), #210);
#3347=PROPERTY_VALUE(#2505, #180);
#3350=LIB_F_MODEL_INSTANCE(#130, (#3351, #3358, #3359, #3352, #3353, #3354, #3355, #3356, #3357), ());
#3351=PROPERTY_VALUE(REAL_VALUE(17.0), #90);
#3358=PROPERTY_VALUE(REAL_VALUE(3.0), #100);
#3359=PROPERTY_VALUE(REAL_VALUE(25.5), #110);
#3352=PROPERTY_VALUE(INTEGER(6), #170);
#3353=PROPERTY_VALUE(INTEGER(1), #150);
#3354=PROPERTY_VALUE(INTEGER(2), #160);
#3355=PROPERTY_VALUE(INTEGER(1), #200);
#3356=PROPERTY_VALUE(INTEGER(0), #210);
#3357=PROPERTY_VALUE(#2506, #180);

#3400=LIB_F_MODEL_INSTANCE(#130, (#3401, #3408, #3409, #3402, #3403, #3404, #3405, #3406, #3407), ());
#3401=PROPERTY_VALUE(REAL_VALUE(19.0), #90);
#3408=PROPERTY_VALUE(REAL_VALUE(4.0), #100);
#3409=PROPERTY_VALUE(REAL_VALUE(28.5), #110);
#3402=PROPERTY_VALUE(INTEGER(1), #170);
#3403=PROPERTY_VALUE(INTEGER(1), #150);
#3404=PROPERTY_VALUE(INTEGER(2), #160);
#3405=PROPERTY_VALUE(INTEGER(1), #200);
#3406=PROPERTY_VALUE(INTEGER(0), #210);
#3407=PROPERTY_VALUE(#2501, #180);
#3410=LIB_F_MODEL_INSTANCE(#130, (#3411, #3418, #3419, #3412, #3413, #3414, #3415, #3416, #3417), ());
#3411=PROPERTY_VALUE(REAL_VALUE(19.0), #90);
#3418=PROPERTY_VALUE(REAL_VALUE(4.0), #100);
#3419=PROPERTY_VALUE(REAL_VALUE(28.5), #110);
#3412=PROPERTY_VALUE(INTEGER(2), #170);
#3413=PROPERTY_VALUE(INTEGER(1), #150);
#3414=PROPERTY_VALUE(INTEGER(2), #160);
#3415=PROPERTY_VALUE(INTEGER(1), #200);
#3416=PROPERTY_VALUE(INTEGER(0), #210);
#3417=PROPERTY_VALUE(#2502, #180);
#3420=LIB_F_MODEL_INSTANCE(#130, (#3421, #3428, #3429, #3422, #3423, #3424, #3425, #3426, #3427), ());
#3421=PROPERTY_VALUE(REAL_VALUE(19.0), #90);
#3428=PROPERTY_VALUE(REAL_VALUE(4.0), #100);
#3429=PROPERTY_VALUE(REAL_VALUE(28.5), #110);
#3422=PROPERTY_VALUE(INTEGER(3), #170);
#3423=PROPERTY_VALUE(INTEGER(1), #150);
#3424=PROPERTY_VALUE(INTEGER(2), #160);
#3425=PROPERTY_VALUE(INTEGER(1), #200);
#3426=PROPERTY_VALUE(INTEGER(0), #210);
#3427=PROPERTY_VALUE(#2503, #180);
#3430=LIB_F_MODEL_INSTANCE(#130, (#3431, #3438, #3439, #3432, #3433, #3434, #3435, #3436, #3437), ());
#3431=PROPERTY_VALUE(REAL_VALUE(19.0), #90);
#3438=PROPERTY_VALUE(REAL_VALUE(4.0), #100);
#3439=PROPERTY_VALUE(REAL_VALUE(28.5), #110);
#3432=PROPERTY_VALUE(INTEGER(4), #170);
#3433=PROPERTY_VALUE(INTEGER(1), #150);
#3434=PROPERTY_VALUE(INTEGER(2), #160);
#3435=PROPERTY_VALUE(INTEGER(1), #200);
#3436=PROPERTY_VALUE(INTEGER(0), #210);
#3437=PROPERTY_VALUE(#2504, #180);
#3440=LIB_F_MODEL_INSTANCE(#130, (#3441, #3448, #3449, #3442, #3443, #3444, #3445, #3446, #3447), ());
#3441=PROPERTY_VALUE(REAL_VALUE(19.0), #90);
#3448=PROPERTY_VALUE(REAL_VALUE(4.0), #100);
#3449=PROPERTY_VALUE(REAL_VALUE(28.5), #110);
#3442=PROPERTY_VALUE(INTEGER(5), #170);
#3443=PROPERTY_VALUE(INTEGER(1), #150);
#3444=PROPERTY_VALUE(INTEGER(2), #160);
#3445=PROPERTY_VALUE(INTEGER(1), #200);
#3446=PROPERTY_VALUE(INTEGER(0), #210);
#3447=PROPERTY_VALUE(#2505, #180);
#3450=LIB_F_MODEL_INSTANCE(#130, (#3451, #3458, #3459, #3452, #3453, #3454, #3455, #3456, #3457), ());
#3451=PROPERTY_VALUE(REAL_VALUE(19.0), #90);
#3458=PROPERTY_VALUE(REAL_VALUE(4.0), #100);
#3459=PROPERTY_VALUE(REAL_VALUE(28.5), #110);
#3452=PROPERTY_VALUE(INTEGER(6), #170);
#3453=PROPERTY_VALUE(INTEGER(1), #150);
#3454=PROPERTY_VALUE(INTEGER(2), #160);
#3455=PROPERTY_VALUE(INTEGER(1), #200);
#3456=PROPERTY_VALUE(INTEGER(0), #210);
#3457=PROPERTY_VALUE(#2506, #180);

ENDSEC;
END-ISO-10303-21;
